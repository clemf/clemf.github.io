{"version":3,"sources":["webpack:///static/js/vendor.ea4ea9c080128c8f9ab7.js","webpack:///./~/glitch-canvas/dist/glitch-canvas.js","webpack:///./~/vue/dist/vue.common.js","webpack:///./~/css-loader/lib/css-base.js","webpack:///./~/vue-style-loader/addStyles.js"],"names":["webpackJsonp","module","exports","__webpack_require__","require","f","e","t","n","r","s","o","u","a","i","Error","code","l","call","length","1","_dereq_","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_extends","assign","target","arguments","source","key","prototype","hasOwnProperty","params","getParams","getInput","result","api","inputFn","inputMethods","getOutput","outputFn","outputMethods","noTransform","x","fromImage","inputOptions","setInput","_fromImage2","fromImageData","toDataURL","outputOptions","setOutput","toImage","_toImage2","toImageData","_toImageData2","fn","canResolve","Promise","resolve","reject","err","isReady","getResult","base64URL","then","imageData","glitch","_imageDataToBase2","quality","glitchInWorker","worker","addEventListener","event","data","postMessage","imageDataWidth","width","imageDataHeight","height","_sanitizeInput2","_webworkify2","_glitchWorker2","_sanitizeInput","_fromImage","_toImage","_toImageData","_imageDataToBase","_glitchImageData","_webworkify","_glitchWorker","./glitch/browser/imageDataToBase64","./glitch/glitchImageData","./input/browser/fromImage","./input/sanitizeInput","./output/browser/toImage","./output/toImageData","./workers/glitchWorker","webworkify","2","base64Chars","base64Map","split","reversedBase64Map","forEach","val","map","reverse","3","digitNum","currrentChar","prev","len","_base64Map","charAt","push","./base64Map","4","_isImageData2","canvas","_canvasBrowserify2","ctx","getContext","putImageData","_canvasBrowserify","_isImageData","../../util/isImageData","canvas-browserify","5","byteArray","byteNum","currentByte","previousByte","join","6","seed","amount","iterationCount","headerLength","_jpgHeaderLength2","maxIndex","amountPercent","seedPercent","iterationIndex","minPixelIndex","maxPixelIndex","delta","pixelIndex","indexInByteArray","_jpgHeaderLength","./jpgHeaderLength","7","_base64ToByteArray2","glitchedByteArray","_glitchByteArray2","iterations","glitchedBase64URL","_byteArrayToBase2","_base64ToByteArray","_glitchByteArray","_byteArrayToBase","../util/isImageData","./base64ToByteArray","./byteArrayToBase64","./glitchByteArray","8","byteArr","9","image","HTMLImageElement","naturalWidth","naturalHeight","complete","src","drawImage","getImageData","Image","10","11","_typeof","Symbol","iterator","constructor","_clone2","defaultKeys","keys","_defaultParams2","filter","isNaN","_clamp2","Math","round","_clamp","_clone","_defaultParams","../util/clamp","../util/clone","./defaultParams","12","opts","_loadBase64Image2","_loadBase64Image","../../util/loadBase64Image","13","options","size","_getImageSize2","_canvasFromImage2","_canvasFromImage","_getImageSize","../util/canvasFromImage","../util/getImageSize","../util/loadBase64Image","14","./getImageSize","15","min","max","16","JSON","parse","stringify","17","18","19","onload","onerror","20","self","msg","_glitchImageData2","success","fail","close","message","../glitch/glitchImageData","21","Canvas","w","h","document","createElement","img","22","bundleFn","sources","cache","wkey","cacheKeys","exp","floor","pow","random","toString","wcache","Function","skey","scache","URL","window","webkitURL","mozURL","msURL","Worker","createObjectURL","Blob","type","global","set","hasOwn","_isVue","_data","ob","__ob__","convert","dep","notify","vms","vm","_proxy","_digest","del","_unproxy","isLiteral","literalValueRE","test","isReserved","str","c","charCodeAt","_toString","toNumber","parsed","Number","toBoolean","stripQuotes","b","slice","camelize","replace","camelizeRE","toUpper","_","toUpperCase","hyphenate","hyphenateRE","toLowerCase","classify","classifyRE","bind","apply","toArray","list","start","ret","Array","extend","to","from","isObject","isPlainObject","OBJECT_STRING","def","enumerable","writable","configurable","_debounce","func","wait","timeout","args","context","timestamp","later","last","Date","now","setTimeout","this","indexOf","arr","cancellable","cb","cancelled","cancel","looseEqual","Cache","limit","head","tail","undefined","_keymap","create","pushFilter","lastFilterIndex","trim","tokens","match","filterTokenRE","name","processFilterArg","dir","filters","arg","reservedArgRE","dynamic","stripped","parseDirective","hit","cache$1","get","inSingle","inDouble","curly","square","paren","expression","put","escapeRegex","regexEscapeRE","compileRegex","open","config","delimiters","unsafeOpen","unsafeDelimiters","unsafeClose","tagRE","RegExp","htmlRE","parseText","text","index","html","first","oneTime","lastIndex","exec","tag","tokensToExp","token","formatToken","single","$eval","inlineFilters","filterRE","appendWithTransition","el","applyTransition","appendChild","beforeWithTransition","before","removeWithTransition","remove","direction","op","transition","__v_trans","hooks","transitionEndEvent","_isCompiled","$parent","action","query","querySelector","inDoc","node","doc","ownerDocument","documentElement","parent","parentNode","nodeType","contains","getAttr","_attr","getAttribute","removeAttribute","getBindAttr","hasBindAttr","hasAttribute","insertBefore","after","nextSibling","removeChild","prepend","firstChild","replaceChild","on","useCapture","off","removeEventListener","getClass","classname","className","baseVal","setClass","cls","isIE9","namespaceURI","setAttribute","addClass","classList","add","cur","removeClass","tar","extractContent","asFragment","child","rawContent","isTemplate","isFragment","content","hasChildNodes","trimNode","createDocumentFragment","isTrimmable","lastChild","tagName","createAnchor","persist","anchor","debug","createComment","createTextNode","__v_anchor","findRef","hasAttributes","attrs","attributes","refRE","mapNodeRange","end","next","removeNodeRange","frag","onRemoved","removed","done","nodes","getOuterHTML","outerHTML","container","cloneNode","innerHTML","checkComponentAttr","hasAttrs","commonTagRE","reservedTagRE","getIsBinding","resolveAsset","id","is","mergeData","toVal","fromVal","mergeAssets","parentVal","childVal","res","guardArrayAssets","guardComponents","components","ids","Vue","guardProps","props","isArray","assets","asset","mergeOptions","mergeField","strat","strats","defaultStrat","mixins","mixin","mixinOptions","warnMissing","camelizedId","Dep","uid$1","subs","withoutConversion","shouldConvert","Observer","augment","hasProto","protoAugment","copyAugment","arrayMethods","arrayKeys","observeArray","walk","__proto__","observe","isExtensible","addVm","defineReactive","property","getOwnPropertyDescriptor","getter","setter","childOb","depend","newVal","initMixin","_init","$el","$root","$children","$refs","$els","_watchers","_directives","_uid","uid","_events","_eventsCount","_isFragment","_fragment","_fragmentStart","_fragmentEnd","_isDestroyed","_isReady","_isAttached","_isBeingDestroyed","_vForRemoving","_unlinkFn","_context","_scope","_frag","children","$options","_updateRef","_callHook","_initState","_initEvents","$mount","getPathCharType","ch","formatSubPath","path","trimmed","maybeUnescapeQuote","nextChar","mode","IN_SINGLE_QUOTE","IN_DOUBLE_QUOTE","newChar","actions","APPEND","typeMap","BEFORE_PATH","subPathDepth","PUSH","INC_SUB_PATH_DEPTH","PUSH_SUB_PATH","IN_SUB_PATH","pathStateMachine","ERROR","AFTER_PATH","raw","parsePath","pathCache","getPath","parseExpression","setPath","original","$set","noop","save","isString","saved","newlineRE","rewrite","allowedKeywordsRE","restoreRE","restore","compileGetter","improperKeywordsRE","body","saveRE","wsRE","identRE","makeGetterFn","compileSetter","scope","needSet","expressionCache","isSimplePath","pathTestRE","literalValueRE$1","resetBatcherState","queue","userQueue","has","circular","waiting","flushBatcherQueue","_again","runBatcherQueue","devtools","emit","watcher","run","pushWatcher","q","user","nextTick","Watcher","expOrFn","isFn","uid$2","active","dirty","lazy","deps","newDeps","depIds","_Set","newDepIds","prevError","twoWay","queued","shallow","traverse","seen","seenObjects","clear","isA","isO","depId","isRealTemplate","stringToFragment","templateString","cacheKey","templateCache","tagMatch","tagRE$1","entityMatch","entityRE","commentMatch","commentRE","wrap","efault","depth","prefix","suffix","nodeToFragment","textContent","clonedNode","querySelectorAll","cloned","hasBrokenTemplate","tempClone","hasTextareaCloneBug","parseTemplate","template","shouldClone","idSelectorCache","getElementById","Fragment","linker","host","parentFrag","childFrags","inserted","unlink","childNodes","singleBefore","singleRemove","multiBefore","multiRemove","__v_frag","withTransition","method","callHook","attach","shouldCallRemove","beforeRemove","detach","destroy","FragmentFactory","cid","cacheId","linkerCache","compile","findPrevFrag","previousSibling","forId","findVmFromFrag","__vue__","range","getTrackByKey","trackByKey","getValue","multi","init","selected","_value","indexOf$1","keyFilter","handler","codes","charCode","parseInt","keyCodes","concat","keyCode","stopFilter","stopPropagation","preventFilter","preventDefault","selfFilter","currentTarget","normalize","prop","propCache","camel","upper","testEl","prefixed","prefixes","style","kebab","camelPrefixes","normalize$1","_key","k","callActivateHooks","called","total","compileProps","propOptions","attr","names","empty","identRE$1","propBindingModes","ONE_WAY","TWO_WAY","ONE_TIME","optimizedLiteral","parentPath","makePropsLinkFn","_props","inlineProps","propsData","initProp","$get","_bindDir","propDef","Boolean","processPropValue","rawValue","isSimple","getPropDefaultValue","coerceProp","coerced","assertProp","updateProp","required","valid","expectedTypes","assertedType","assertType","expectedType","validator","coerce","String","pushJob","job","queue$1","flush","offsetHeight","Transition","enterClass","leaveClass","pendingCssEvent","pendingCssCb","pendingJsCb","justEntered","entered","left","typeCache","m","isHidden","rect","getBoundingClientRect","offsetWidth","getClientRects","partial","nodeLinkFn","_asComponent","compileNode","childLinkFn","terminal","isScript","compileNodeList","dirs","linkAndCapture","makeUnlinkFn","originalDirCount","sort","directiveComparator","_bind","descriptor","priority","DEFAULT_PRIORITY","contextDirs","destroying","teardownDirs","_teardown","compileAndLinkProps","propsLinkFn","propDirs","compileRoot","contextOptions","contextLinkFn","replacerLinkFn","containerAttrs","_containerAttrs","replacerAttrs","_replacerAttrs","compileDirectives","selfDirs","compileTextNode","compileElement","linkFn","checkTerminalDirectives","checkElementDirectives","checkComponent","_skip","removeText","wholeText","processTextToken","makeTextNodeLinkFn","setTokenType","directives","fragClone","nodeList","linkFns","makeChildLinkFn","childrenLinkFn","makeTerminalNodeLinkFn","component","ref","internalDirectives","modifiers","literal","componentLinkFn","skip","previousElementSibling","matched","dirName","rawName","termDef","j","modifierRE","dirAttrRE","DEFAULT_TERMINAL_PRIORITY","parseModifiers","pushDir","interpTokens","hasOneTimeToken","hasOneTime","interp","dirDef","transitionRE","bindRE","onRE","makeNodeLinkFn","transclude","extractAttrs","_content","transcludeTemplate","replacer","mergeAttrs","specialCharRE","resolveSlots","contents","_slotContents","extractFragment","stateMixin","makeComputedGetter","owner","evaluate","newData","_setData","_initProps","_initMeta","_initMethods","_initData","_initComputed","_propsUnlinkFn","dataFn","oldData","removeVm","update","computed","userDef","methods","metas","_meta","eventsMixin","registerComponentEvents","eventRE","_fromParent","$on","registerCallbacks","hash","handlers","register","onAttached","callAttach","onDetached","callDetach","events","watch","_initDOMHooks","hook","$emit","noop$1","Directive","_locked","_bound","_listeners","_host","lifecycleMixin","_ref","refs","_compile","_initElement","rootLinker","contentLinkFn","ctor","_linkerCachable","rootUnlinkFn","contentUnlinkFn","_destroy","deferCleanup","_cleanup","destroyReady","pendingRemoval","cleanupIfPossible","$remove","$destroy","teardown","$off","miscMixin","_applyFilters","oldValue","write","offset","read","_resolveComponent","factory","resolved","requested","pendingCallbacks","cbs","reason","dataAPI","clean","asStatement","$arguments","$delete","$watch","deep","sync","immediate","filterRE$1","$interpolate","$log","console","log","domAPI","insert","op1","op2","targetIsDetached","shouldCallHook","append","beforeWithCb","removeWithCb","$nextTick","$appendTo","$prependTo","$before","$after","inDocument","realCb","eventsAPI","modifyListenerCount","count","hookRE","$once","splice","isSource","shouldPropagate","hasParentCbs","some","$broadcast","$dispatch","lifecycleAPI","ready","$compile","limitBy","filterBy","search","delimiter","convertArray","item","$value","$key","orderBy","baseCompare","sortKeyIndex","sortKey","sortKeys","order","comparator","firstArg","installGlobalAPI","createClass","elementDirectives","transitions","partials","util","compiler","parsers","directive","extendOptions","Super","isFirstExtend","_Ctor","Sub","_assetTypes","use","plugin","installed","unshift","install","definition","inBrowser","__VUE_DEVTOOLS_GLOBAL_HOOK__","UA","navigator","userAgent","isIE","isAndroid","isIos","iosVersionMatch","iosVersion","hasMutationObserverBug","indexedDB","transitionProp","animationProp","animationEndEvent","isWebkitTrans","ontransitionend","onwebkittransitionend","isWebkitAnim","onanimationend","onwebkitanimationend","nextTickHandler","pending","copies","callbacks","timerFunc","MutationObserver","setImmediate","counter","observer","textNode","characterData","Set","p","entry","shift","newer","older","returnEntry","freeze","defineProperties","silent","async","warnExpressionErrors","_delimitersChanged","_propBindingModes","_maxUpdateCount","warn","optionMergeStrategies","instanceData","defaultData","created","attached","detached","beforeCompile","compiled","beforeDestroy","destroyed","activate","addSub","sub","removeSub","addDep","arrayProto","getOwnPropertyNames","items","debounce","IN_PATH","BEFORE_IDENT","IN_IDENT","ws","ident","[","eof",".","0","number","'","\"","]","else","allowedKeywords","improperKeywords","beforeGet","preProcess","postProcess","afterGet","forContext","$forContext","alias","_withLock","$index","tmp","current","text$1","legend","tr","col","td","th","option","optgroup","thead","tbody","colgroup","caption","tfoot","g","defs","symbol","circle","ellipse","line","polygon","polyline","placeholder","swap","_watcher","ON","MODEL","BIND","TRANSITION","EL","COMPONENT","PARTIAL","IF","FOR","SLOT","uid$3","vFor","inMatch","itMatch","isOption","diff","updateRef","updateModel","primitive","convertedFromObject","fromObject","trackBy","oldFrags","frags","getCachedFrag","reused","fresh","removalIndex","totalRemoved","deleteCachedFrag","targetPrev","prevEl","currentPrev","insertionIndex","staggerCb","staggerAnchor","move","parentScope","cacheFrag","model","__v_model","forceUpdate","staggerAmount","getStagger","trans","stagger","_preProcess","_postProcess","unbind","vIf","invalid","nextElementSibling","elseEl","elseFrag","elseFactory","show","toggle","display","text$2","isRange","composing","listener","focused","rawListener","hasjQuery","jQuery","afterBind","radio","checked","select","_this","multiple","initValue","selectedIndex","checkbox","getBooleanValue","_trueValue","_falseValue","checkFilters","hasRead","hasWrite","_unbind","esc","tab","enter","space","delete","up","right","down","on$1","acceptStatement","iframeBind","contentWindow","capture","stop","prevent","reset","importantRE","cssText","handleObject","reduce","handleSingle","isImportant","setProperty","xlinkNS","xlinkRE","disallowedInterpAttrRE","attrWithPropsRE","enumeratedAttrRE","modelProps","true-value","false-value","bind$1","attrValue","modelProp","setAttributeNS","cloak","for","if","vClass","cleanup","prevKeys","keepAlive","inlineTemplate","pendingComponentCb","Component","pendingRemovals","pendingRemovalCb","setComponent","invalidatePending","resolveComponent","mountComponent","unbuild","childVM","ComponentName","activateHooks","cached","getCached","newComponent","build","waitingFor","extraOptions","_isRouterView","defer","_inactive","transitionMode","bindingModes","childKey","parentKey","parentWatcher","childWatcher","TYPE_TRANSITION","TYPE_ANIMATION","transDurationProp","animDurationProp","raf","requestAnimationFrame","waitForTransitionStart","p$1","cancelPending","callHookWithCb","enterCancelled","enterNextTick","enterDone","getCssTransitionType","setupCssCb","leave","leaveCancelled","leaveDone","leaveNextTick","hasPending","hidden","css","inlineStyles","computedStyles","getComputedStyle","transDuration","animDuration","onEnd","transition$1","oldId","class","_setupParams","_checkStatement","_update","oldVal","mappedKey","_setupParamWatcher","unwatch","paramWatchers","_paramUnwatchFns","$event","listeners","unwatchFns","slot","fallback","elseBlock","digitsRE","json","indent","capitalize","uppercase","lowercase","currency","_currency","decimals","parseFloat","isFinite","stringified","abs","toFixed","_int","_float","sign","pluralize","delay","version","modules","mediaQuery","alreadyImportedModules","addStylesToDom","styles","domStyle","stylesInDom","parts","addStyle","listToStyles","newStyles","media","sourceMap","part","insertStyleElement","styleElement","getHeadElement","lastStyleElementInsertedAtTop","styleElementsInsertedAtTop","insertAt","removeStyleElement","idx","createStyleElement","singleton","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","applyToTag","newObj","styleSheet","replaceText","cssNode","btoa","unescape","encodeURIComponent","memoize","memo","isOldIE","getElementsByTagName","newList","mayRemove","textStore","replacement"],"mappings":"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","file":"static/js/vendor.ea4ea9c080128c8f9ab7.js","sourcesContent":["webpackJsonp([2,0],[\n/* 0 */,\n/* 1 */,\n/* 2 */,\n/* 3 */,\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar require;var require;(function(f) {\n\t    if (true) {\n\t        module.exports = f();\n\t    } else {\n\t        if (typeof define === 'function' && define.amd) {\n\t            define([], f);\n\t        } else {\n\t            var g;\n\t            if (typeof window !== 'undefined') {\n\t                g = window;\n\t            } else {\n\t                if (typeof global !== 'undefined') {\n\t                    g = global;\n\t                } else {\n\t                    if (typeof self !== 'undefined') {\n\t                        g = self;\n\t                    } else {\n\t                        g = this;\n\t                    }\n\t                }\n\t            }\n\t            g.glitch = f();\n\t        }\n\t    }\n\t})(function() {\n\t    var define, module, exports;\n\t    return function e(t, n, r) {\n\t        function s(o, u) {\n\t            if (!n[o]) {\n\t                if (!t[o]) {\n\t                    var a = typeof require == 'function' && require;\n\t                    if (!u && a) {\n\t                        return require(o, !0);\n\t                    }\n\t                    if (i) {\n\t                        return i(o, !0);\n\t                    }\n\t                    var f = new Error('Cannot find module \\'' + o + '\\'');\n\t                    throw f.code = 'MODULE_NOT_FOUND', f;\n\t                }\n\t                var l = n[o] = {\n\t                    exports: {}\n\t                };\n\t                t[o][0].call(l.exports, function(e) {\n\t                    var n = t[o][1][e];\n\t                    return s(n ? n : e);\n\t                }, l, l.exports, e, t, n, r);\n\t            }\n\t            return n[o].exports;\n\t        }\n\t        var i = typeof require == 'function' && require;\n\t        for (var o = 0; o < r.length; o++) {\n\t            s(r[o]);\n\t        }\n\t        return s;\n\t    }({\n\t        1: [ function(_dereq_, module, exports) {\n\t            'use strict';\n\t            function _interopRequireDefault(obj) {\n\t                return obj && obj.__esModule ? obj : {\n\t                    'default': obj\n\t                };\n\t            }\n\t            Object.defineProperty(exports, '__esModule', {\n\t                value: !0\n\t            });\n\t            var _extends = Object.assign || function(target) {\n\t                for (var i = 1; i < arguments.length; i++) {\n\t                    var source = arguments[i];\n\t                    for (var key in source) {\n\t                        Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);\n\t                    }\n\t                }\n\t                return target;\n\t            };\n\t            exports['default'] = function(params) {\n\t                function getParams() {\n\t                    return params;\n\t                }\n\t                function getInput() {\n\t                    var result = _extends({}, api);\n\t                    return inputFn || _extends(result, inputMethods), result;\n\t                }\n\t                function getOutput() {\n\t                    var result = _extends({}, api);\n\t                    return outputFn || _extends(result, outputMethods), result;\n\t                }\n\t                function noTransform(x) {\n\t                    return x;\n\t                }\n\t                function fromImage(inputOptions) {\n\t                    return setInput(_fromImage2['default'], inputOptions);\n\t                }\n\t                function fromImageData(inputOptions) {\n\t                    return setInput(noTransform, inputOptions);\n\t                }\n\t                function toDataURL(outputOptions) {\n\t                    return setOutput(noTransform);\n\t                }\n\t                function toImage(outputOptions) {\n\t                    return setOutput(_toImage2['default'], outputOptions, !0);\n\t                }\n\t                function toImageData(outputOptions) {\n\t                    return setOutput(_toImageData2['default'], outputOptions, !0);\n\t                }\n\t                function setInput(fn, inputOptions, canResolve) {\n\t                    return inputFn = function() {\n\t                        return new Promise(function(resolve, reject) {\n\t                            if (canResolve) {\n\t                                fn(inputOptions, resolve, reject);\n\t                            } else {\n\t                                if (fn === noTransform) {\n\t                                    resolve(inputOptions);\n\t                                } else {\n\t                                    try {\n\t                                        resolve(fn(inputOptions, resolve, reject));\n\t                                    } catch (err) {\n\t                                        reject(err);\n\t                                    }\n\t                                }\n\t                            }\n\t                        });\n\t                    }, isReady() ? getResult() : getOutput();\n\t                }\n\t                function setOutput(fn, outputOptions, canResolve) {\n\t                    return outputFn = function(base64URL) {\n\t                        return new Promise(function(resolve, reject) {\n\t                            canResolve ? fn(base64URL, outputOptions, resolve, reject) : fn === noTransform ? resolve(base64URL) : fn(base64URL, outputOptions).then(resolve, reject);\n\t                        });\n\t                    }, isReady() ? getResult() : getInput();\n\t                }\n\t                function isReady() {\n\t                    return inputFn && outputFn;\n\t                }\n\t                function getResult() {\n\t                    return new Promise(function(resolve, reject) {\n\t                        inputFn().then(function(imageData) {\n\t                            return glitch(imageData, params);\n\t                        }, reject).then(function(base64URL) {\n\t                            outputFn(base64URL).then(resolve, reject);\n\t                        }, reject);\n\t                    });\n\t                }\n\t                function glitch(imageData, params) {\n\t                    return new Promise(function(resolve, reject) {\n\t                        (0, _imageDataToBase2['default'])(imageData, params.quality).then(function(base64URL) {\n\t                            return glitchInWorker(imageData, base64URL, params);\n\t                        }, reject).then(resolve, reject);\n\t                    });\n\t                }\n\t                function glitchInWorker(imageData, base64URL, params) {\n\t                    return new Promise(function(resolve, reject) {\n\t                        worker.addEventListener('message', function(event) {\n\t                            event.data && event.data.base64URL ? resolve(event.data.base64URL) : reject(event.data && event.data.err ? event.data.err : event);\n\t                        }), worker.postMessage({\n\t                            params: params,\n\t                            base64URL: base64URL,\n\t                            imageData: imageData,\n\t                            imageDataWidth: imageData.width,\n\t                            imageDataHeight: imageData.height\n\t                        });\n\t                    });\n\t                }\n\t                params = (0, _sanitizeInput2['default'])(params);\n\t                var inputFn = void 0, outputFn = void 0, worker = (0, _webworkify2['default'])(_glitchWorker2['default']), api = {\n\t                    getParams: getParams,\n\t                    getInput: getInput,\n\t                    getOutput: getOutput\n\t                }, inputMethods = {\n\t                    fromImageData: fromImageData,\n\t                    fromImage: fromImage\n\t                }, outputMethods = {\n\t                    toImage: toImage,\n\t                    toDataURL: toDataURL,\n\t                    toImageData: toImageData\n\t                };\n\t                return getInput();\n\t            };\n\t            var _sanitizeInput = _dereq_('./input/sanitizeInput'), _sanitizeInput2 = _interopRequireDefault(_sanitizeInput), _fromImage = _dereq_('./input/browser/fromImage'), _fromImage2 = _interopRequireDefault(_fromImage), _toImage = _dereq_('./output/browser/toImage'), _toImage2 = _interopRequireDefault(_toImage), _toImageData = _dereq_('./output/toImageData'), _toImageData2 = _interopRequireDefault(_toImageData), _imageDataToBase = _dereq_('./glitch/browser/imageDataToBase64'), _imageDataToBase2 = _interopRequireDefault(_imageDataToBase), _glitchImageData = _dereq_('./glitch/glitchImageData'), _glitchImageData2 = _interopRequireDefault(_glitchImageData), _webworkify = _dereq_('webworkify'), _webworkify2 = _interopRequireDefault(_webworkify), _glitchWorker = _dereq_('./workers/glitchWorker'), _glitchWorker2 = _interopRequireDefault(_glitchWorker);\n\t            module.exports = exports['default'];\n\t        }, {\n\t            './glitch/browser/imageDataToBase64': 4,\n\t            './glitch/glitchImageData': 7,\n\t            './input/browser/fromImage': 9,\n\t            './input/sanitizeInput': 11,\n\t            './output/browser/toImage': 12,\n\t            './output/toImageData': 13,\n\t            './workers/glitchWorker': 20,\n\t            webworkify: 22\n\t        } ],\n\t        2: [ function(_dereq_, module, exports) {\n\t            'use strict';\n\t            Object.defineProperty(exports, '__esModule', {\n\t                value: !0\n\t            });\n\t            var base64Chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/', base64Map = base64Chars.split(''), reversedBase64Map = {};\n\t            base64Map.forEach(function(val, key) {\n\t                reversedBase64Map[val] = key;\n\t            }), exports['default'] = {\n\t                map: base64Map,\n\t                reverse: reversedBase64Map\n\t            }, module.exports = exports['default'];\n\t        }, {} ],\n\t        3: [ function(_dereq_, module, exports) {\n\t            'use strict';\n\t            Object.defineProperty(exports, '__esModule', {\n\t                value: !0\n\t            }), exports['default'] = function(base64URL) {\n\t                for (var digitNum, currrentChar, prev, result = [], i = 23, len = base64URL.length; len > i; i++) {\n\t                    switch (currrentChar = _base64Map.reverse[base64URL.charAt(i)], digitNum = (i - 23) % 4) {\n\t                      case 1:\n\t                        result.push(prev << 2 | currrentChar >> 4);\n\t                        break;\n\t\n\t                      case 2:\n\t                        result.push((15 & prev) << 4 | currrentChar >> 2);\n\t                        break;\n\t\n\t                      case 3:\n\t                        result.push((3 & prev) << 6 | currrentChar);\n\t                    }\n\t                    prev = currrentChar;\n\t                }\n\t                return result;\n\t            };\n\t            var _base64Map = _dereq_('./base64Map');\n\t            module.exports = exports['default'];\n\t        }, {\n\t            './base64Map': 2\n\t        } ],\n\t        4: [ function(_dereq_, module, exports) {\n\t            'use strict';\n\t            function _interopRequireDefault(obj) {\n\t                return obj && obj.__esModule ? obj : {\n\t                    'default': obj\n\t                };\n\t            }\n\t            Object.defineProperty(exports, '__esModule', {\n\t                value: !0\n\t            }), exports['default'] = function(imageData, quality) {\n\t                return new Promise(function(resolve, reject) {\n\t                    if ((0, _isImageData2['default'])(imageData)) {\n\t                        var canvas = new _canvasBrowserify2['default'](imageData.width, imageData.height), ctx = canvas.getContext('2d');\n\t                        ctx.putImageData(imageData, 0, 0);\n\t                        var base64URL = canvas.toDataURL('image/jpeg', quality / 100);\n\t                        resolve(base64URL);\n\t                    } else {\n\t                        reject(new Error('object is not valid imageData'));\n\t                    }\n\t                });\n\t            };\n\t            var _canvasBrowserify = _dereq_('canvas-browserify'), _canvasBrowserify2 = _interopRequireDefault(_canvasBrowserify), _isImageData = _dereq_('../../util/isImageData'), _isImageData2 = _interopRequireDefault(_isImageData);\n\t            module.exports = exports['default'];\n\t        }, {\n\t            '../../util/isImageData': 18,\n\t            'canvas-browserify': 21\n\t        } ],\n\t        5: [ function(_dereq_, module, exports) {\n\t            'use strict';\n\t            Object.defineProperty(exports, '__esModule', {\n\t                value: !0\n\t            }), exports['default'] = function(byteArray) {\n\t                for (var result = [ 'data:image/jpeg;base64,' ], byteNum = void 0, currentByte = void 0, previousByte = void 0, i = 0, len = byteArray.length; len > i; i++) {\n\t                    switch (currentByte = byteArray[i], byteNum = i % 3) {\n\t                      case 0:\n\t                        result.push(_base64Map.map[currentByte >> 2]);\n\t                        break;\n\t\n\t                      case 1:\n\t                        result.push(_base64Map.map[(3 & previousByte) << 4 | currentByte >> 4]);\n\t                        break;\n\t\n\t                      case 2:\n\t                        result.push(_base64Map.map[(15 & previousByte) << 2 | currentByte >> 6]), result.push(_base64Map.map[63 & currentByte]);\n\t                    }\n\t                    previousByte = currentByte;\n\t                }\n\t                return 0 === byteNum ? (result.push(_base64Map.map[(3 & previousByte) << 4]), result.push('==')) : 1 === byteNum && (result.push(_base64Map.map[(15 & previousByte) << 2]), \n\t                result.push('=')), result.join('');\n\t            };\n\t            var _base64Map = _dereq_('./base64Map');\n\t            module.exports = exports['default'];\n\t        }, {\n\t            './base64Map': 2\n\t        } ],\n\t        6: [ function(_dereq_, module, exports) {\n\t            'use strict';\n\t            function _interopRequireDefault(obj) {\n\t                return obj && obj.__esModule ? obj : {\n\t                    'default': obj\n\t                };\n\t            }\n\t            Object.defineProperty(exports, '__esModule', {\n\t                value: !0\n\t            }), exports['default'] = function(byteArray, seed, amount, iterationCount) {\n\t                for (var headerLength = (0, _jpgHeaderLength2['default'])(byteArray), maxIndex = byteArray.length - headerLength - 4, amountPercent = amount / 100, seedPercent = seed / 100, iterationIndex = 0; iterationCount > iterationIndex; iterationIndex++) {\n\t                    var minPixelIndex = maxIndex / iterationCount * iterationIndex | 0, maxPixelIndex = maxIndex / iterationCount * (iterationIndex + 1) | 0, delta = maxPixelIndex - minPixelIndex, pixelIndex = minPixelIndex + delta * seedPercent | 0;\n\t                    pixelIndex > maxIndex && (pixelIndex = maxIndex);\n\t                    var indexInByteArray = ~~(headerLength + pixelIndex);\n\t                    byteArray[indexInByteArray] = ~~(256 * amountPercent);\n\t                }\n\t                return byteArray;\n\t            };\n\t            var _jpgHeaderLength = _dereq_('./jpgHeaderLength'), _jpgHeaderLength2 = _interopRequireDefault(_jpgHeaderLength);\n\t            module.exports = exports['default'];\n\t        }, {\n\t            './jpgHeaderLength': 8\n\t        } ],\n\t        7: [ function(_dereq_, module, exports) {\n\t            'use strict';\n\t            function _interopRequireDefault(obj) {\n\t                return obj && obj.__esModule ? obj : {\n\t                    'default': obj\n\t                };\n\t            }\n\t            Object.defineProperty(exports, '__esModule', {\n\t                value: !0\n\t            }), exports['default'] = function(imageData, base64URL, params) {\n\t                if ((0, _isImageData2['default'])(imageData)) {\n\t                    var byteArray = (0, _base64ToByteArray2['default'])(base64URL), glitchedByteArray = (0, \n\t                    _glitchByteArray2['default'])(byteArray, params.seed, params.amount, params.iterations), glitchedBase64URL = (0, \n\t                    _byteArrayToBase2['default'])(glitchedByteArray);\n\t                    return glitchedBase64URL;\n\t                }\n\t                throw new Error('glitchImageData: imageData seems to be corrupt.');\n\t            };\n\t            var _isImageData = _dereq_('../util/isImageData'), _isImageData2 = _interopRequireDefault(_isImageData), _base64ToByteArray = _dereq_('./base64ToByteArray'), _base64ToByteArray2 = _interopRequireDefault(_base64ToByteArray), _glitchByteArray = _dereq_('./glitchByteArray'), _glitchByteArray2 = _interopRequireDefault(_glitchByteArray), _byteArrayToBase = _dereq_('./byteArrayToBase64'), _byteArrayToBase2 = _interopRequireDefault(_byteArrayToBase);\n\t            module.exports = exports['default'];\n\t        }, {\n\t            '../util/isImageData': 18,\n\t            './base64ToByteArray': 3,\n\t            './byteArrayToBase64': 5,\n\t            './glitchByteArray': 6\n\t        } ],\n\t        8: [ function(_dereq_, module, exports) {\n\t            'use strict';\n\t            Object.defineProperty(exports, '__esModule', {\n\t                value: !0\n\t            }), exports['default'] = function(byteArr) {\n\t                for (var result = 417, i = 0, len = byteArr.length; len > i; i++) {\n\t                    if (255 === byteArr[i] && 218 === byteArr[i + 1]) {\n\t                        result = i + 2;\n\t                        break;\n\t                    }\n\t                }\n\t                return result;\n\t            }, module.exports = exports['default'];\n\t        }, {} ],\n\t        9: [ function(_dereq_, module, exports) {\n\t            'use strict';\n\t            function _interopRequireDefault(obj) {\n\t                return obj && obj.__esModule ? obj : {\n\t                    'default': obj\n\t                };\n\t            }\n\t            Object.defineProperty(exports, '__esModule', {\n\t                value: !0\n\t            }), exports['default'] = function(image) {\n\t                if (image instanceof HTMLImageElement) {\n\t                    if (!image.naturalWidth || !image.naturalHeight || image.complete === !1) {\n\t                        throw new Error('This this image hasn\\'t finished loading: ' + image.src);\n\t                    }\n\t                    var canvas = new _canvasBrowserify2['default'](image.naturalWidth, image.naturalHeight), ctx = canvas.getContext('2d');\n\t                    ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n\t                    var imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n\t                    return imageData.data && imageData.data.length && ('undefined' == typeof imageData.width && (imageData.width = image.naturalWidth), \n\t                    'undefined' == typeof imageData.height && (imageData.height = image.naturalHeight)), \n\t                    imageData;\n\t                }\n\t                throw new Error('This object does not seem to be an image.');\n\t            };\n\t            var _canvasBrowserify = _dereq_('canvas-browserify'), _canvasBrowserify2 = _interopRequireDefault(_canvasBrowserify), Image = _canvasBrowserify2['default'].Image;\n\t            module.exports = exports['default'];\n\t        }, {\n\t            'canvas-browserify': 21\n\t        } ],\n\t        10: [ function(_dereq_, module, exports) {\n\t            'use strict';\n\t            Object.defineProperty(exports, '__esModule', {\n\t                value: !0\n\t            }), exports['default'] = {\n\t                amount: 35,\n\t                iterations: 20,\n\t                quality: 30,\n\t                seed: 25\n\t            }, module.exports = exports['default'];\n\t        }, {} ],\n\t        11: [ function(_dereq_, module, exports) {\n\t            'use strict';\n\t            function _interopRequireDefault(obj) {\n\t                return obj && obj.__esModule ? obj : {\n\t                    'default': obj\n\t                };\n\t            }\n\t            Object.defineProperty(exports, '__esModule', {\n\t                value: !0\n\t            });\n\t            var _typeof = 'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator ? function(obj) {\n\t                return typeof obj;\n\t            } : function(obj) {\n\t                return obj && 'function' == typeof Symbol && obj.constructor === Symbol ? 'symbol' : typeof obj;\n\t            };\n\t            exports['default'] = function(params) {\n\t                params = (0, _clone2['default'])(params), 'object' !== ('undefined' == typeof params ? 'undefined' : _typeof(params)) && (params = {});\n\t                var defaultKeys = Object.keys(_defaultParams2['default']).filter(function(key) {\n\t                    return 'iterations' !== key;\n\t                });\n\t                return defaultKeys.forEach(function(key) {\n\t                    'number' != typeof params[key] || isNaN(params[key]) ? params[key] = _defaultParams2['default'][key] : params[key] = (0, \n\t                    _clamp2['default'])(params[key], 0, 100), params[key] = Math.round(params[key]);\n\t                }), ('number' != typeof params.iterations || isNaN(params.iterations) || params.iterations <= 0) && (params.iterations = _defaultParams2['default'].iterations), \n\t                params.iterations = Math.round(params.iterations), params;\n\t            };\n\t            var _clamp = _dereq_('../util/clamp'), _clamp2 = _interopRequireDefault(_clamp), _clone = _dereq_('../util/clone'), _clone2 = _interopRequireDefault(_clone), _defaultParams = _dereq_('./defaultParams'), _defaultParams2 = _interopRequireDefault(_defaultParams);\n\t            module.exports = exports['default'];\n\t        }, {\n\t            '../util/clamp': 15,\n\t            '../util/clone': 16,\n\t            './defaultParams': 10\n\t        } ],\n\t        12: [ function(_dereq_, module, exports) {\n\t            'use strict';\n\t            function _interopRequireDefault(obj) {\n\t                return obj && obj.__esModule ? obj : {\n\t                    'default': obj\n\t                };\n\t            }\n\t            Object.defineProperty(exports, '__esModule', {\n\t                value: !0\n\t            }), exports['default'] = function(base64URL, opts, resolve, reject) {\n\t                (0, _loadBase64Image2['default'])(base64URL).then(resolve, reject);\n\t            };\n\t            var _loadBase64Image = _dereq_('../../util/loadBase64Image'), _loadBase64Image2 = _interopRequireDefault(_loadBase64Image);\n\t            module.exports = exports['default'];\n\t        }, {\n\t            '../../util/loadBase64Image': 19\n\t        } ],\n\t        13: [ function(_dereq_, module, exports) {\n\t            'use strict';\n\t            function _interopRequireDefault(obj) {\n\t                return obj && obj.__esModule ? obj : {\n\t                    'default': obj\n\t                };\n\t            }\n\t            Object.defineProperty(exports, '__esModule', {\n\t                value: !0\n\t            }), exports['default'] = function(base64URL, options, resolve, reject) {\n\t                (0, _loadBase64Image2['default'])(base64URL).then(function(image) {\n\t                    var size = (0, _getImageSize2['default'])(image), imageData = (0, _canvasFromImage2['default'])(image).ctx.getImageData(0, 0, size.width, size.height);\n\t                    imageData.width || (imageData.width = size.width), imageData.height || (imageData.height = size.height), \n\t                    resolve(imageData);\n\t                }, reject);\n\t            };\n\t            var _loadBase64Image = _dereq_('../util/loadBase64Image'), _loadBase64Image2 = _interopRequireDefault(_loadBase64Image), _canvasFromImage = _dereq_('../util/canvasFromImage'), _canvasFromImage2 = _interopRequireDefault(_canvasFromImage), _getImageSize = _dereq_('../util/getImageSize'), _getImageSize2 = _interopRequireDefault(_getImageSize);\n\t            module.exports = exports['default'];\n\t        }, {\n\t            '../util/canvasFromImage': 14,\n\t            '../util/getImageSize': 17,\n\t            '../util/loadBase64Image': 19\n\t        } ],\n\t        14: [ function(_dereq_, module, exports) {\n\t            'use strict';\n\t            function _interopRequireDefault(obj) {\n\t                return obj && obj.__esModule ? obj : {\n\t                    'default': obj\n\t                };\n\t            }\n\t            Object.defineProperty(exports, '__esModule', {\n\t                value: !0\n\t            }), exports['default'] = function(image) {\n\t                var size = (0, _getImageSize2['default'])(image), canvas = new _canvasBrowserify2['default'](size.width, size.height), ctx = canvas.getContext('2d');\n\t                return ctx.drawImage(image, 0, 0, size.width, size.height), {\n\t                    canvas: canvas,\n\t                    ctx: ctx\n\t                };\n\t            };\n\t            var _canvasBrowserify = _dereq_('canvas-browserify'), _canvasBrowserify2 = _interopRequireDefault(_canvasBrowserify), _getImageSize = _dereq_('./getImageSize'), _getImageSize2 = _interopRequireDefault(_getImageSize);\n\t            module.exports = exports['default'];\n\t        }, {\n\t            './getImageSize': 17,\n\t            'canvas-browserify': 21\n\t        } ],\n\t        15: [ function(_dereq_, module, exports) {\n\t            'use strict';\n\t            Object.defineProperty(exports, '__esModule', {\n\t                value: !0\n\t            }), exports['default'] = function(value, min, max) {\n\t                return min > value ? min : value > max ? max : value;\n\t            }, module.exports = exports['default'];\n\t        }, {} ],\n\t        16: [ function(_dereq_, module, exports) {\n\t            'use strict';\n\t            Object.defineProperty(exports, '__esModule', {\n\t                value: !0\n\t            }), exports['default'] = function(obj) {\n\t                var result = !1;\n\t                if ('undefined' != typeof obj) {\n\t                    try {\n\t                        result = JSON.parse(JSON.stringify(obj));\n\t                    } catch (e) {}\n\t                }\n\t                return result;\n\t            }, module.exports = exports['default'];\n\t        }, {} ],\n\t        17: [ function(_dereq_, module, exports) {\n\t            'use strict';\n\t            Object.defineProperty(exports, '__esModule', {\n\t                value: !0\n\t            }), exports['default'] = function(image) {\n\t                return {\n\t                    width: image.width || image.naturalWidth,\n\t                    height: image.height || image.naturalHeight\n\t                };\n\t            }, module.exports = exports['default'];\n\t        }, {} ],\n\t        18: [ function(_dereq_, module, exports) {\n\t            'use strict';\n\t            Object.defineProperty(exports, '__esModule', {\n\t                value: !0\n\t            });\n\t            var _typeof = 'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator ? function(obj) {\n\t                return typeof obj;\n\t            } : function(obj) {\n\t                return obj && 'function' == typeof Symbol && obj.constructor === Symbol ? 'symbol' : typeof obj;\n\t            };\n\t            exports['default'] = function(imageData) {\n\t                return imageData && 'number' == typeof imageData.width && 'number' == typeof imageData.height && imageData.data && 'number' == typeof imageData.data.length && 'object' === _typeof(imageData.data);\n\t            }, module.exports = exports['default'];\n\t        }, {} ],\n\t        19: [ function(_dereq_, module, exports) {\n\t            'use strict';\n\t            Object.defineProperty(exports, '__esModule', {\n\t                value: !0\n\t            }), exports['default'] = function(base64URL) {\n\t                return new Promise(function(resolve, reject) {\n\t                    var image = new _canvasBrowserify.Image();\n\t                    image.onload = function() {\n\t                        resolve(image);\n\t                    }, image.onerror = function(err) {\n\t                        reject(err);\n\t                    }, image.src = base64URL;\n\t                });\n\t            };\n\t            var _canvasBrowserify = _dereq_('canvas-browserify');\n\t            module.exports = exports['default'];\n\t        }, {\n\t            'canvas-browserify': 21\n\t        } ],\n\t        20: [ function(_dereq_, module, exports) {\n\t            'use strict';\n\t            function _interopRequireDefault(obj) {\n\t                return obj && obj.__esModule ? obj : {\n\t                    'default': obj\n\t                };\n\t            }\n\t            function worker(self) {\n\t                self.addEventListener('message', function(msg) {\n\t                    var imageData = msg.data.imageData, params = msg.data.params, base64URL = msg.data.base64URL;\n\t                    if (imageData && base64URL && params) {\n\t                        try {\n\t                            'undefined' == typeof imageData.width && 'number' == typeof msg.data.imageDataWidth && (imageData.width = msg.data.imageDataWidth), \n\t                            'undefined' == typeof imageData.height && 'number' == typeof msg.data.imageDataHeight && (imageData.height = msg.data.imageDataHeight);\n\t                            var glitchedBase64URL = (0, _glitchImageData2['default'])(imageData, base64URL, params);\n\t                            success(glitchedBase64URL);\n\t                        } catch (err) {\n\t                            fail(err);\n\t                        }\n\t                    } else {\n\t                        fail(msg.data.imageData ? 'Parameters are missing.' : 'ImageData is missing.');\n\t                    }\n\t                    self.close();\n\t                });\n\t            }\n\t            function fail(err) {\n\t                self.postMessage({\n\t                    err: err.message || err\n\t                });\n\t            }\n\t            function success(base64URL) {\n\t                self.postMessage({\n\t                    base64URL: base64URL\n\t                });\n\t            }\n\t            Object.defineProperty(exports, '__esModule', {\n\t                value: !0\n\t            }), exports['default'] = worker;\n\t            var _glitchImageData = _dereq_('../glitch/glitchImageData'), _glitchImageData2 = _interopRequireDefault(_glitchImageData);\n\t            module.exports = exports['default'];\n\t        }, {\n\t            '../glitch/glitchImageData': 7\n\t        } ],\n\t        21: [ function(_dereq_, module, exports) {\n\t            var Canvas = module.exports = function Canvas(w, h) {\n\t                var canvas = document.createElement('canvas');\n\t                canvas.width = w || 300;\n\t                canvas.height = h || 150;\n\t                return canvas;\n\t            };\n\t            Canvas.Image = function() {\n\t                var img = document.createElement('img');\n\t                return img;\n\t            };\n\t        }, {} ],\n\t        22: [ function(_dereq_, module, exports) {\n\t            var bundleFn = arguments[3];\n\t            var sources = arguments[4];\n\t            var cache = arguments[5];\n\t            var stringify = JSON.stringify;\n\t            module.exports = function(fn) {\n\t                var keys = [];\n\t                var wkey;\n\t                var cacheKeys = Object.keys(cache);\n\t                for (var i = 0, l = cacheKeys.length; i < l; i++) {\n\t                    var key = cacheKeys[i];\n\t                    var exp = cache[key].exports;\n\t                    if (exp === fn || exp.default === fn) {\n\t                        wkey = key;\n\t                        break;\n\t                    }\n\t                }\n\t                if (!wkey) {\n\t                    wkey = Math.floor(Math.pow(16, 8) * Math.random()).toString(16);\n\t                    var wcache = {};\n\t                    for (var i = 0, l = cacheKeys.length; i < l; i++) {\n\t                        var key = cacheKeys[i];\n\t                        wcache[key] = key;\n\t                    }\n\t                    sources[wkey] = [ Function([ 'require', 'module', 'exports' ], '(' + fn + ')(self)'), wcache ];\n\t                }\n\t                var skey = Math.floor(Math.pow(16, 8) * Math.random()).toString(16);\n\t                var scache = {};\n\t                scache[wkey] = wkey;\n\t                sources[skey] = [ Function([ 'require' ], 'var f = require(' + stringify(wkey) + ');' + '(f.default ? f.default : f)(self);'), scache ];\n\t                var src = '(' + bundleFn + ')({' + Object.keys(sources).map(function(key) {\n\t                    return stringify(key) + ':[' + sources[key][0] + ',' + stringify(sources[key][1]) + ']';\n\t                }).join(',') + '},{},[' + stringify(skey) + '])';\n\t                var URL = window.URL || window.webkitURL || window.mozURL || window.msURL;\n\t                return new Worker(URL.createObjectURL(new Blob([ src ], {\n\t                    type: 'text/javascript'\n\t                })));\n\t            };\n\t        }, {} ]\n\t    }, {}, [ 1 ])(1);\n\t});\n\n\n/***/ },\n/* 5 */,\n/* 6 */,\n/* 7 */,\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*!\n\t * Vue.js v1.0.26\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t'use strict';\n\t\n\tfunction set(obj, key, val) {\n\t  if (hasOwn(obj, key)) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  if (obj._isVue) {\n\t    set(obj._data, key, val);\n\t    return;\n\t  }\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  ob.convert(key, val);\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._proxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Delete a property and trigger change if necessary.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t */\n\t\n\tfunction del(obj, key) {\n\t  if (!hasOwn(obj, key)) {\n\t    return;\n\t  }\n\t  delete obj[key];\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    if (obj._isVue) {\n\t      delete obj._data[key];\n\t      obj._digest();\n\t    }\n\t    return;\n\t  }\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._unproxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t}\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t/**\n\t * Check whether the object has the property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOwn(obj, key) {\n\t  return hasOwnProperty.call(obj, key);\n\t}\n\t\n\t/**\n\t * Check if an expression is a literal value.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\t\n\tfunction isLiteral(exp) {\n\t  return literalValueRE.test(exp);\n\t}\n\t\n\t/**\n\t * Check if a string starts with $ or _\n\t *\n\t * @param {String} str\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isReserved(str) {\n\t  var c = (str + '').charCodeAt(0);\n\t  return c === 0x24 || c === 0x5F;\n\t}\n\t\n\t/**\n\t * Guard text output, make sure undefined outputs\n\t * empty string\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction _toString(value) {\n\t  return value == null ? '' : value.toString();\n\t}\n\t\n\t/**\n\t * Check and convert possible numeric strings to numbers\n\t * before setting back to data\n\t *\n\t * @param {*} value\n\t * @return {*|Number}\n\t */\n\t\n\tfunction toNumber(value) {\n\t  if (typeof value !== 'string') {\n\t    return value;\n\t  } else {\n\t    var parsed = Number(value);\n\t    return isNaN(parsed) ? value : parsed;\n\t  }\n\t}\n\t\n\t/**\n\t * Convert string boolean literals into real booleans.\n\t *\n\t * @param {*} value\n\t * @return {*|Boolean}\n\t */\n\t\n\tfunction toBoolean(value) {\n\t  return value === 'true' ? true : value === 'false' ? false : value;\n\t}\n\t\n\t/**\n\t * Strip quotes from a string\n\t *\n\t * @param {String} str\n\t * @return {String | false}\n\t */\n\t\n\tfunction stripQuotes(str) {\n\t  var a = str.charCodeAt(0);\n\t  var b = str.charCodeAt(str.length - 1);\n\t  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n\t}\n\t\n\t/**\n\t * Camelize a hyphen-delmited string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar camelizeRE = /-(\\w)/g;\n\t\n\tfunction camelize(str) {\n\t  return str.replace(camelizeRE, toUpper);\n\t}\n\t\n\tfunction toUpper(_, c) {\n\t  return c ? c.toUpperCase() : '';\n\t}\n\t\n\t/**\n\t * Hyphenate a camelCase string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\t\n\tfunction hyphenate(str) {\n\t  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n\t}\n\t\n\t/**\n\t * Converts hyphen/underscore/slash delimitered names into\n\t * camelized classNames.\n\t *\n\t * e.g. my-component => MyComponent\n\t *      some_else    => SomeElse\n\t *      some/comp    => SomeComp\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\t\n\tfunction classify(str) {\n\t  return str.replace(classifyRE, toUpper);\n\t}\n\t\n\t/**\n\t * Simple bind, faster than native\n\t *\n\t * @param {Function} fn\n\t * @param {Object} ctx\n\t * @return {Function}\n\t */\n\t\n\tfunction bind(fn, ctx) {\n\t  return function (a) {\n\t    var l = arguments.length;\n\t    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n\t  };\n\t}\n\t\n\t/**\n\t * Convert an Array-like object to a real Array.\n\t *\n\t * @param {Array-like} list\n\t * @param {Number} [start] - start index\n\t * @return {Array}\n\t */\n\t\n\tfunction toArray(list, start) {\n\t  start = start || 0;\n\t  var i = list.length - start;\n\t  var ret = new Array(i);\n\t  while (i--) {\n\t    ret[i] = list[i + start];\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Mix properties into target object.\n\t *\n\t * @param {Object} to\n\t * @param {Object} from\n\t */\n\t\n\tfunction extend(to, from) {\n\t  var keys = Object.keys(from);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    to[keys[i]] = from[keys[i]];\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Quick object check - this is primarily used to tell\n\t * Objects from primitive values when we know the value\n\t * is a JSON-compliant type.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isObject(obj) {\n\t  return obj !== null && typeof obj === 'object';\n\t}\n\t\n\t/**\n\t * Strict object type check. Only returns true\n\t * for plain JavaScript objects.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar toString = Object.prototype.toString;\n\tvar OBJECT_STRING = '[object Object]';\n\t\n\tfunction isPlainObject(obj) {\n\t  return toString.call(obj) === OBJECT_STRING;\n\t}\n\t\n\t/**\n\t * Array type check.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar isArray = Array.isArray;\n\t\n\t/**\n\t * Define a property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t * @param {Boolean} [enumerable]\n\t */\n\t\n\tfunction def(obj, key, val, enumerable) {\n\t  Object.defineProperty(obj, key, {\n\t    value: val,\n\t    enumerable: !!enumerable,\n\t    writable: true,\n\t    configurable: true\n\t  });\n\t}\n\t\n\t/**\n\t * Debounce a function so it only gets called after the\n\t * input stops arriving after the given wait period.\n\t *\n\t * @param {Function} func\n\t * @param {Number} wait\n\t * @return {Function} - the debounced function\n\t */\n\t\n\tfunction _debounce(func, wait) {\n\t  var timeout, args, context, timestamp, result;\n\t  var later = function later() {\n\t    var last = Date.now() - timestamp;\n\t    if (last < wait && last >= 0) {\n\t      timeout = setTimeout(later, wait - last);\n\t    } else {\n\t      timeout = null;\n\t      result = func.apply(context, args);\n\t      if (!timeout) context = args = null;\n\t    }\n\t  };\n\t  return function () {\n\t    context = this;\n\t    args = arguments;\n\t    timestamp = Date.now();\n\t    if (!timeout) {\n\t      timeout = setTimeout(later, wait);\n\t    }\n\t    return result;\n\t  };\n\t}\n\t\n\t/**\n\t * Manual indexOf because it's slightly faster than\n\t * native.\n\t *\n\t * @param {Array} arr\n\t * @param {*} obj\n\t */\n\t\n\tfunction indexOf(arr, obj) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (arr[i] === obj) return i;\n\t  }\n\t  return -1;\n\t}\n\t\n\t/**\n\t * Make a cancellable version of an async callback.\n\t *\n\t * @param {Function} fn\n\t * @return {Function}\n\t */\n\t\n\tfunction cancellable(fn) {\n\t  var cb = function cb() {\n\t    if (!cb.cancelled) {\n\t      return fn.apply(this, arguments);\n\t    }\n\t  };\n\t  cb.cancel = function () {\n\t    cb.cancelled = true;\n\t  };\n\t  return cb;\n\t}\n\t\n\t/**\n\t * Check if two values are loosely equal - that is,\n\t * if they are plain objects, do they have the same shape?\n\t *\n\t * @param {*} a\n\t * @param {*} b\n\t * @return {Boolean}\n\t */\n\t\n\tfunction looseEqual(a, b) {\n\t  /* eslint-disable eqeqeq */\n\t  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n\t  /* eslint-enable eqeqeq */\n\t}\n\t\n\tvar hasProto = ('__proto__' in {});\n\t\n\t// Browser environment sniffing\n\tvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\t\n\t// detect devtools\n\tvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\t\n\t// UA sniffing for working around browser-specific quirks\n\tvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\n\tvar isIE = UA && UA.indexOf('trident') > 0;\n\tvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\n\tvar isAndroid = UA && UA.indexOf('android') > 0;\n\tvar isIos = UA && /(iphone|ipad|ipod|ios)/i.test(UA);\n\tvar iosVersionMatch = isIos && UA.match(/os ([\\d_]+)/);\n\tvar iosVersion = iosVersionMatch && iosVersionMatch[1].split('_');\n\t\n\t// detecting iOS UIWebView by indexedDB\n\tvar hasMutationObserverBug = iosVersion && Number(iosVersion[0]) >= 9 && Number(iosVersion[1]) >= 3 && !window.indexedDB;\n\t\n\tvar transitionProp = undefined;\n\tvar transitionEndEvent = undefined;\n\tvar animationProp = undefined;\n\tvar animationEndEvent = undefined;\n\t\n\t// Transition property/event sniffing\n\tif (inBrowser && !isIE9) {\n\t  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n\t  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n\t  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n\t  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n\t  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n\t  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n\t}\n\t\n\t/**\n\t * Defer a task to execute it asynchronously. Ideally this\n\t * should be executed as a microtask, so we leverage\n\t * MutationObserver if it's available, and fallback to\n\t * setTimeout(0).\n\t *\n\t * @param {Function} cb\n\t * @param {Object} ctx\n\t */\n\t\n\tvar nextTick = (function () {\n\t  var callbacks = [];\n\t  var pending = false;\n\t  var timerFunc;\n\t  function nextTickHandler() {\n\t    pending = false;\n\t    var copies = callbacks.slice(0);\n\t    callbacks = [];\n\t    for (var i = 0; i < copies.length; i++) {\n\t      copies[i]();\n\t    }\n\t  }\n\t\n\t  /* istanbul ignore if */\n\t  if (typeof MutationObserver !== 'undefined' && !hasMutationObserverBug) {\n\t    var counter = 1;\n\t    var observer = new MutationObserver(nextTickHandler);\n\t    var textNode = document.createTextNode(counter);\n\t    observer.observe(textNode, {\n\t      characterData: true\n\t    });\n\t    timerFunc = function () {\n\t      counter = (counter + 1) % 2;\n\t      textNode.data = counter;\n\t    };\n\t  } else {\n\t    // webpack attempts to inject a shim for setImmediate\n\t    // if it is used as a global, so we have to work around that to\n\t    // avoid bundling unnecessary code.\n\t    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n\t    timerFunc = context.setImmediate || setTimeout;\n\t  }\n\t  return function (cb, ctx) {\n\t    var func = ctx ? function () {\n\t      cb.call(ctx);\n\t    } : cb;\n\t    callbacks.push(func);\n\t    if (pending) return;\n\t    pending = true;\n\t    timerFunc(nextTickHandler, 0);\n\t  };\n\t})();\n\t\n\tvar _Set = undefined;\n\t/* istanbul ignore if */\n\tif (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n\t  // use native Set when available.\n\t  _Set = Set;\n\t} else {\n\t  // a non-standard Set polyfill that only works with primitive keys.\n\t  _Set = function () {\n\t    this.set = Object.create(null);\n\t  };\n\t  _Set.prototype.has = function (key) {\n\t    return this.set[key] !== undefined;\n\t  };\n\t  _Set.prototype.add = function (key) {\n\t    this.set[key] = 1;\n\t  };\n\t  _Set.prototype.clear = function () {\n\t    this.set = Object.create(null);\n\t  };\n\t}\n\t\n\tfunction Cache(limit) {\n\t  this.size = 0;\n\t  this.limit = limit;\n\t  this.head = this.tail = undefined;\n\t  this._keymap = Object.create(null);\n\t}\n\t\n\tvar p = Cache.prototype;\n\t\n\t/**\n\t * Put <value> into the cache associated with <key>.\n\t * Returns the entry which was removed to make room for\n\t * the new entry. Otherwise undefined is returned.\n\t * (i.e. if there was enough room already).\n\t *\n\t * @param {String} key\n\t * @param {*} value\n\t * @return {Entry|undefined}\n\t */\n\t\n\tp.put = function (key, value) {\n\t  var removed;\n\t\n\t  var entry = this.get(key, true);\n\t  if (!entry) {\n\t    if (this.size === this.limit) {\n\t      removed = this.shift();\n\t    }\n\t    entry = {\n\t      key: key\n\t    };\n\t    this._keymap[key] = entry;\n\t    if (this.tail) {\n\t      this.tail.newer = entry;\n\t      entry.older = this.tail;\n\t    } else {\n\t      this.head = entry;\n\t    }\n\t    this.tail = entry;\n\t    this.size++;\n\t  }\n\t  entry.value = value;\n\t\n\t  return removed;\n\t};\n\t\n\t/**\n\t * Purge the least recently used (oldest) entry from the\n\t * cache. Returns the removed entry or undefined if the\n\t * cache was empty.\n\t */\n\t\n\tp.shift = function () {\n\t  var entry = this.head;\n\t  if (entry) {\n\t    this.head = this.head.newer;\n\t    this.head.older = undefined;\n\t    entry.newer = entry.older = undefined;\n\t    this._keymap[entry.key] = undefined;\n\t    this.size--;\n\t  }\n\t  return entry;\n\t};\n\t\n\t/**\n\t * Get and register recent use of <key>. Returns the value\n\t * associated with <key> or undefined if not in cache.\n\t *\n\t * @param {String} key\n\t * @param {Boolean} returnEntry\n\t * @return {Entry|*}\n\t */\n\t\n\tp.get = function (key, returnEntry) {\n\t  var entry = this._keymap[key];\n\t  if (entry === undefined) return;\n\t  if (entry === this.tail) {\n\t    return returnEntry ? entry : entry.value;\n\t  }\n\t  // HEAD--------------TAIL\n\t  //   <.older   .newer>\n\t  //  <--- add direction --\n\t  //   A  B  C  <D>  E\n\t  if (entry.newer) {\n\t    if (entry === this.head) {\n\t      this.head = entry.newer;\n\t    }\n\t    entry.newer.older = entry.older; // C <-- E.\n\t  }\n\t  if (entry.older) {\n\t    entry.older.newer = entry.newer; // C. --> E\n\t  }\n\t  entry.newer = undefined; // D --x\n\t  entry.older = this.tail; // D. --> E\n\t  if (this.tail) {\n\t    this.tail.newer = entry; // E. <-- D\n\t  }\n\t  this.tail = entry;\n\t  return returnEntry ? entry : entry.value;\n\t};\n\t\n\tvar cache$1 = new Cache(1000);\n\tvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\n\tvar reservedArgRE = /^in$|^-?\\d+/;\n\t\n\t/**\n\t * Parser state\n\t */\n\t\n\tvar str;\n\tvar dir;\n\tvar c;\n\tvar prev;\n\tvar i;\n\tvar l;\n\tvar lastFilterIndex;\n\tvar inSingle;\n\tvar inDouble;\n\tvar curly;\n\tvar square;\n\tvar paren;\n\t/**\n\t * Push a filter to the current directive object\n\t */\n\t\n\tfunction pushFilter() {\n\t  var exp = str.slice(lastFilterIndex, i).trim();\n\t  var filter;\n\t  if (exp) {\n\t    filter = {};\n\t    var tokens = exp.match(filterTokenRE);\n\t    filter.name = tokens[0];\n\t    if (tokens.length > 1) {\n\t      filter.args = tokens.slice(1).map(processFilterArg);\n\t    }\n\t  }\n\t  if (filter) {\n\t    (dir.filters = dir.filters || []).push(filter);\n\t  }\n\t  lastFilterIndex = i + 1;\n\t}\n\t\n\t/**\n\t * Check if an argument is dynamic and strip quotes.\n\t *\n\t * @param {String} arg\n\t * @return {Object}\n\t */\n\t\n\tfunction processFilterArg(arg) {\n\t  if (reservedArgRE.test(arg)) {\n\t    return {\n\t      value: toNumber(arg),\n\t      dynamic: false\n\t    };\n\t  } else {\n\t    var stripped = stripQuotes(arg);\n\t    var dynamic = stripped === arg;\n\t    return {\n\t      value: dynamic ? arg : stripped,\n\t      dynamic: dynamic\n\t    };\n\t  }\n\t}\n\t\n\t/**\n\t * Parse a directive value and extract the expression\n\t * and its filters into a descriptor.\n\t *\n\t * Example:\n\t *\n\t * \"a + 1 | uppercase\" will yield:\n\t * {\n\t *   expression: 'a + 1',\n\t *   filters: [\n\t *     { name: 'uppercase', args: null }\n\t *   ]\n\t * }\n\t *\n\t * @param {String} s\n\t * @return {Object}\n\t */\n\t\n\tfunction parseDirective(s) {\n\t  var hit = cache$1.get(s);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  // reset parser state\n\t  str = s;\n\t  inSingle = inDouble = false;\n\t  curly = square = paren = 0;\n\t  lastFilterIndex = 0;\n\t  dir = {};\n\t\n\t  for (i = 0, l = str.length; i < l; i++) {\n\t    prev = c;\n\t    c = str.charCodeAt(i);\n\t    if (inSingle) {\n\t      // check single quote\n\t      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n\t    } else if (inDouble) {\n\t      // check double quote\n\t      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n\t    } else if (c === 0x7C && // pipe\n\t    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n\t      if (dir.expression == null) {\n\t        // first filter, end of expression\n\t        lastFilterIndex = i + 1;\n\t        dir.expression = str.slice(0, i).trim();\n\t      } else {\n\t        // already has filter\n\t        pushFilter();\n\t      }\n\t    } else {\n\t      switch (c) {\n\t        case 0x22:\n\t          inDouble = true;break; // \"\n\t        case 0x27:\n\t          inSingle = true;break; // '\n\t        case 0x28:\n\t          paren++;break; // (\n\t        case 0x29:\n\t          paren--;break; // )\n\t        case 0x5B:\n\t          square++;break; // [\n\t        case 0x5D:\n\t          square--;break; // ]\n\t        case 0x7B:\n\t          curly++;break; // {\n\t        case 0x7D:\n\t          curly--;break; // }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (dir.expression == null) {\n\t    dir.expression = str.slice(0, i).trim();\n\t  } else if (lastFilterIndex !== 0) {\n\t    pushFilter();\n\t  }\n\t\n\t  cache$1.put(s, dir);\n\t  return dir;\n\t}\n\t\n\tvar directive = Object.freeze({\n\t  parseDirective: parseDirective\n\t});\n\t\n\tvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\tvar cache = undefined;\n\tvar tagRE = undefined;\n\tvar htmlRE = undefined;\n\t/**\n\t * Escape a string so it can be used in a RegExp\n\t * constructor.\n\t *\n\t * @param {String} str\n\t */\n\t\n\tfunction escapeRegex(str) {\n\t  return str.replace(regexEscapeRE, '\\\\$&');\n\t}\n\t\n\tfunction compileRegex() {\n\t  var open = escapeRegex(config.delimiters[0]);\n\t  var close = escapeRegex(config.delimiters[1]);\n\t  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n\t  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n\t  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n\t  htmlRE = new RegExp('^' + unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '$');\n\t  // reset cache\n\t  cache = new Cache(1000);\n\t}\n\t\n\t/**\n\t * Parse a template text string into an array of tokens.\n\t *\n\t * @param {String} text\n\t * @return {Array<Object> | null}\n\t *               - {String} type\n\t *               - {String} value\n\t *               - {Boolean} [html]\n\t *               - {Boolean} [oneTime]\n\t */\n\t\n\tfunction parseText(text) {\n\t  if (!cache) {\n\t    compileRegex();\n\t  }\n\t  var hit = cache.get(text);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t  if (!tagRE.test(text)) {\n\t    return null;\n\t  }\n\t  var tokens = [];\n\t  var lastIndex = tagRE.lastIndex = 0;\n\t  var match, index, html, value, first, oneTime;\n\t  /* eslint-disable no-cond-assign */\n\t  while (match = tagRE.exec(text)) {\n\t    /* eslint-enable no-cond-assign */\n\t    index = match.index;\n\t    // push text token\n\t    if (index > lastIndex) {\n\t      tokens.push({\n\t        value: text.slice(lastIndex, index)\n\t      });\n\t    }\n\t    // tag token\n\t    html = htmlRE.test(match[0]);\n\t    value = html ? match[1] : match[2];\n\t    first = value.charCodeAt(0);\n\t    oneTime = first === 42; // *\n\t    value = oneTime ? value.slice(1) : value;\n\t    tokens.push({\n\t      tag: true,\n\t      value: value.trim(),\n\t      html: html,\n\t      oneTime: oneTime\n\t    });\n\t    lastIndex = index + match[0].length;\n\t  }\n\t  if (lastIndex < text.length) {\n\t    tokens.push({\n\t      value: text.slice(lastIndex)\n\t    });\n\t  }\n\t  cache.put(text, tokens);\n\t  return tokens;\n\t}\n\t\n\t/**\n\t * Format a list of tokens into an expression.\n\t * e.g. tokens parsed from 'a {{b}} c' can be serialized\n\t * into one single expression as '\"a \" + b + \" c\"'.\n\t *\n\t * @param {Array} tokens\n\t * @param {Vue} [vm]\n\t * @return {String}\n\t */\n\t\n\tfunction tokensToExp(tokens, vm) {\n\t  if (tokens.length > 1) {\n\t    return tokens.map(function (token) {\n\t      return formatToken(token, vm);\n\t    }).join('+');\n\t  } else {\n\t    return formatToken(tokens[0], vm, true);\n\t  }\n\t}\n\t\n\t/**\n\t * Format a single token.\n\t *\n\t * @param {Object} token\n\t * @param {Vue} [vm]\n\t * @param {Boolean} [single]\n\t * @return {String}\n\t */\n\t\n\tfunction formatToken(token, vm, single) {\n\t  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n\t}\n\t\n\t/**\n\t * For an attribute with multiple interpolation tags,\n\t * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n\t * the whole thing into a single watchable expression, we\n\t * have to inline those filters. This function does exactly\n\t * that. This is a bit hacky but it avoids heavy changes\n\t * to directive parser and watcher mechanism.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} single\n\t * @return {String}\n\t */\n\t\n\tvar filterRE = /[^|]\\|[^|]/;\n\tfunction inlineFilters(exp, single) {\n\t  if (!filterRE.test(exp)) {\n\t    return single ? exp : '(' + exp + ')';\n\t  } else {\n\t    var dir = parseDirective(exp);\n\t    if (!dir.filters) {\n\t      return '(' + exp + ')';\n\t    } else {\n\t      return 'this._applyFilters(' + dir.expression + // value\n\t      ',null,' + // oldValue (null for read)\n\t      JSON.stringify(dir.filters) + // filter descriptors\n\t      ',false)'; // write?\n\t    }\n\t  }\n\t}\n\t\n\tvar text = Object.freeze({\n\t  compileRegex: compileRegex,\n\t  parseText: parseText,\n\t  tokensToExp: tokensToExp\n\t});\n\t\n\tvar delimiters = ['{{', '}}'];\n\tvar unsafeDelimiters = ['{{{', '}}}'];\n\t\n\tvar config = Object.defineProperties({\n\t\n\t  /**\n\t   * Whether to print debug messages.\n\t   * Also enables stack trace for warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  debug: false,\n\t\n\t  /**\n\t   * Whether to suppress warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  silent: false,\n\t\n\t  /**\n\t   * Whether to use async rendering.\n\t   */\n\t\n\t  async: true,\n\t\n\t  /**\n\t   * Whether to warn against errors caught when evaluating\n\t   * expressions.\n\t   */\n\t\n\t  warnExpressionErrors: true,\n\t\n\t  /**\n\t   * Whether to allow devtools inspection.\n\t   * Disabled by default in production builds.\n\t   */\n\t\n\t  devtools: (\"production\") !== 'production',\n\t\n\t  /**\n\t   * Internal flag to indicate the delimiters have been\n\t   * changed.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  _delimitersChanged: true,\n\t\n\t  /**\n\t   * List of asset types that a component can own.\n\t   *\n\t   * @type {Array}\n\t   */\n\t\n\t  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\t\n\t  /**\n\t   * prop binding modes\n\t   */\n\t\n\t  _propBindingModes: {\n\t    ONE_WAY: 0,\n\t    TWO_WAY: 1,\n\t    ONE_TIME: 2\n\t  },\n\t\n\t  /**\n\t   * Max circular updates allowed in a batcher flush cycle.\n\t   */\n\t\n\t  _maxUpdateCount: 100\n\t\n\t}, {\n\t  delimiters: { /**\n\t                 * Interpolation delimiters. Changing these would trigger\n\t                 * the text parser to re-compile the regular expressions.\n\t                 *\n\t                 * @type {Array<String>}\n\t                 */\n\t\n\t    get: function get() {\n\t      return delimiters;\n\t    },\n\t    set: function set(val) {\n\t      delimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  },\n\t  unsafeDelimiters: {\n\t    get: function get() {\n\t      return unsafeDelimiters;\n\t    },\n\t    set: function set(val) {\n\t      unsafeDelimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  }\n\t});\n\t\n\tvar warn = undefined;\n\tvar formatComponentName = undefined;\n\t\n\tif (false) {\n\t  (function () {\n\t    var hasConsole = typeof console !== 'undefined';\n\t\n\t    warn = function (msg, vm) {\n\t      if (hasConsole && !config.silent) {\n\t        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n\t      }\n\t    };\n\t\n\t    formatComponentName = function (vm) {\n\t      var name = vm._isVue ? vm.$options.name : vm.name;\n\t      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n\t    };\n\t  })();\n\t}\n\t\n\t/**\n\t * Append with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction appendWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    target.appendChild(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * InsertBefore with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction beforeWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    before(el, target);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Remove with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction removeWithTransition(el, vm, cb) {\n\t  applyTransition(el, -1, function () {\n\t    remove(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Apply transitions with an operation callback.\n\t *\n\t * @param {Element} el\n\t * @param {Number} direction\n\t *                  1: enter\n\t *                 -1: leave\n\t * @param {Function} op - the actual DOM operation\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction applyTransition(el, direction, op, vm, cb) {\n\t  var transition = el.__v_trans;\n\t  if (!transition ||\n\t  // skip if there are no js hooks and CSS transition is\n\t  // not supported\n\t  !transition.hooks && !transitionEndEvent ||\n\t  // skip transitions for initial compile\n\t  !vm._isCompiled ||\n\t  // if the vm is being manipulated by a parent directive\n\t  // during the parent's compilation phase, skip the\n\t  // animation.\n\t  vm.$parent && !vm.$parent._isCompiled) {\n\t    op();\n\t    if (cb) cb();\n\t    return;\n\t  }\n\t  var action = direction > 0 ? 'enter' : 'leave';\n\t  transition[action](op, cb);\n\t}\n\t\n\tvar transition = Object.freeze({\n\t  appendWithTransition: appendWithTransition,\n\t  beforeWithTransition: beforeWithTransition,\n\t  removeWithTransition: removeWithTransition,\n\t  applyTransition: applyTransition\n\t});\n\t\n\t/**\n\t * Query an element selector if it's not an element already.\n\t *\n\t * @param {String|Element} el\n\t * @return {Element}\n\t */\n\t\n\tfunction query(el) {\n\t  if (typeof el === 'string') {\n\t    var selector = el;\n\t    el = document.querySelector(el);\n\t    if (!el) {\n\t      (\"production\") !== 'production' && warn('Cannot find element: ' + selector);\n\t    }\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Check if a node is in the document.\n\t * Note: document.documentElement.contains should work here\n\t * but always returns false for comment nodes in phantomjs,\n\t * making unit tests difficult. This is fixed by doing the\n\t * contains() check on the node's parentNode instead of\n\t * the node itself.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction inDoc(node) {\n\t  if (!node) return false;\n\t  var doc = node.ownerDocument.documentElement;\n\t  var parent = node.parentNode;\n\t  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n\t}\n\t\n\t/**\n\t * Get and remove an attribute from a node.\n\t *\n\t * @param {Node} node\n\t * @param {String} _attr\n\t */\n\t\n\tfunction getAttr(node, _attr) {\n\t  var val = node.getAttribute(_attr);\n\t  if (val !== null) {\n\t    node.removeAttribute(_attr);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Get an attribute with colon or v-bind: prefix.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {String|null}\n\t */\n\t\n\tfunction getBindAttr(node, name) {\n\t  var val = getAttr(node, ':' + name);\n\t  if (val === null) {\n\t    val = getAttr(node, 'v-bind:' + name);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Check the presence of a bind attribute.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasBindAttr(node, name) {\n\t  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n\t}\n\t\n\t/**\n\t * Insert el before target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction before(el, target) {\n\t  target.parentNode.insertBefore(el, target);\n\t}\n\t\n\t/**\n\t * Insert el after target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction after(el, target) {\n\t  if (target.nextSibling) {\n\t    before(el, target.nextSibling);\n\t  } else {\n\t    target.parentNode.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove el from DOM\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction remove(el) {\n\t  el.parentNode.removeChild(el);\n\t}\n\t\n\t/**\n\t * Prepend el to target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction prepend(el, target) {\n\t  if (target.firstChild) {\n\t    before(el, target.firstChild);\n\t  } else {\n\t    target.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Replace target with el\n\t *\n\t * @param {Element} target\n\t * @param {Element} el\n\t */\n\t\n\tfunction replace(target, el) {\n\t  var parent = target.parentNode;\n\t  if (parent) {\n\t    parent.replaceChild(el, target);\n\t  }\n\t}\n\t\n\t/**\n\t * Add event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tfunction on(el, event, cb, useCapture) {\n\t  el.addEventListener(event, cb, useCapture);\n\t}\n\t\n\t/**\n\t * Remove event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tfunction off(el, event, cb) {\n\t  el.removeEventListener(event, cb);\n\t}\n\t\n\t/**\n\t * For IE9 compat: when both class and :class are present\n\t * getAttribute('class') returns wrong value...\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getClass(el) {\n\t  var classname = el.className;\n\t  if (typeof classname === 'object') {\n\t    classname = classname.baseVal || '';\n\t  }\n\t  return classname;\n\t}\n\t\n\t/**\n\t * In IE9, setAttribute('class') will result in empty class\n\t * if the element also has the :class attribute; However in\n\t * PhantomJS, setting `className` does not work on SVG elements...\n\t * So we have to do a conditional check here.\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction setClass(el, cls) {\n\t  /* istanbul ignore if */\n\t  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n\t    el.className = cls;\n\t  } else {\n\t    el.setAttribute('class', cls);\n\t  }\n\t}\n\t\n\t/**\n\t * Add class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction addClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.add(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    if (cur.indexOf(' ' + cls + ' ') < 0) {\n\t      setClass(el, (cur + cls).trim());\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Remove class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction removeClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.remove(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    var tar = ' ' + cls + ' ';\n\t    while (cur.indexOf(tar) >= 0) {\n\t      cur = cur.replace(tar, ' ');\n\t    }\n\t    setClass(el, cur.trim());\n\t  }\n\t  if (!el.className) {\n\t    el.removeAttribute('class');\n\t  }\n\t}\n\t\n\t/**\n\t * Extract raw content inside an element into a temporary\n\t * container div\n\t *\n\t * @param {Element} el\n\t * @param {Boolean} asFragment\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction extractContent(el, asFragment) {\n\t  var child;\n\t  var rawContent;\n\t  /* istanbul ignore if */\n\t  if (isTemplate(el) && isFragment(el.content)) {\n\t    el = el.content;\n\t  }\n\t  if (el.hasChildNodes()) {\n\t    trimNode(el);\n\t    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = el.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      rawContent.appendChild(child);\n\t    }\n\t  }\n\t  return rawContent;\n\t}\n\t\n\t/**\n\t * Trim possible empty head/tail text and comment\n\t * nodes inside a parent.\n\t *\n\t * @param {Node} node\n\t */\n\t\n\tfunction trimNode(node) {\n\t  var child;\n\t  /* eslint-disable no-sequences */\n\t  while ((child = node.firstChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  while ((child = node.lastChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  /* eslint-enable no-sequences */\n\t}\n\t\n\tfunction isTrimmable(node) {\n\t  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n\t}\n\t\n\t/**\n\t * Check if an element is a template tag.\n\t * Note if the template appears inside an SVG its tagName\n\t * will be in lowercase.\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction isTemplate(el) {\n\t  return el.tagName && el.tagName.toLowerCase() === 'template';\n\t}\n\t\n\t/**\n\t * Create an \"anchor\" for performing dom insertion/removals.\n\t * This is used in a number of scenarios:\n\t * - fragment instance\n\t * - v-html\n\t * - v-if\n\t * - v-for\n\t * - component\n\t *\n\t * @param {String} content\n\t * @param {Boolean} persist - IE trashes empty textNodes on\n\t *                            cloneNode(true), so in certain\n\t *                            cases the anchor needs to be\n\t *                            non-empty to be persisted in\n\t *                            templates.\n\t * @return {Comment|Text}\n\t */\n\t\n\tfunction createAnchor(content, persist) {\n\t  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n\t  anchor.__v_anchor = true;\n\t  return anchor;\n\t}\n\t\n\t/**\n\t * Find a component ref attribute that starts with $.\n\t *\n\t * @param {Element} node\n\t * @return {String|undefined}\n\t */\n\t\n\tvar refRE = /^v-ref:/;\n\t\n\tfunction findRef(node) {\n\t  if (node.hasAttributes()) {\n\t    var attrs = node.attributes;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      var name = attrs[i].name;\n\t      if (refRE.test(name)) {\n\t        return camelize(name.replace(refRE, ''));\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Map a function to a range of nodes .\n\t *\n\t * @param {Node} node\n\t * @param {Node} end\n\t * @param {Function} op\n\t */\n\t\n\tfunction mapNodeRange(node, end, op) {\n\t  var next;\n\t  while (node !== end) {\n\t    next = node.nextSibling;\n\t    op(node);\n\t    node = next;\n\t  }\n\t  op(end);\n\t}\n\t\n\t/**\n\t * Remove a range of nodes with transition, store\n\t * the nodes in a fragment with correct ordering,\n\t * and call callback when done.\n\t *\n\t * @param {Node} start\n\t * @param {Node} end\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Function} cb\n\t */\n\t\n\tfunction removeNodeRange(start, end, vm, frag, cb) {\n\t  var done = false;\n\t  var removed = 0;\n\t  var nodes = [];\n\t  mapNodeRange(start, end, function (node) {\n\t    if (node === end) done = true;\n\t    nodes.push(node);\n\t    removeWithTransition(node, vm, onRemoved);\n\t  });\n\t  function onRemoved() {\n\t    removed++;\n\t    if (done && removed >= nodes.length) {\n\t      for (var i = 0; i < nodes.length; i++) {\n\t        frag.appendChild(nodes[i]);\n\t      }\n\t      cb && cb();\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Check if a node is a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isFragment(node) {\n\t  return node && node.nodeType === 11;\n\t}\n\t\n\t/**\n\t * Get outerHTML of elements, taking care\n\t * of SVG elements in IE as well.\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getOuterHTML(el) {\n\t  if (el.outerHTML) {\n\t    return el.outerHTML;\n\t  } else {\n\t    var container = document.createElement('div');\n\t    container.appendChild(el.cloneNode(true));\n\t    return container.innerHTML;\n\t  }\n\t}\n\t\n\tvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\n\tvar reservedTagRE = /^(slot|partial|component)$/i;\n\t\n\tvar isUnknownElement = undefined;\n\tif (false) {\n\t  isUnknownElement = function (el, tag) {\n\t    if (tag.indexOf('-') > -1) {\n\t      // http://stackoverflow.com/a/28210364/1070244\n\t      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n\t    } else {\n\t      return (/HTMLUnknownElement/.test(el.toString()) &&\n\t        // Chrome returns unknown for several HTML5 elements.\n\t        // https://code.google.com/p/chromium/issues/detail?id=540526\n\t        // Firefox returns unknown for some \"Interactive elements.\"\n\t        !/^(data|time|rtc|rb|details|dialog|summary)$/.test(tag)\n\t      );\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an element is a component, if yes return its\n\t * component id.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction checkComponentAttr(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  var hasAttrs = el.hasAttributes();\n\t  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n\t    if (resolveAsset(options, 'components', tag)) {\n\t      return { id: tag };\n\t    } else {\n\t      var is = hasAttrs && getIsBinding(el, options);\n\t      if (is) {\n\t        return is;\n\t      } else if (false) {\n\t        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n\t        if (expectedTag) {\n\t          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n\t        } else if (isUnknownElement(el, tag)) {\n\t          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n\t        }\n\t      }\n\t    }\n\t  } else if (hasAttrs) {\n\t    return getIsBinding(el, options);\n\t  }\n\t}\n\t\n\t/**\n\t * Get \"is\" binding from an element.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction getIsBinding(el, options) {\n\t  // dynamic syntax\n\t  var exp = el.getAttribute('is');\n\t  if (exp != null) {\n\t    if (resolveAsset(options, 'components', exp)) {\n\t      el.removeAttribute('is');\n\t      return { id: exp };\n\t    }\n\t  } else {\n\t    exp = getBindAttr(el, 'is');\n\t    if (exp != null) {\n\t      return { id: exp, dynamic: true };\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Option overwriting strategies are functions that handle\n\t * how to merge a parent option value and a child option\n\t * value into the final value.\n\t *\n\t * All strategy functions follow the same signature:\n\t *\n\t * @param {*} parentVal\n\t * @param {*} childVal\n\t * @param {Vue} [vm]\n\t */\n\t\n\tvar strats = config.optionMergeStrategies = Object.create(null);\n\t\n\t/**\n\t * Helper that recursively merges two data objects together.\n\t */\n\t\n\tfunction mergeData(to, from) {\n\t  var key, toVal, fromVal;\n\t  for (key in from) {\n\t    toVal = to[key];\n\t    fromVal = from[key];\n\t    if (!hasOwn(to, key)) {\n\t      set(to, key, fromVal);\n\t    } else if (isObject(toVal) && isObject(fromVal)) {\n\t      mergeData(toVal, fromVal);\n\t    }\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Data\n\t */\n\t\n\tstrats.data = function (parentVal, childVal, vm) {\n\t  if (!vm) {\n\t    // in a Vue.extend merge, both should be functions\n\t    if (!childVal) {\n\t      return parentVal;\n\t    }\n\t    if (typeof childVal !== 'function') {\n\t      (\"production\") !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t      return parentVal;\n\t    }\n\t    if (!parentVal) {\n\t      return childVal;\n\t    }\n\t    // when parentVal & childVal are both present,\n\t    // we need to return a function that returns the\n\t    // merged result of both functions... no need to\n\t    // check if parentVal is a function here because\n\t    // it has to be a function to pass previous merges.\n\t    return function mergedDataFn() {\n\t      return mergeData(childVal.call(this), parentVal.call(this));\n\t    };\n\t  } else if (parentVal || childVal) {\n\t    return function mergedInstanceDataFn() {\n\t      // instance merge\n\t      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n\t      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n\t      if (instanceData) {\n\t        return mergeData(instanceData, defaultData);\n\t      } else {\n\t        return defaultData;\n\t      }\n\t    };\n\t  }\n\t};\n\t\n\t/**\n\t * El\n\t */\n\t\n\tstrats.el = function (parentVal, childVal, vm) {\n\t  if (!vm && childVal && typeof childVal !== 'function') {\n\t    (\"production\") !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t    return;\n\t  }\n\t  var ret = childVal || parentVal;\n\t  // invoke the element factory if this is instance merge\n\t  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n\t};\n\t\n\t/**\n\t * Hooks and param attributes are merged as arrays.\n\t */\n\t\n\tstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n\t  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n\t};\n\t\n\t/**\n\t * Assets\n\t *\n\t * When a vm is present (instance creation), we need to do\n\t * a three-way merge between constructor options, instance\n\t * options and parent options.\n\t */\n\t\n\tfunction mergeAssets(parentVal, childVal) {\n\t  var res = Object.create(parentVal || null);\n\t  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n\t}\n\t\n\tconfig._assetTypes.forEach(function (type) {\n\t  strats[type + 's'] = mergeAssets;\n\t});\n\t\n\t/**\n\t * Events & Watchers.\n\t *\n\t * Events & watchers hashes should not overwrite one\n\t * another, so we merge them as arrays.\n\t */\n\t\n\tstrats.watch = strats.events = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = {};\n\t  extend(ret, parentVal);\n\t  for (var key in childVal) {\n\t    var parent = ret[key];\n\t    var child = childVal[key];\n\t    if (parent && !isArray(parent)) {\n\t      parent = [parent];\n\t    }\n\t    ret[key] = parent ? parent.concat(child) : [child];\n\t  }\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Other object hashes.\n\t */\n\t\n\tstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = Object.create(null);\n\t  extend(ret, parentVal);\n\t  extend(ret, childVal);\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Default strategy.\n\t */\n\t\n\tvar defaultStrat = function defaultStrat(parentVal, childVal) {\n\t  return childVal === undefined ? parentVal : childVal;\n\t};\n\t\n\t/**\n\t * Make sure component options get converted to actual\n\t * constructors.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardComponents(options) {\n\t  if (options.components) {\n\t    var components = options.components = guardArrayAssets(options.components);\n\t    var ids = Object.keys(components);\n\t    var def;\n\t    if (false) {\n\t      var map = options._componentNameMap = {};\n\t    }\n\t    for (var i = 0, l = ids.length; i < l; i++) {\n\t      var key = ids[i];\n\t      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n\t        (\"production\") !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n\t        continue;\n\t      }\n\t      // record a all lowercase <-> kebab-case mapping for\n\t      // possible custom element case error warning\n\t      if (false) {\n\t        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n\t      }\n\t      def = components[key];\n\t      if (isPlainObject(def)) {\n\t        components[key] = Vue.extend(def);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Ensure all props option syntax are normalized into the\n\t * Object-based format.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardProps(options) {\n\t  var props = options.props;\n\t  var i, val;\n\t  if (isArray(props)) {\n\t    options.props = {};\n\t    i = props.length;\n\t    while (i--) {\n\t      val = props[i];\n\t      if (typeof val === 'string') {\n\t        options.props[val] = null;\n\t      } else if (val.name) {\n\t        options.props[val.name] = val;\n\t      }\n\t    }\n\t  } else if (isPlainObject(props)) {\n\t    var keys = Object.keys(props);\n\t    i = keys.length;\n\t    while (i--) {\n\t      val = props[keys[i]];\n\t      if (typeof val === 'function') {\n\t        props[keys[i]] = { type: val };\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Guard an Array-format assets option and converted it\n\t * into the key-value Object format.\n\t *\n\t * @param {Object|Array} assets\n\t * @return {Object}\n\t */\n\t\n\tfunction guardArrayAssets(assets) {\n\t  if (isArray(assets)) {\n\t    var res = {};\n\t    var i = assets.length;\n\t    var asset;\n\t    while (i--) {\n\t      asset = assets[i];\n\t      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n\t      if (!id) {\n\t        (\"production\") !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n\t      } else {\n\t        res[id] = asset;\n\t      }\n\t    }\n\t    return res;\n\t  }\n\t  return assets;\n\t}\n\t\n\t/**\n\t * Merge two option objects into a new one.\n\t * Core utility used in both instantiation and inheritance.\n\t *\n\t * @param {Object} parent\n\t * @param {Object} child\n\t * @param {Vue} [vm] - if vm is present, indicates this is\n\t *                     an instantiation merge.\n\t */\n\t\n\tfunction mergeOptions(parent, child, vm) {\n\t  guardComponents(child);\n\t  guardProps(child);\n\t  if (false) {\n\t    if (child.propsData && !vm) {\n\t      warn('propsData can only be used as an instantiation option.');\n\t    }\n\t  }\n\t  var options = {};\n\t  var key;\n\t  if (child['extends']) {\n\t    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n\t  }\n\t  if (child.mixins) {\n\t    for (var i = 0, l = child.mixins.length; i < l; i++) {\n\t      var mixin = child.mixins[i];\n\t      var mixinOptions = mixin.prototype instanceof Vue ? mixin.options : mixin;\n\t      parent = mergeOptions(parent, mixinOptions, vm);\n\t    }\n\t  }\n\t  for (key in parent) {\n\t    mergeField(key);\n\t  }\n\t  for (key in child) {\n\t    if (!hasOwn(parent, key)) {\n\t      mergeField(key);\n\t    }\n\t  }\n\t  function mergeField(key) {\n\t    var strat = strats[key] || defaultStrat;\n\t    options[key] = strat(parent[key], child[key], vm, key);\n\t  }\n\t  return options;\n\t}\n\t\n\t/**\n\t * Resolve an asset.\n\t * This function is used because child instances need access\n\t * to assets defined in its ancestor chain.\n\t *\n\t * @param {Object} options\n\t * @param {String} type\n\t * @param {String} id\n\t * @param {Boolean} warnMissing\n\t * @return {Object|Function}\n\t */\n\t\n\tfunction resolveAsset(options, type, id, warnMissing) {\n\t  /* istanbul ignore if */\n\t  if (typeof id !== 'string') {\n\t    return;\n\t  }\n\t  var assets = options[type];\n\t  var camelizedId;\n\t  var res = assets[id] ||\n\t  // camelCase ID\n\t  assets[camelizedId = camelize(id)] ||\n\t  // Pascal Case ID\n\t  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n\t  if (false) {\n\t    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n\t  }\n\t  return res;\n\t}\n\t\n\tvar uid$1 = 0;\n\t\n\t/**\n\t * A dep is an observable that can have multiple\n\t * directives subscribing to it.\n\t *\n\t * @constructor\n\t */\n\tfunction Dep() {\n\t  this.id = uid$1++;\n\t  this.subs = [];\n\t}\n\t\n\t// the current target watcher being evaluated.\n\t// this is globally unique because there could be only one\n\t// watcher being evaluated at any time.\n\tDep.target = null;\n\t\n\t/**\n\t * Add a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.addSub = function (sub) {\n\t  this.subs.push(sub);\n\t};\n\t\n\t/**\n\t * Remove a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.removeSub = function (sub) {\n\t  this.subs.$remove(sub);\n\t};\n\t\n\t/**\n\t * Add self as a dependency to the target watcher.\n\t */\n\t\n\tDep.prototype.depend = function () {\n\t  Dep.target.addDep(this);\n\t};\n\t\n\t/**\n\t * Notify all subscribers of a new value.\n\t */\n\t\n\tDep.prototype.notify = function () {\n\t  // stablize the subscriber list first\n\t  var subs = toArray(this.subs);\n\t  for (var i = 0, l = subs.length; i < l; i++) {\n\t    subs[i].update();\n\t  }\n\t};\n\t\n\tvar arrayProto = Array.prototype;\n\tvar arrayMethods = Object.create(arrayProto)\n\t\n\t/**\n\t * Intercept mutating methods and emit events\n\t */\n\t\n\t;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n\t  // cache original method\n\t  var original = arrayProto[method];\n\t  def(arrayMethods, method, function mutator() {\n\t    // avoid leaking arguments:\n\t    // http://jsperf.com/closure-with-arguments\n\t    var i = arguments.length;\n\t    var args = new Array(i);\n\t    while (i--) {\n\t      args[i] = arguments[i];\n\t    }\n\t    var result = original.apply(this, args);\n\t    var ob = this.__ob__;\n\t    var inserted;\n\t    switch (method) {\n\t      case 'push':\n\t        inserted = args;\n\t        break;\n\t      case 'unshift':\n\t        inserted = args;\n\t        break;\n\t      case 'splice':\n\t        inserted = args.slice(2);\n\t        break;\n\t    }\n\t    if (inserted) ob.observeArray(inserted);\n\t    // notify change\n\t    ob.dep.notify();\n\t    return result;\n\t  });\n\t});\n\t\n\t/**\n\t * Swap the element at the given index with a new value\n\t * and emits corresponding event.\n\t *\n\t * @param {Number} index\n\t * @param {*} val\n\t * @return {*} - replaced element\n\t */\n\t\n\tdef(arrayProto, '$set', function $set(index, val) {\n\t  if (index >= this.length) {\n\t    this.length = Number(index) + 1;\n\t  }\n\t  return this.splice(index, 1, val)[0];\n\t});\n\t\n\t/**\n\t * Convenience method to remove the element at given index or target element reference.\n\t *\n\t * @param {*} item\n\t */\n\t\n\tdef(arrayProto, '$remove', function $remove(item) {\n\t  /* istanbul ignore if */\n\t  if (!this.length) return;\n\t  var index = indexOf(this, item);\n\t  if (index > -1) {\n\t    return this.splice(index, 1);\n\t  }\n\t});\n\t\n\tvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\t\n\t/**\n\t * By default, when a reactive property is set, the new value is\n\t * also converted to become reactive. However in certain cases, e.g.\n\t * v-for scope alias and props, we don't want to force conversion\n\t * because the value may be a nested value under a frozen data structure.\n\t *\n\t * So whenever we want to set a reactive property without forcing\n\t * conversion on the new value, we wrap that call inside this function.\n\t */\n\t\n\tvar shouldConvert = true;\n\t\n\tfunction withoutConversion(fn) {\n\t  shouldConvert = false;\n\t  fn();\n\t  shouldConvert = true;\n\t}\n\t\n\t/**\n\t * Observer class that are attached to each observed\n\t * object. Once attached, the observer converts target\n\t * object's property keys into getter/setters that\n\t * collect dependencies and dispatches updates.\n\t *\n\t * @param {Array|Object} value\n\t * @constructor\n\t */\n\t\n\tfunction Observer(value) {\n\t  this.value = value;\n\t  this.dep = new Dep();\n\t  def(value, '__ob__', this);\n\t  if (isArray(value)) {\n\t    var augment = hasProto ? protoAugment : copyAugment;\n\t    augment(value, arrayMethods, arrayKeys);\n\t    this.observeArray(value);\n\t  } else {\n\t    this.walk(value);\n\t  }\n\t}\n\t\n\t// Instance methods\n\t\n\t/**\n\t * Walk through each property and convert them into\n\t * getter/setters. This method should only be called when\n\t * value type is Object.\n\t *\n\t * @param {Object} obj\n\t */\n\t\n\tObserver.prototype.walk = function (obj) {\n\t  var keys = Object.keys(obj);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    this.convert(keys[i], obj[keys[i]]);\n\t  }\n\t};\n\t\n\t/**\n\t * Observe a list of Array items.\n\t *\n\t * @param {Array} items\n\t */\n\t\n\tObserver.prototype.observeArray = function (items) {\n\t  for (var i = 0, l = items.length; i < l; i++) {\n\t    observe(items[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Convert a property into getter/setter so we can emit\n\t * the events when the property is accessed/changed.\n\t *\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tObserver.prototype.convert = function (key, val) {\n\t  defineReactive(this.value, key, val);\n\t};\n\t\n\t/**\n\t * Add an owner vm, so that when $set/$delete mutations\n\t * happen we can notify owner vms to proxy the keys and\n\t * digest the watchers. This is only called when the object\n\t * is observed as an instance's root $data.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.addVm = function (vm) {\n\t  (this.vms || (this.vms = [])).push(vm);\n\t};\n\t\n\t/**\n\t * Remove an owner vm. This is called when the object is\n\t * swapped out as an instance's $data object.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.removeVm = function (vm) {\n\t  this.vms.$remove(vm);\n\t};\n\t\n\t// helpers\n\t\n\t/**\n\t * Augment an target Object or Array by intercepting\n\t * the prototype chain using __proto__\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} src\n\t */\n\t\n\tfunction protoAugment(target, src) {\n\t  /* eslint-disable no-proto */\n\t  target.__proto__ = src;\n\t  /* eslint-enable no-proto */\n\t}\n\t\n\t/**\n\t * Augment an target Object or Array by defining\n\t * hidden properties.\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} proto\n\t */\n\t\n\tfunction copyAugment(target, src, keys) {\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    var key = keys[i];\n\t    def(target, key, src[key]);\n\t  }\n\t}\n\t\n\t/**\n\t * Attempt to create an observer instance for a value,\n\t * returns the new observer if successfully observed,\n\t * or the existing observer if the value already has one.\n\t *\n\t * @param {*} value\n\t * @param {Vue} [vm]\n\t * @return {Observer|undefined}\n\t * @static\n\t */\n\t\n\tfunction observe(value, vm) {\n\t  if (!value || typeof value !== 'object') {\n\t    return;\n\t  }\n\t  var ob;\n\t  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n\t    ob = value.__ob__;\n\t  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n\t    ob = new Observer(value);\n\t  }\n\t  if (ob && vm) {\n\t    ob.addVm(vm);\n\t  }\n\t  return ob;\n\t}\n\t\n\t/**\n\t * Define a reactive property on an Object.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tfunction defineReactive(obj, key, val) {\n\t  var dep = new Dep();\n\t\n\t  var property = Object.getOwnPropertyDescriptor(obj, key);\n\t  if (property && property.configurable === false) {\n\t    return;\n\t  }\n\t\n\t  // cater for pre-defined getter/setters\n\t  var getter = property && property.get;\n\t  var setter = property && property.set;\n\t\n\t  var childOb = observe(val);\n\t  Object.defineProperty(obj, key, {\n\t    enumerable: true,\n\t    configurable: true,\n\t    get: function reactiveGetter() {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (Dep.target) {\n\t        dep.depend();\n\t        if (childOb) {\n\t          childOb.dep.depend();\n\t        }\n\t        if (isArray(value)) {\n\t          for (var e, i = 0, l = value.length; i < l; i++) {\n\t            e = value[i];\n\t            e && e.__ob__ && e.__ob__.dep.depend();\n\t          }\n\t        }\n\t      }\n\t      return value;\n\t    },\n\t    set: function reactiveSetter(newVal) {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (newVal === value) {\n\t        return;\n\t      }\n\t      if (setter) {\n\t        setter.call(obj, newVal);\n\t      } else {\n\t        val = newVal;\n\t      }\n\t      childOb = observe(newVal);\n\t      dep.notify();\n\t    }\n\t  });\n\t}\n\t\n\t\n\t\n\tvar util = Object.freeze({\n\t\tdefineReactive: defineReactive,\n\t\tset: set,\n\t\tdel: del,\n\t\thasOwn: hasOwn,\n\t\tisLiteral: isLiteral,\n\t\tisReserved: isReserved,\n\t\t_toString: _toString,\n\t\ttoNumber: toNumber,\n\t\ttoBoolean: toBoolean,\n\t\tstripQuotes: stripQuotes,\n\t\tcamelize: camelize,\n\t\thyphenate: hyphenate,\n\t\tclassify: classify,\n\t\tbind: bind,\n\t\ttoArray: toArray,\n\t\textend: extend,\n\t\tisObject: isObject,\n\t\tisPlainObject: isPlainObject,\n\t\tdef: def,\n\t\tdebounce: _debounce,\n\t\tindexOf: indexOf,\n\t\tcancellable: cancellable,\n\t\tlooseEqual: looseEqual,\n\t\tisArray: isArray,\n\t\thasProto: hasProto,\n\t\tinBrowser: inBrowser,\n\t\tdevtools: devtools,\n\t\tisIE: isIE,\n\t\tisIE9: isIE9,\n\t\tisAndroid: isAndroid,\n\t\tisIos: isIos,\n\t\tiosVersionMatch: iosVersionMatch,\n\t\tiosVersion: iosVersion,\n\t\thasMutationObserverBug: hasMutationObserverBug,\n\t\tget transitionProp () { return transitionProp; },\n\t\tget transitionEndEvent () { return transitionEndEvent; },\n\t\tget animationProp () { return animationProp; },\n\t\tget animationEndEvent () { return animationEndEvent; },\n\t\tnextTick: nextTick,\n\t\tget _Set () { return _Set; },\n\t\tquery: query,\n\t\tinDoc: inDoc,\n\t\tgetAttr: getAttr,\n\t\tgetBindAttr: getBindAttr,\n\t\thasBindAttr: hasBindAttr,\n\t\tbefore: before,\n\t\tafter: after,\n\t\tremove: remove,\n\t\tprepend: prepend,\n\t\treplace: replace,\n\t\ton: on,\n\t\toff: off,\n\t\tsetClass: setClass,\n\t\taddClass: addClass,\n\t\tremoveClass: removeClass,\n\t\textractContent: extractContent,\n\t\ttrimNode: trimNode,\n\t\tisTemplate: isTemplate,\n\t\tcreateAnchor: createAnchor,\n\t\tfindRef: findRef,\n\t\tmapNodeRange: mapNodeRange,\n\t\tremoveNodeRange: removeNodeRange,\n\t\tisFragment: isFragment,\n\t\tgetOuterHTML: getOuterHTML,\n\t\tmergeOptions: mergeOptions,\n\t\tresolveAsset: resolveAsset,\n\t\tcheckComponentAttr: checkComponentAttr,\n\t\tcommonTagRE: commonTagRE,\n\t\treservedTagRE: reservedTagRE,\n\t\tget warn () { return warn; }\n\t});\n\t\n\tvar uid = 0;\n\t\n\tfunction initMixin (Vue) {\n\t  /**\n\t   * The main init sequence. This is called for every\n\t   * instance, including ones that are created from extended\n\t   * constructors.\n\t   *\n\t   * @param {Object} options - this options object should be\n\t   *                           the result of merging class\n\t   *                           options and the options passed\n\t   *                           in to the constructor.\n\t   */\n\t\n\t  Vue.prototype._init = function (options) {\n\t    options = options || {};\n\t\n\t    this.$el = null;\n\t    this.$parent = options.parent;\n\t    this.$root = this.$parent ? this.$parent.$root : this;\n\t    this.$children = [];\n\t    this.$refs = {}; // child vm references\n\t    this.$els = {}; // element references\n\t    this._watchers = []; // all watchers as an array\n\t    this._directives = []; // all directives\n\t\n\t    // a uid\n\t    this._uid = uid++;\n\t\n\t    // a flag to avoid this being observed\n\t    this._isVue = true;\n\t\n\t    // events bookkeeping\n\t    this._events = {}; // registered callbacks\n\t    this._eventsCount = {}; // for $broadcast optimization\n\t\n\t    // fragment instance properties\n\t    this._isFragment = false;\n\t    this._fragment = // @type {DocumentFragment}\n\t    this._fragmentStart = // @type {Text|Comment}\n\t    this._fragmentEnd = null; // @type {Text|Comment}\n\t\n\t    // lifecycle state\n\t    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n\t    this._unlinkFn = null;\n\t\n\t    // context:\n\t    // if this is a transcluded component, context\n\t    // will be the common parent vm of this instance\n\t    // and its host.\n\t    this._context = options._context || this.$parent;\n\t\n\t    // scope:\n\t    // if this is inside an inline v-for, the scope\n\t    // will be the intermediate scope created for this\n\t    // repeat fragment. this is used for linking props\n\t    // and container directives.\n\t    this._scope = options._scope;\n\t\n\t    // fragment:\n\t    // if this instance is compiled inside a Fragment, it\n\t    // needs to reigster itself as a child of that fragment\n\t    // for attach/detach to work properly.\n\t    this._frag = options._frag;\n\t    if (this._frag) {\n\t      this._frag.children.push(this);\n\t    }\n\t\n\t    // push self into parent / transclusion host\n\t    if (this.$parent) {\n\t      this.$parent.$children.push(this);\n\t    }\n\t\n\t    // merge options.\n\t    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\t\n\t    // set ref\n\t    this._updateRef();\n\t\n\t    // initialize data as empty object.\n\t    // it will be filled up in _initData().\n\t    this._data = {};\n\t\n\t    // call init hook\n\t    this._callHook('init');\n\t\n\t    // initialize data observation and scope inheritance.\n\t    this._initState();\n\t\n\t    // setup event system and option events.\n\t    this._initEvents();\n\t\n\t    // call created hook\n\t    this._callHook('created');\n\t\n\t    // if `el` option is passed, start compilation.\n\t    if (options.el) {\n\t      this.$mount(options.el);\n\t    }\n\t  };\n\t}\n\t\n\tvar pathCache = new Cache(1000);\n\t\n\t// actions\n\tvar APPEND = 0;\n\tvar PUSH = 1;\n\tvar INC_SUB_PATH_DEPTH = 2;\n\tvar PUSH_SUB_PATH = 3;\n\t\n\t// states\n\tvar BEFORE_PATH = 0;\n\tvar IN_PATH = 1;\n\tvar BEFORE_IDENT = 2;\n\tvar IN_IDENT = 3;\n\tvar IN_SUB_PATH = 4;\n\tvar IN_SINGLE_QUOTE = 5;\n\tvar IN_DOUBLE_QUOTE = 6;\n\tvar AFTER_PATH = 7;\n\tvar ERROR = 8;\n\t\n\tvar pathStateMachine = [];\n\t\n\tpathStateMachine[BEFORE_PATH] = {\n\t  'ws': [BEFORE_PATH],\n\t  'ident': [IN_IDENT, APPEND],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[IN_PATH] = {\n\t  'ws': [IN_PATH],\n\t  '.': [BEFORE_IDENT],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[BEFORE_IDENT] = {\n\t  'ws': [BEFORE_IDENT],\n\t  'ident': [IN_IDENT, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_IDENT] = {\n\t  'ident': [IN_IDENT, APPEND],\n\t  '0': [IN_IDENT, APPEND],\n\t  'number': [IN_IDENT, APPEND],\n\t  'ws': [IN_PATH, PUSH],\n\t  '.': [BEFORE_IDENT, PUSH],\n\t  '[': [IN_SUB_PATH, PUSH],\n\t  'eof': [AFTER_PATH, PUSH]\n\t};\n\t\n\tpathStateMachine[IN_SUB_PATH] = {\n\t  \"'\": [IN_SINGLE_QUOTE, APPEND],\n\t  '\"': [IN_DOUBLE_QUOTE, APPEND],\n\t  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n\t  ']': [IN_PATH, PUSH_SUB_PATH],\n\t  'eof': ERROR,\n\t  'else': [IN_SUB_PATH, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_SINGLE_QUOTE] = {\n\t  \"'\": [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_SINGLE_QUOTE, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_DOUBLE_QUOTE] = {\n\t  '\"': [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_DOUBLE_QUOTE, APPEND]\n\t};\n\t\n\t/**\n\t * Determine the type of a character in a keypath.\n\t *\n\t * @param {Char} ch\n\t * @return {String} type\n\t */\n\t\n\tfunction getPathCharType(ch) {\n\t  if (ch === undefined) {\n\t    return 'eof';\n\t  }\n\t\n\t  var code = ch.charCodeAt(0);\n\t\n\t  switch (code) {\n\t    case 0x5B: // [\n\t    case 0x5D: // ]\n\t    case 0x2E: // .\n\t    case 0x22: // \"\n\t    case 0x27: // '\n\t    case 0x30:\n\t      // 0\n\t      return ch;\n\t\n\t    case 0x5F: // _\n\t    case 0x24:\n\t      // $\n\t      return 'ident';\n\t\n\t    case 0x20: // Space\n\t    case 0x09: // Tab\n\t    case 0x0A: // Newline\n\t    case 0x0D: // Return\n\t    case 0xA0: // No-break space\n\t    case 0xFEFF: // Byte Order Mark\n\t    case 0x2028: // Line Separator\n\t    case 0x2029:\n\t      // Paragraph Separator\n\t      return 'ws';\n\t  }\n\t\n\t  // a-z, A-Z\n\t  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n\t    return 'ident';\n\t  }\n\t\n\t  // 1-9\n\t  if (code >= 0x31 && code <= 0x39) {\n\t    return 'number';\n\t  }\n\t\n\t  return 'else';\n\t}\n\t\n\t/**\n\t * Format a subPath, return its plain form if it is\n\t * a literal string or number. Otherwise prepend the\n\t * dynamic indicator (*).\n\t *\n\t * @param {String} path\n\t * @return {String}\n\t */\n\t\n\tfunction formatSubPath(path) {\n\t  var trimmed = path.trim();\n\t  // invalid leading 0\n\t  if (path.charAt(0) === '0' && isNaN(path)) {\n\t    return false;\n\t  }\n\t  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n\t}\n\t\n\t/**\n\t * Parse a string path into an array of segments\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parse(path) {\n\t  var keys = [];\n\t  var index = -1;\n\t  var mode = BEFORE_PATH;\n\t  var subPathDepth = 0;\n\t  var c, newChar, key, type, transition, action, typeMap;\n\t\n\t  var actions = [];\n\t\n\t  actions[PUSH] = function () {\n\t    if (key !== undefined) {\n\t      keys.push(key);\n\t      key = undefined;\n\t    }\n\t  };\n\t\n\t  actions[APPEND] = function () {\n\t    if (key === undefined) {\n\t      key = newChar;\n\t    } else {\n\t      key += newChar;\n\t    }\n\t  };\n\t\n\t  actions[INC_SUB_PATH_DEPTH] = function () {\n\t    actions[APPEND]();\n\t    subPathDepth++;\n\t  };\n\t\n\t  actions[PUSH_SUB_PATH] = function () {\n\t    if (subPathDepth > 0) {\n\t      subPathDepth--;\n\t      mode = IN_SUB_PATH;\n\t      actions[APPEND]();\n\t    } else {\n\t      subPathDepth = 0;\n\t      key = formatSubPath(key);\n\t      if (key === false) {\n\t        return false;\n\t      } else {\n\t        actions[PUSH]();\n\t      }\n\t    }\n\t  };\n\t\n\t  function maybeUnescapeQuote() {\n\t    var nextChar = path[index + 1];\n\t    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n\t      index++;\n\t      newChar = '\\\\' + nextChar;\n\t      actions[APPEND]();\n\t      return true;\n\t    }\n\t  }\n\t\n\t  while (mode != null) {\n\t    index++;\n\t    c = path[index];\n\t\n\t    if (c === '\\\\' && maybeUnescapeQuote()) {\n\t      continue;\n\t    }\n\t\n\t    type = getPathCharType(c);\n\t    typeMap = pathStateMachine[mode];\n\t    transition = typeMap[type] || typeMap['else'] || ERROR;\n\t\n\t    if (transition === ERROR) {\n\t      return; // parse error\n\t    }\n\t\n\t    mode = transition[0];\n\t    action = actions[transition[1]];\n\t    if (action) {\n\t      newChar = transition[2];\n\t      newChar = newChar === undefined ? c : newChar;\n\t      if (action() === false) {\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (mode === AFTER_PATH) {\n\t      keys.raw = path;\n\t      return keys;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * External parse that check for a cache hit first\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parsePath(path) {\n\t  var hit = pathCache.get(path);\n\t  if (!hit) {\n\t    hit = parse(path);\n\t    if (hit) {\n\t      pathCache.put(path, hit);\n\t    }\n\t  }\n\t  return hit;\n\t}\n\t\n\t/**\n\t * Get from an object from a path string\n\t *\n\t * @param {Object} obj\n\t * @param {String} path\n\t */\n\t\n\tfunction getPath(obj, path) {\n\t  return parseExpression(path).get(obj);\n\t}\n\t\n\t/**\n\t * Warn against setting non-existent root path on a vm.\n\t */\n\t\n\tvar warnNonExistent;\n\tif (false) {\n\t  warnNonExistent = function (path, vm) {\n\t    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n\t  };\n\t}\n\t\n\t/**\n\t * Set on an object from a path\n\t *\n\t * @param {Object} obj\n\t * @param {String | Array} path\n\t * @param {*} val\n\t */\n\t\n\tfunction setPath(obj, path, val) {\n\t  var original = obj;\n\t  if (typeof path === 'string') {\n\t    path = parse(path);\n\t  }\n\t  if (!path || !isObject(obj)) {\n\t    return false;\n\t  }\n\t  var last, key;\n\t  for (var i = 0, l = path.length; i < l; i++) {\n\t    last = obj;\n\t    key = path[i];\n\t    if (key.charAt(0) === '*') {\n\t      key = parseExpression(key.slice(1)).get.call(original, original);\n\t    }\n\t    if (i < l - 1) {\n\t      obj = obj[key];\n\t      if (!isObject(obj)) {\n\t        obj = {};\n\t        if (false) {\n\t          warnNonExistent(path, last);\n\t        }\n\t        set(last, key, obj);\n\t      }\n\t    } else {\n\t      if (isArray(obj)) {\n\t        obj.$set(key, val);\n\t      } else if (key in obj) {\n\t        obj[key] = val;\n\t      } else {\n\t        if (false) {\n\t          warnNonExistent(path, obj);\n\t        }\n\t        set(obj, key, val);\n\t      }\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tvar path = Object.freeze({\n\t  parsePath: parsePath,\n\t  getPath: getPath,\n\t  setPath: setPath\n\t});\n\t\n\tvar expressionCache = new Cache(1000);\n\t\n\tvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\n\tvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\t// keywords that don't make sense inside expressions\n\tvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\n\tvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\tvar wsRE = /\\s/g;\n\tvar newlineRE = /\\n/g;\n\tvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\n\tvar restoreRE = /\"(\\d+)\"/g;\n\tvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\n\tvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\n\tvar literalValueRE$1 = /^(?:true|false|null|undefined|Infinity|NaN)$/;\n\t\n\tfunction noop() {}\n\t\n\t/**\n\t * Save / Rewrite / Restore\n\t *\n\t * When rewriting paths found in an expression, it is\n\t * possible for the same letter sequences to be found in\n\t * strings and Object literal property keys. Therefore we\n\t * remove and store these parts in a temporary array, and\n\t * restore them after the path rewrite.\n\t */\n\t\n\tvar saved = [];\n\t\n\t/**\n\t * Save replacer\n\t *\n\t * The save regex can match two possible cases:\n\t * 1. An opening object literal\n\t * 2. A string\n\t * If matched as a plain string, we need to escape its\n\t * newlines, since the string needs to be preserved when\n\t * generating the function body.\n\t *\n\t * @param {String} str\n\t * @param {String} isString - str if matched as a string\n\t * @return {String} - placeholder with index\n\t */\n\t\n\tfunction save(str, isString) {\n\t  var i = saved.length;\n\t  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n\t  return '\"' + i + '\"';\n\t}\n\t\n\t/**\n\t * Path rewrite replacer\n\t *\n\t * @param {String} raw\n\t * @return {String}\n\t */\n\t\n\tfunction rewrite(raw) {\n\t  var c = raw.charAt(0);\n\t  var path = raw.slice(1);\n\t  if (allowedKeywordsRE.test(path)) {\n\t    return raw;\n\t  } else {\n\t    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n\t    return c + 'scope.' + path;\n\t  }\n\t}\n\t\n\t/**\n\t * Restore replacer\n\t *\n\t * @param {String} str\n\t * @param {String} i - matched save index\n\t * @return {String}\n\t */\n\t\n\tfunction restore(str, i) {\n\t  return saved[i];\n\t}\n\t\n\t/**\n\t * Rewrite an expression, prefixing all path accessors with\n\t * `scope.` and generate getter/setter functions.\n\t *\n\t * @param {String} exp\n\t * @return {Function}\n\t */\n\t\n\tfunction compileGetter(exp) {\n\t  if (improperKeywordsRE.test(exp)) {\n\t    (\"production\") !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n\t  }\n\t  // reset state\n\t  saved.length = 0;\n\t  // save strings and object literal keys\n\t  var body = exp.replace(saveRE, save).replace(wsRE, '');\n\t  // rewrite all paths\n\t  // pad 1 space here because the regex matches 1 extra char\n\t  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n\t  return makeGetterFn(body);\n\t}\n\t\n\t/**\n\t * Build a getter function. Requires eval.\n\t *\n\t * We isolate the try/catch so it doesn't affect the\n\t * optimization of the parse function when it is not called.\n\t *\n\t * @param {String} body\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction makeGetterFn(body) {\n\t  try {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('scope', 'return ' + body + ';');\n\t    /* eslint-enable no-new-func */\n\t  } catch (e) {\n\t    if (false) {\n\t      /* istanbul ignore if */\n\t      if (e.toString().match(/unsafe-eval|CSP/)) {\n\t        warn('It seems you are using the default build of Vue.js in an environment ' + 'with Content Security Policy that prohibits unsafe-eval. ' + 'Use the CSP-compliant build instead: ' + 'http://vuejs.org/guide/installation.html#CSP-compliant-build');\n\t      } else {\n\t        warn('Invalid expression. ' + 'Generated function body: ' + body);\n\t      }\n\t    }\n\t    return noop;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile a setter function for the expression.\n\t *\n\t * @param {String} exp\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileSetter(exp) {\n\t  var path = parsePath(exp);\n\t  if (path) {\n\t    return function (scope, val) {\n\t      setPath(scope, path, val);\n\t    };\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid setter expression: ' + exp);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse an expression into re-written getter/setters.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} needSet\n\t * @return {Function}\n\t */\n\t\n\tfunction parseExpression(exp, needSet) {\n\t  exp = exp.trim();\n\t  // try cache\n\t  var hit = expressionCache.get(exp);\n\t  if (hit) {\n\t    if (needSet && !hit.set) {\n\t      hit.set = compileSetter(hit.exp);\n\t    }\n\t    return hit;\n\t  }\n\t  var res = { exp: exp };\n\t  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n\t  // optimized super simple getter\n\t  ? makeGetterFn('scope.' + exp)\n\t  // dynamic getter\n\t  : compileGetter(exp);\n\t  if (needSet) {\n\t    res.set = compileSetter(exp);\n\t  }\n\t  expressionCache.put(exp, res);\n\t  return res;\n\t}\n\t\n\t/**\n\t * Check if an expression is a simple path.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isSimplePath(exp) {\n\t  return pathTestRE.test(exp) &&\n\t  // don't treat literal values as paths\n\t  !literalValueRE$1.test(exp) &&\n\t  // Math constants e.g. Math.PI, Math.E etc.\n\t  exp.slice(0, 5) !== 'Math.';\n\t}\n\t\n\tvar expression = Object.freeze({\n\t  parseExpression: parseExpression,\n\t  isSimplePath: isSimplePath\n\t});\n\t\n\t// we have two separate queues: one for directive updates\n\t// and one for user watcher registered via $watch().\n\t// we want to guarantee directive updates to be called\n\t// before user watchers so that when user watchers are\n\t// triggered, the DOM would have already been in updated\n\t// state.\n\t\n\tvar queue = [];\n\tvar userQueue = [];\n\tvar has = {};\n\tvar circular = {};\n\tvar waiting = false;\n\t\n\t/**\n\t * Reset the batcher's state.\n\t */\n\t\n\tfunction resetBatcherState() {\n\t  queue.length = 0;\n\t  userQueue.length = 0;\n\t  has = {};\n\t  circular = {};\n\t  waiting = false;\n\t}\n\t\n\t/**\n\t * Flush both queues and run the watchers.\n\t */\n\t\n\tfunction flushBatcherQueue() {\n\t  var _again = true;\n\t\n\t  _function: while (_again) {\n\t    _again = false;\n\t\n\t    runBatcherQueue(queue);\n\t    runBatcherQueue(userQueue);\n\t    // user watchers triggered more watchers,\n\t    // keep flushing until it depletes\n\t    if (queue.length) {\n\t      _again = true;\n\t      continue _function;\n\t    }\n\t    // dev tool hook\n\t    /* istanbul ignore if */\n\t    if (devtools && config.devtools) {\n\t      devtools.emit('flush');\n\t    }\n\t    resetBatcherState();\n\t  }\n\t}\n\t\n\t/**\n\t * Run the watchers in a single queue.\n\t *\n\t * @param {Array} queue\n\t */\n\t\n\tfunction runBatcherQueue(queue) {\n\t  // do not cache length because more watchers might be pushed\n\t  // as we run existing watchers\n\t  for (var i = 0; i < queue.length; i++) {\n\t    var watcher = queue[i];\n\t    var id = watcher.id;\n\t    has[id] = null;\n\t    watcher.run();\n\t    // in dev build, check and stop circular updates.\n\t    if (false) {\n\t      circular[id] = (circular[id] || 0) + 1;\n\t      if (circular[id] > config._maxUpdateCount) {\n\t        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n\t        break;\n\t      }\n\t    }\n\t  }\n\t  queue.length = 0;\n\t}\n\t\n\t/**\n\t * Push a watcher into the watcher queue.\n\t * Jobs with duplicate IDs will be skipped unless it's\n\t * pushed when the queue is being flushed.\n\t *\n\t * @param {Watcher} watcher\n\t *   properties:\n\t *   - {Number} id\n\t *   - {Function} run\n\t */\n\t\n\tfunction pushWatcher(watcher) {\n\t  var id = watcher.id;\n\t  if (has[id] == null) {\n\t    // push watcher into appropriate queue\n\t    var q = watcher.user ? userQueue : queue;\n\t    has[id] = q.length;\n\t    q.push(watcher);\n\t    // queue the flush\n\t    if (!waiting) {\n\t      waiting = true;\n\t      nextTick(flushBatcherQueue);\n\t    }\n\t  }\n\t}\n\t\n\tvar uid$2 = 0;\n\t\n\t/**\n\t * A watcher parses an expression, collects dependencies,\n\t * and fires callback when the expression value changes.\n\t * This is used for both the $watch() api and directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {String|Function} expOrFn\n\t * @param {Function} cb\n\t * @param {Object} options\n\t *                 - {Array} filters\n\t *                 - {Boolean} twoWay\n\t *                 - {Boolean} deep\n\t *                 - {Boolean} user\n\t *                 - {Boolean} sync\n\t *                 - {Boolean} lazy\n\t *                 - {Function} [preProcess]\n\t *                 - {Function} [postProcess]\n\t * @constructor\n\t */\n\tfunction Watcher(vm, expOrFn, cb, options) {\n\t  // mix in options\n\t  if (options) {\n\t    extend(this, options);\n\t  }\n\t  var isFn = typeof expOrFn === 'function';\n\t  this.vm = vm;\n\t  vm._watchers.push(this);\n\t  this.expression = expOrFn;\n\t  this.cb = cb;\n\t  this.id = ++uid$2; // uid for batching\n\t  this.active = true;\n\t  this.dirty = this.lazy; // for lazy watchers\n\t  this.deps = [];\n\t  this.newDeps = [];\n\t  this.depIds = new _Set();\n\t  this.newDepIds = new _Set();\n\t  this.prevError = null; // for async error stacks\n\t  // parse expression for getter/setter\n\t  if (isFn) {\n\t    this.getter = expOrFn;\n\t    this.setter = undefined;\n\t  } else {\n\t    var res = parseExpression(expOrFn, this.twoWay);\n\t    this.getter = res.get;\n\t    this.setter = res.set;\n\t  }\n\t  this.value = this.lazy ? undefined : this.get();\n\t  // state for avoiding false triggers for deep and Array\n\t  // watchers during vm._digest()\n\t  this.queued = this.shallow = false;\n\t}\n\t\n\t/**\n\t * Evaluate the getter, and re-collect dependencies.\n\t */\n\t\n\tWatcher.prototype.get = function () {\n\t  this.beforeGet();\n\t  var scope = this.scope || this.vm;\n\t  var value;\n\t  try {\n\t    value = this.getter.call(scope, scope);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // \"touch\" every property so they are all tracked as\n\t  // dependencies for deep watching\n\t  if (this.deep) {\n\t    traverse(value);\n\t  }\n\t  if (this.preProcess) {\n\t    value = this.preProcess(value);\n\t  }\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, null, this.filters, false);\n\t  }\n\t  if (this.postProcess) {\n\t    value = this.postProcess(value);\n\t  }\n\t  this.afterGet();\n\t  return value;\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t *\n\t * @param {*} value\n\t */\n\t\n\tWatcher.prototype.set = function (value) {\n\t  var scope = this.scope || this.vm;\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, this.value, this.filters, true);\n\t  }\n\t  try {\n\t    this.setter.call(scope, scope, value);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // two-way sync for v-for alias\n\t  var forContext = scope.$forContext;\n\t  if (forContext && forContext.alias === this.expression) {\n\t    if (forContext.filters) {\n\t      (\"production\") !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n\t      return;\n\t    }\n\t    forContext._withLock(function () {\n\t      if (scope.$key) {\n\t        // original is an object\n\t        forContext.rawValue[scope.$key] = value;\n\t      } else {\n\t        forContext.rawValue.$set(scope.$index, value);\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Prepare for dependency collection.\n\t */\n\t\n\tWatcher.prototype.beforeGet = function () {\n\t  Dep.target = this;\n\t};\n\t\n\t/**\n\t * Add a dependency to this directive.\n\t *\n\t * @param {Dep} dep\n\t */\n\t\n\tWatcher.prototype.addDep = function (dep) {\n\t  var id = dep.id;\n\t  if (!this.newDepIds.has(id)) {\n\t    this.newDepIds.add(id);\n\t    this.newDeps.push(dep);\n\t    if (!this.depIds.has(id)) {\n\t      dep.addSub(this);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Clean up for dependency collection.\n\t */\n\t\n\tWatcher.prototype.afterGet = function () {\n\t  Dep.target = null;\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    var dep = this.deps[i];\n\t    if (!this.newDepIds.has(dep.id)) {\n\t      dep.removeSub(this);\n\t    }\n\t  }\n\t  var tmp = this.depIds;\n\t  this.depIds = this.newDepIds;\n\t  this.newDepIds = tmp;\n\t  this.newDepIds.clear();\n\t  tmp = this.deps;\n\t  this.deps = this.newDeps;\n\t  this.newDeps = tmp;\n\t  this.newDeps.length = 0;\n\t};\n\t\n\t/**\n\t * Subscriber interface.\n\t * Will be called when a dependency changes.\n\t *\n\t * @param {Boolean} shallow\n\t */\n\t\n\tWatcher.prototype.update = function (shallow) {\n\t  if (this.lazy) {\n\t    this.dirty = true;\n\t  } else if (this.sync || !config.async) {\n\t    this.run();\n\t  } else {\n\t    // if queued, only overwrite shallow with non-shallow,\n\t    // but not the other way around.\n\t    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n\t    this.queued = true;\n\t    // record before-push error stack in debug mode\n\t    /* istanbul ignore if */\n\t    if (false) {\n\t      this.prevError = new Error('[vue] async stack trace');\n\t    }\n\t    pushWatcher(this);\n\t  }\n\t};\n\t\n\t/**\n\t * Batcher job interface.\n\t * Will be called by the batcher.\n\t */\n\t\n\tWatcher.prototype.run = function () {\n\t  if (this.active) {\n\t    var value = this.get();\n\t    if (value !== this.value ||\n\t    // Deep watchers and watchers on Object/Arrays should fire even\n\t    // when the value is the same, because the value may\n\t    // have mutated; but only do so if this is a\n\t    // non-shallow update (caused by a vm digest).\n\t    (isObject(value) || this.deep) && !this.shallow) {\n\t      // set new value\n\t      var oldValue = this.value;\n\t      this.value = value;\n\t      // in debug + async mode, when a watcher callbacks\n\t      // throws, we also throw the saved before-push error\n\t      // so the full cross-tick stack trace is available.\n\t      var prevError = this.prevError;\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        this.prevError = null;\n\t        try {\n\t          this.cb.call(this.vm, value, oldValue);\n\t        } catch (e) {\n\t          nextTick(function () {\n\t            throw prevError;\n\t          }, 0);\n\t          throw e;\n\t        }\n\t      } else {\n\t        this.cb.call(this.vm, value, oldValue);\n\t      }\n\t    }\n\t    this.queued = this.shallow = false;\n\t  }\n\t};\n\t\n\t/**\n\t * Evaluate the value of the watcher.\n\t * This only gets called for lazy watchers.\n\t */\n\t\n\tWatcher.prototype.evaluate = function () {\n\t  // avoid overwriting another watcher that is being\n\t  // collected.\n\t  var current = Dep.target;\n\t  this.value = this.get();\n\t  this.dirty = false;\n\t  Dep.target = current;\n\t};\n\t\n\t/**\n\t * Depend on all deps collected by this watcher.\n\t */\n\t\n\tWatcher.prototype.depend = function () {\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    this.deps[i].depend();\n\t  }\n\t};\n\t\n\t/**\n\t * Remove self from all dependencies' subcriber list.\n\t */\n\t\n\tWatcher.prototype.teardown = function () {\n\t  if (this.active) {\n\t    // remove self from vm's watcher list\n\t    // this is a somewhat expensive operation so we skip it\n\t    // if the vm is being destroyed or is performing a v-for\n\t    // re-render (the watcher list is then filtered by v-for).\n\t    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n\t      this.vm._watchers.$remove(this);\n\t    }\n\t    var i = this.deps.length;\n\t    while (i--) {\n\t      this.deps[i].removeSub(this);\n\t    }\n\t    this.active = false;\n\t    this.vm = this.cb = this.value = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Recrusively traverse an object to evoke all converted\n\t * getters, so that every nested property inside the object\n\t * is collected as a \"deep\" dependency.\n\t *\n\t * @param {*} val\n\t */\n\t\n\tvar seenObjects = new _Set();\n\tfunction traverse(val, seen) {\n\t  var i = undefined,\n\t      keys = undefined;\n\t  if (!seen) {\n\t    seen = seenObjects;\n\t    seen.clear();\n\t  }\n\t  var isA = isArray(val);\n\t  var isO = isObject(val);\n\t  if ((isA || isO) && Object.isExtensible(val)) {\n\t    if (val.__ob__) {\n\t      var depId = val.__ob__.dep.id;\n\t      if (seen.has(depId)) {\n\t        return;\n\t      } else {\n\t        seen.add(depId);\n\t      }\n\t    }\n\t    if (isA) {\n\t      i = val.length;\n\t      while (i--) traverse(val[i], seen);\n\t    } else if (isO) {\n\t      keys = Object.keys(val);\n\t      i = keys.length;\n\t      while (i--) traverse(val[keys[i]], seen);\n\t    }\n\t  }\n\t}\n\t\n\tvar text$1 = {\n\t\n\t  bind: function bind() {\n\t    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el[this.attr] = _toString(value);\n\t  }\n\t};\n\t\n\tvar templateCache = new Cache(1000);\n\tvar idSelectorCache = new Cache(1000);\n\t\n\tvar map = {\n\t  efault: [0, '', ''],\n\t  legend: [1, '<fieldset>', '</fieldset>'],\n\t  tr: [2, '<table><tbody>', '</tbody></table>'],\n\t  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n\t};\n\t\n\tmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\t\n\tmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\t\n\tmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\t\n\tmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\t\n\t/**\n\t * Check if a node is a supported template node with a\n\t * DocumentFragment content.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isRealTemplate(node) {\n\t  return isTemplate(node) && isFragment(node.content);\n\t}\n\t\n\tvar tagRE$1 = /<([\\w:-]+)/;\n\tvar entityRE = /&#?\\w+?;/;\n\tvar commentRE = /<!--/;\n\t\n\t/**\n\t * Convert a string template to a DocumentFragment.\n\t * Determines correct wrapping by tag types. Wrapping\n\t * strategy found in jQuery & component/domify.\n\t *\n\t * @param {String} templateString\n\t * @param {Boolean} raw\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction stringToFragment(templateString, raw) {\n\t  // try a cache hit first\n\t  var cacheKey = raw ? templateString : templateString.trim();\n\t  var hit = templateCache.get(cacheKey);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var tagMatch = templateString.match(tagRE$1);\n\t  var entityMatch = entityRE.test(templateString);\n\t  var commentMatch = commentRE.test(templateString);\n\t\n\t  if (!tagMatch && !entityMatch && !commentMatch) {\n\t    // text only, return a single text node.\n\t    frag.appendChild(document.createTextNode(templateString));\n\t  } else {\n\t    var tag = tagMatch && tagMatch[1];\n\t    var wrap = map[tag] || map.efault;\n\t    var depth = wrap[0];\n\t    var prefix = wrap[1];\n\t    var suffix = wrap[2];\n\t    var node = document.createElement('div');\n\t\n\t    node.innerHTML = prefix + templateString + suffix;\n\t    while (depth--) {\n\t      node = node.lastChild;\n\t    }\n\t\n\t    var child;\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = node.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      frag.appendChild(child);\n\t    }\n\t  }\n\t  if (!raw) {\n\t    trimNode(frag);\n\t  }\n\t  templateCache.put(cacheKey, frag);\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Convert a template node to a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction nodeToFragment(node) {\n\t  // if its a template tag and the browser supports it,\n\t  // its content is already a document fragment. However, iOS Safari has\n\t  // bug when using directly cloned template content with touch\n\t  // events and can cause crashes when the nodes are removed from DOM, so we\n\t  // have to treat template elements as string templates. (#2805)\n\t  /* istanbul ignore if */\n\t  if (isRealTemplate(node)) {\n\t    return stringToFragment(node.innerHTML);\n\t  }\n\t  // script template\n\t  if (node.tagName === 'SCRIPT') {\n\t    return stringToFragment(node.textContent);\n\t  }\n\t  // normal node, clone it to avoid mutating the original\n\t  var clonedNode = cloneNode(node);\n\t  var frag = document.createDocumentFragment();\n\t  var child;\n\t  /* eslint-disable no-cond-assign */\n\t  while (child = clonedNode.firstChild) {\n\t    /* eslint-enable no-cond-assign */\n\t    frag.appendChild(child);\n\t  }\n\t  trimNode(frag);\n\t  return frag;\n\t}\n\t\n\t// Test for the presence of the Safari template cloning bug\n\t// https://bugs.webkit.org/showug.cgi?id=137755\n\tvar hasBrokenTemplate = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var a = document.createElement('div');\n\t    a.innerHTML = '<template>1</template>';\n\t    return !a.cloneNode(true).firstChild.innerHTML;\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t// Test for IE10/11 textarea placeholder clone bug\n\tvar hasTextareaCloneBug = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var t = document.createElement('textarea');\n\t    t.placeholder = 't';\n\t    return t.cloneNode(true).value === 't';\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t/**\n\t * 1. Deal with Safari cloning nested <template> bug by\n\t *    manually cloning all template instances.\n\t * 2. Deal with IE10/11 textarea placeholder bug by setting\n\t *    the correct value after cloning.\n\t *\n\t * @param {Element|DocumentFragment} node\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction cloneNode(node) {\n\t  /* istanbul ignore if */\n\t  if (!node.querySelectorAll) {\n\t    return node.cloneNode();\n\t  }\n\t  var res = node.cloneNode(true);\n\t  var i, original, cloned;\n\t  /* istanbul ignore if */\n\t  if (hasBrokenTemplate) {\n\t    var tempClone = res;\n\t    if (isRealTemplate(node)) {\n\t      node = node.content;\n\t      tempClone = res.content;\n\t    }\n\t    original = node.querySelectorAll('template');\n\t    if (original.length) {\n\t      cloned = tempClone.querySelectorAll('template');\n\t      i = cloned.length;\n\t      while (i--) {\n\t        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n\t      }\n\t    }\n\t  }\n\t  /* istanbul ignore if */\n\t  if (hasTextareaCloneBug) {\n\t    if (node.tagName === 'TEXTAREA') {\n\t      res.value = node.value;\n\t    } else {\n\t      original = node.querySelectorAll('textarea');\n\t      if (original.length) {\n\t        cloned = res.querySelectorAll('textarea');\n\t        i = cloned.length;\n\t        while (i--) {\n\t          cloned[i].value = original[i].value;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Process the template option and normalizes it into a\n\t * a DocumentFragment that can be used as a partial or a\n\t * instance template.\n\t *\n\t * @param {*} template\n\t *        Possible values include:\n\t *        - DocumentFragment object\n\t *        - Node object of type Template\n\t *        - id selector: '#some-template-id'\n\t *        - template string: '<div><span>{{msg}}</span></div>'\n\t * @param {Boolean} shouldClone\n\t * @param {Boolean} raw\n\t *        inline HTML interpolation. Do not check for id\n\t *        selector and keep whitespace in the string.\n\t * @return {DocumentFragment|undefined}\n\t */\n\t\n\tfunction parseTemplate(template, shouldClone, raw) {\n\t  var node, frag;\n\t\n\t  // if the template is already a document fragment,\n\t  // do nothing\n\t  if (isFragment(template)) {\n\t    trimNode(template);\n\t    return shouldClone ? cloneNode(template) : template;\n\t  }\n\t\n\t  if (typeof template === 'string') {\n\t    // id selector\n\t    if (!raw && template.charAt(0) === '#') {\n\t      // id selector can be cached too\n\t      frag = idSelectorCache.get(template);\n\t      if (!frag) {\n\t        node = document.getElementById(template.slice(1));\n\t        if (node) {\n\t          frag = nodeToFragment(node);\n\t          // save selector to cache\n\t          idSelectorCache.put(template, frag);\n\t        }\n\t      }\n\t    } else {\n\t      // normal string template\n\t      frag = stringToFragment(template, raw);\n\t    }\n\t  } else if (template.nodeType) {\n\t    // a direct node\n\t    frag = nodeToFragment(template);\n\t  }\n\t\n\t  return frag && shouldClone ? cloneNode(frag) : frag;\n\t}\n\t\n\tvar template = Object.freeze({\n\t  cloneNode: cloneNode,\n\t  parseTemplate: parseTemplate\n\t});\n\t\n\tvar html = {\n\t\n\t  bind: function bind() {\n\t    // a comment node means this is a binding for\n\t    // {{{ inline unescaped html }}}\n\t    if (this.el.nodeType === 8) {\n\t      // hold nodes\n\t      this.nodes = [];\n\t      // replace the placeholder with proper anchor\n\t      this.anchor = createAnchor('v-html');\n\t      replace(this.el, this.anchor);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    value = _toString(value);\n\t    if (this.nodes) {\n\t      this.swap(value);\n\t    } else {\n\t      this.el.innerHTML = value;\n\t    }\n\t  },\n\t\n\t  swap: function swap(value) {\n\t    // remove old nodes\n\t    var i = this.nodes.length;\n\t    while (i--) {\n\t      remove(this.nodes[i]);\n\t    }\n\t    // convert new value to a fragment\n\t    // do not attempt to retrieve from id selector\n\t    var frag = parseTemplate(value, true, true);\n\t    // save a reference to these nodes so we can remove later\n\t    this.nodes = toArray(frag.childNodes);\n\t    before(frag, this.anchor);\n\t  }\n\t};\n\t\n\t/**\n\t * Abstraction for a partially-compiled fragment.\n\t * Can optionally compile content with a child scope.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Vue} [host]\n\t * @param {Object} [scope]\n\t * @param {Fragment} [parentFrag]\n\t */\n\tfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n\t  this.children = [];\n\t  this.childFrags = [];\n\t  this.vm = vm;\n\t  this.scope = scope;\n\t  this.inserted = false;\n\t  this.parentFrag = parentFrag;\n\t  if (parentFrag) {\n\t    parentFrag.childFrags.push(this);\n\t  }\n\t  this.unlink = linker(vm, frag, host, scope, this);\n\t  var single = this.single = frag.childNodes.length === 1 &&\n\t  // do not go single mode if the only node is an anchor\n\t  !frag.childNodes[0].__v_anchor;\n\t  if (single) {\n\t    this.node = frag.childNodes[0];\n\t    this.before = singleBefore;\n\t    this.remove = singleRemove;\n\t  } else {\n\t    this.node = createAnchor('fragment-start');\n\t    this.end = createAnchor('fragment-end');\n\t    this.frag = frag;\n\t    prepend(this.node, frag);\n\t    frag.appendChild(this.end);\n\t    this.before = multiBefore;\n\t    this.remove = multiRemove;\n\t  }\n\t  this.node.__v_frag = this;\n\t}\n\t\n\t/**\n\t * Call attach/detach for all components contained within\n\t * this fragment. Also do so recursively for all child\n\t * fragments.\n\t *\n\t * @param {Function} hook\n\t */\n\t\n\tFragment.prototype.callHook = function (hook) {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    this.childFrags[i].callHook(hook);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    hook(this.children[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Insert fragment before target, single node version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction singleBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  method(this.node, target, this.vm);\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, single node version\n\t */\n\t\n\tfunction singleRemove() {\n\t  this.inserted = false;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  var self = this;\n\t  this.beforeRemove();\n\t  removeWithTransition(this.node, this.vm, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Insert fragment before target, multi-nodes version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction multiBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var vm = this.vm;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  mapNodeRange(this.node, this.end, function (node) {\n\t    method(node, target, vm);\n\t  });\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, multi-nodes version\n\t */\n\t\n\tfunction multiRemove() {\n\t  this.inserted = false;\n\t  var self = this;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  this.beforeRemove();\n\t  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Prepare the fragment for removal.\n\t */\n\t\n\tFragment.prototype.beforeRemove = function () {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    // call the same method recursively on child\n\t    // fragments, depth-first\n\t    this.childFrags[i].beforeRemove(false);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    // Call destroy for all contained instances,\n\t    // with remove:false and defer:true.\n\t    // Defer is necessary because we need to\n\t    // keep the children to call detach hooks\n\t    // on them.\n\t    this.children[i].$destroy(false, true);\n\t  }\n\t  var dirs = this.unlink.dirs;\n\t  for (i = 0, l = dirs.length; i < l; i++) {\n\t    // disable the watchers on all the directives\n\t    // so that the rendered content stays the same\n\t    // during removal.\n\t    dirs[i]._watcher && dirs[i]._watcher.teardown();\n\t  }\n\t};\n\t\n\t/**\n\t * Destroy the fragment.\n\t */\n\t\n\tFragment.prototype.destroy = function () {\n\t  if (this.parentFrag) {\n\t    this.parentFrag.childFrags.$remove(this);\n\t  }\n\t  this.node.__v_frag = null;\n\t  this.unlink();\n\t};\n\t\n\t/**\n\t * Call attach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction attach(child) {\n\t  if (!child._isAttached && inDoc(child.$el)) {\n\t    child._callHook('attached');\n\t  }\n\t}\n\t\n\t/**\n\t * Call detach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction detach(child) {\n\t  if (child._isAttached && !inDoc(child.$el)) {\n\t    child._callHook('detached');\n\t  }\n\t}\n\t\n\tvar linkerCache = new Cache(5000);\n\t\n\t/**\n\t * A factory that can be used to create instances of a\n\t * fragment. Caches the compiled linker if possible.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element|String} el\n\t */\n\tfunction FragmentFactory(vm, el) {\n\t  this.vm = vm;\n\t  var template;\n\t  var isString = typeof el === 'string';\n\t  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n\t    template = parseTemplate(el, true);\n\t  } else {\n\t    template = document.createDocumentFragment();\n\t    template.appendChild(el);\n\t  }\n\t  this.template = template;\n\t  // linker can be cached, but only for components\n\t  var linker;\n\t  var cid = vm.constructor.cid;\n\t  if (cid > 0) {\n\t    var cacheId = cid + (isString ? el : getOuterHTML(el));\n\t    linker = linkerCache.get(cacheId);\n\t    if (!linker) {\n\t      linker = compile(template, vm.$options, true);\n\t      linkerCache.put(cacheId, linker);\n\t    }\n\t  } else {\n\t    linker = compile(template, vm.$options, true);\n\t  }\n\t  this.linker = linker;\n\t}\n\t\n\t/**\n\t * Create a fragment instance with given host and scope.\n\t *\n\t * @param {Vue} host\n\t * @param {Object} scope\n\t * @param {Fragment} parentFrag\n\t */\n\t\n\tFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n\t  var frag = cloneNode(this.template);\n\t  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n\t};\n\t\n\tvar ON = 700;\n\tvar MODEL = 800;\n\tvar BIND = 850;\n\tvar TRANSITION = 1100;\n\tvar EL = 1500;\n\tvar COMPONENT = 1500;\n\tvar PARTIAL = 1750;\n\tvar IF = 2100;\n\tvar FOR = 2200;\n\tvar SLOT = 2300;\n\t\n\tvar uid$3 = 0;\n\t\n\tvar vFor = {\n\t\n\t  priority: FOR,\n\t  terminal: true,\n\t\n\t  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\t\n\t  bind: function bind() {\n\t    // support \"item in/of items\" syntax\n\t    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n\t    if (inMatch) {\n\t      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n\t      if (itMatch) {\n\t        this.iterator = itMatch[1].trim();\n\t        this.alias = itMatch[2].trim();\n\t      } else {\n\t        this.alias = inMatch[1].trim();\n\t      }\n\t      this.expression = inMatch[2];\n\t    }\n\t\n\t    if (!this.alias) {\n\t      (\"production\") !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n\t      return;\n\t    }\n\t\n\t    // uid as a cache identifier\n\t    this.id = '__v-for__' + ++uid$3;\n\t\n\t    // check if this is an option list,\n\t    // so that we know if we need to update the <select>'s\n\t    // v-model when the option list has changed.\n\t    // because v-model has a lower priority than v-for,\n\t    // the v-model is not bound here yet, so we have to\n\t    // retrive it in the actual updateModel() function.\n\t    var tag = this.el.tagName;\n\t    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\t\n\t    // setup anchor nodes\n\t    this.start = createAnchor('v-for-start');\n\t    this.end = createAnchor('v-for-end');\n\t    replace(this.el, this.end);\n\t    before(this.start, this.end);\n\t\n\t    // cache\n\t    this.cache = Object.create(null);\n\t\n\t    // fragment factory\n\t    this.factory = new FragmentFactory(this.vm, this.el);\n\t  },\n\t\n\t  update: function update(data) {\n\t    this.diff(data);\n\t    this.updateRef();\n\t    this.updateModel();\n\t  },\n\t\n\t  /**\n\t   * Diff, based on new data and old data, determine the\n\t   * minimum amount of DOM manipulations needed to make the\n\t   * DOM reflect the new data Array.\n\t   *\n\t   * The algorithm diffs the new data Array by storing a\n\t   * hidden reference to an owner vm instance on previously\n\t   * seen data. This allows us to achieve O(n) which is\n\t   * better than a levenshtein distance based algorithm,\n\t   * which is O(m * n).\n\t   *\n\t   * @param {Array} data\n\t   */\n\t\n\t  diff: function diff(data) {\n\t    // check if the Array was converted from an Object\n\t    var item = data[0];\n\t    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\t\n\t    var trackByKey = this.params.trackBy;\n\t    var oldFrags = this.frags;\n\t    var frags = this.frags = new Array(data.length);\n\t    var alias = this.alias;\n\t    var iterator = this.iterator;\n\t    var start = this.start;\n\t    var end = this.end;\n\t    var inDocument = inDoc(start);\n\t    var init = !oldFrags;\n\t    var i, l, frag, key, value, primitive;\n\t\n\t    // First pass, go through the new Array and fill up\n\t    // the new frags array. If a piece of data has a cached\n\t    // instance for it, we reuse it. Otherwise build a new\n\t    // instance.\n\t    for (i = 0, l = data.length; i < l; i++) {\n\t      item = data[i];\n\t      key = convertedFromObject ? item.$key : null;\n\t      value = convertedFromObject ? item.$value : item;\n\t      primitive = !isObject(value);\n\t      frag = !init && this.getCachedFrag(value, i, key);\n\t      if (frag) {\n\t        // reusable fragment\n\t        frag.reused = true;\n\t        // update $index\n\t        frag.scope.$index = i;\n\t        // update $key\n\t        if (key) {\n\t          frag.scope.$key = key;\n\t        }\n\t        // update iterator\n\t        if (iterator) {\n\t          frag.scope[iterator] = key !== null ? key : i;\n\t        }\n\t        // update data for track-by, object repeat &\n\t        // primitive values.\n\t        if (trackByKey || convertedFromObject || primitive) {\n\t          withoutConversion(function () {\n\t            frag.scope[alias] = value;\n\t          });\n\t        }\n\t      } else {\n\t        // new isntance\n\t        frag = this.create(value, alias, i, key);\n\t        frag.fresh = !init;\n\t      }\n\t      frags[i] = frag;\n\t      if (init) {\n\t        frag.before(end);\n\t      }\n\t    }\n\t\n\t    // we're done for the initial render.\n\t    if (init) {\n\t      return;\n\t    }\n\t\n\t    // Second pass, go through the old fragments and\n\t    // destroy those who are not reused (and remove them\n\t    // from cache)\n\t    var removalIndex = 0;\n\t    var totalRemoved = oldFrags.length - frags.length;\n\t    // when removing a large number of fragments, watcher removal\n\t    // turns out to be a perf bottleneck, so we batch the watcher\n\t    // removals into a single filter call!\n\t    this.vm._vForRemoving = true;\n\t    for (i = 0, l = oldFrags.length; i < l; i++) {\n\t      frag = oldFrags[i];\n\t      if (!frag.reused) {\n\t        this.deleteCachedFrag(frag);\n\t        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n\t      }\n\t    }\n\t    this.vm._vForRemoving = false;\n\t    if (removalIndex) {\n\t      this.vm._watchers = this.vm._watchers.filter(function (w) {\n\t        return w.active;\n\t      });\n\t    }\n\t\n\t    // Final pass, move/insert new fragments into the\n\t    // right place.\n\t    var targetPrev, prevEl, currentPrev;\n\t    var insertionIndex = 0;\n\t    for (i = 0, l = frags.length; i < l; i++) {\n\t      frag = frags[i];\n\t      // this is the frag that we should be after\n\t      targetPrev = frags[i - 1];\n\t      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n\t      if (frag.reused && !frag.staggerCb) {\n\t        currentPrev = findPrevFrag(frag, start, this.id);\n\t        if (currentPrev !== targetPrev && (!currentPrev ||\n\t        // optimization for moving a single item.\n\t        // thanks to suggestions by @livoras in #1807\n\t        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n\t          this.move(frag, prevEl);\n\t        }\n\t      } else {\n\t        // new instance, or still in stagger.\n\t        // insert with updated stagger index.\n\t        this.insert(frag, insertionIndex++, prevEl, inDocument);\n\t      }\n\t      frag.reused = frag.fresh = false;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Create a new fragment instance.\n\t   *\n\t   * @param {*} value\n\t   * @param {String} alias\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   * @return {Fragment}\n\t   */\n\t\n\t  create: function create(value, alias, index, key) {\n\t    var host = this._host;\n\t    // create iteration scope\n\t    var parentScope = this._scope || this.vm;\n\t    var scope = Object.create(parentScope);\n\t    // ref holder for the scope\n\t    scope.$refs = Object.create(parentScope.$refs);\n\t    scope.$els = Object.create(parentScope.$els);\n\t    // make sure point $parent to parent scope\n\t    scope.$parent = parentScope;\n\t    // for two-way binding on alias\n\t    scope.$forContext = this;\n\t    // define scope properties\n\t    // important: define the scope alias without forced conversion\n\t    // so that frozen data structures remain non-reactive.\n\t    withoutConversion(function () {\n\t      defineReactive(scope, alias, value);\n\t    });\n\t    defineReactive(scope, '$index', index);\n\t    if (key) {\n\t      defineReactive(scope, '$key', key);\n\t    } else if (scope.$key) {\n\t      // avoid accidental fallback\n\t      def(scope, '$key', null);\n\t    }\n\t    if (this.iterator) {\n\t      defineReactive(scope, this.iterator, key !== null ? key : index);\n\t    }\n\t    var frag = this.factory.create(host, scope, this._frag);\n\t    frag.forId = this.id;\n\t    this.cacheFrag(value, frag, index, key);\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Update the v-ref on owner vm.\n\t   */\n\t\n\t  updateRef: function updateRef() {\n\t    var ref = this.descriptor.ref;\n\t    if (!ref) return;\n\t    var hash = (this._scope || this.vm).$refs;\n\t    var refs;\n\t    if (!this.fromObject) {\n\t      refs = this.frags.map(findVmFromFrag);\n\t    } else {\n\t      refs = {};\n\t      this.frags.forEach(function (frag) {\n\t        refs[frag.scope.$key] = findVmFromFrag(frag);\n\t      });\n\t    }\n\t    hash[ref] = refs;\n\t  },\n\t\n\t  /**\n\t   * For option lists, update the containing v-model on\n\t   * parent <select>.\n\t   */\n\t\n\t  updateModel: function updateModel() {\n\t    if (this.isOption) {\n\t      var parent = this.start.parentNode;\n\t      var model = parent && parent.__v_model;\n\t      if (model) {\n\t        model.forceUpdate();\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Insert a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Node} prevEl\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  insert: function insert(frag, index, prevEl, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n\t    if (inDocument && staggerAmount) {\n\t      // create an anchor and insert it synchronously,\n\t      // so that we can resolve the correct order without\n\t      // worrying about some elements not inserted yet\n\t      var anchor = frag.staggerAnchor;\n\t      if (!anchor) {\n\t        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n\t        anchor.__v_frag = frag;\n\t      }\n\t      after(anchor, prevEl);\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.before(anchor);\n\t        remove(anchor);\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      var target = prevEl.nextSibling;\n\t      /* istanbul ignore if */\n\t      if (!target) {\n\t        // reset end anchor position in case the position was messed up\n\t        // by an external drag-n-drop library.\n\t        after(this.end, prevEl);\n\t        target = this.end;\n\t      }\n\t      frag.before(target);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Remove a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  remove: function remove(frag, index, total, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t      // it's not possible for the same frag to be removed\n\t      // twice, so if we have a pending stagger callback,\n\t      // it means this frag is queued for enter but removed\n\t      // before its transition started. Since it is already\n\t      // destroyed, we can just leave it in detached state.\n\t      return;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n\t    if (inDocument && staggerAmount) {\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.remove();\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.remove();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Move a fragment to a new position.\n\t   * Force no transition.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Node} prevEl\n\t   */\n\t\n\t  move: function move(frag, prevEl) {\n\t    // fix a common issue with Sortable:\n\t    // if prevEl doesn't have nextSibling, this means it's\n\t    // been dragged after the end anchor. Just re-position\n\t    // the end anchor to the end of the container.\n\t    /* istanbul ignore if */\n\t    if (!prevEl.nextSibling) {\n\t      this.end.parentNode.appendChild(this.end);\n\t    }\n\t    frag.before(prevEl.nextSibling, false);\n\t  },\n\t\n\t  /**\n\t   * Cache a fragment using track-by or the object key.\n\t   *\n\t   * @param {*} value\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   */\n\t\n\t  cacheFrag: function cacheFrag(value, frag, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var cache = this.cache;\n\t    var primitive = !isObject(value);\n\t    var id;\n\t    if (key || trackByKey || primitive) {\n\t      id = getTrackByKey(index, key, value, trackByKey);\n\t      if (!cache[id]) {\n\t        cache[id] = frag;\n\t      } else if (trackByKey !== '$index') {\n\t        (\"production\") !== 'production' && this.warnDuplicate(value);\n\t      }\n\t    } else {\n\t      id = this.id;\n\t      if (hasOwn(value, id)) {\n\t        if (value[id] === null) {\n\t          value[id] = frag;\n\t        } else {\n\t          (\"production\") !== 'production' && this.warnDuplicate(value);\n\t        }\n\t      } else if (Object.isExtensible(value)) {\n\t        def(value, id, frag);\n\t      } else if (false) {\n\t        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n\t      }\n\t    }\n\t    frag.raw = value;\n\t  },\n\t\n\t  /**\n\t   * Get a cached fragment from the value/index/key\n\t   *\n\t   * @param {*} value\n\t   * @param {Number} index\n\t   * @param {String} key\n\t   * @return {Fragment}\n\t   */\n\t\n\t  getCachedFrag: function getCachedFrag(value, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var primitive = !isObject(value);\n\t    var frag;\n\t    if (key || trackByKey || primitive) {\n\t      var id = getTrackByKey(index, key, value, trackByKey);\n\t      frag = this.cache[id];\n\t    } else {\n\t      frag = value[this.id];\n\t    }\n\t    if (frag && (frag.reused || frag.fresh)) {\n\t      (\"production\") !== 'production' && this.warnDuplicate(value);\n\t    }\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Delete a fragment from cache.\n\t   *\n\t   * @param {Fragment} frag\n\t   */\n\t\n\t  deleteCachedFrag: function deleteCachedFrag(frag) {\n\t    var value = frag.raw;\n\t    var trackByKey = this.params.trackBy;\n\t    var scope = frag.scope;\n\t    var index = scope.$index;\n\t    // fix #948: avoid accidentally fall through to\n\t    // a parent repeater which happens to have $key.\n\t    var key = hasOwn(scope, '$key') && scope.$key;\n\t    var primitive = !isObject(value);\n\t    if (trackByKey || key || primitive) {\n\t      var id = getTrackByKey(index, key, value, trackByKey);\n\t      this.cache[id] = null;\n\t    } else {\n\t      value[this.id] = null;\n\t      frag.raw = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Get the stagger amount for an insertion/removal.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {String} type\n\t   */\n\t\n\t  getStagger: function getStagger(frag, index, total, type) {\n\t    type = type + 'Stagger';\n\t    var trans = frag.node.__v_trans;\n\t    var hooks = trans && trans.hooks;\n\t    var hook = hooks && (hooks[type] || hooks.stagger);\n\t    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n\t  },\n\t\n\t  /**\n\t   * Pre-process the value before piping it through the\n\t   * filters. This is passed to and called by the watcher.\n\t   */\n\t\n\t  _preProcess: function _preProcess(value) {\n\t    // regardless of type, store the un-filtered raw value.\n\t    this.rawValue = value;\n\t    return value;\n\t  },\n\t\n\t  /**\n\t   * Post-process the value after it has been piped through\n\t   * the filters. This is passed to and called by the watcher.\n\t   *\n\t   * It is necessary for this to be called during the\n\t   * watcher's dependency collection phase because we want\n\t   * the v-for to update when the source Object is mutated.\n\t   */\n\t\n\t  _postProcess: function _postProcess(value) {\n\t    if (isArray(value)) {\n\t      return value;\n\t    } else if (isPlainObject(value)) {\n\t      // convert plain object to array.\n\t      var keys = Object.keys(value);\n\t      var i = keys.length;\n\t      var res = new Array(i);\n\t      var key;\n\t      while (i--) {\n\t        key = keys[i];\n\t        res[i] = {\n\t          $key: key,\n\t          $value: value[key]\n\t        };\n\t      }\n\t      return res;\n\t    } else {\n\t      if (typeof value === 'number' && !isNaN(value)) {\n\t        value = range(value);\n\t      }\n\t      return value || [];\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.descriptor.ref) {\n\t      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n\t    }\n\t    if (this.frags) {\n\t      var i = this.frags.length;\n\t      var frag;\n\t      while (i--) {\n\t        frag = this.frags[i];\n\t        this.deleteCachedFrag(frag);\n\t        frag.destroy();\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Helper to find the previous element that is a fragment\n\t * anchor. This is necessary because a destroyed frag's\n\t * element could still be lingering in the DOM before its\n\t * leaving transition finishes, but its inserted flag\n\t * should have been set to false so we can skip them.\n\t *\n\t * If this is a block repeat, we want to make sure we only\n\t * return frag that is bound to this v-for. (see #929)\n\t *\n\t * @param {Fragment} frag\n\t * @param {Comment|Text} anchor\n\t * @param {String} id\n\t * @return {Fragment}\n\t */\n\t\n\tfunction findPrevFrag(frag, anchor, id) {\n\t  var el = frag.node.previousSibling;\n\t  /* istanbul ignore if */\n\t  if (!el) return;\n\t  frag = el.__v_frag;\n\t  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n\t    el = el.previousSibling;\n\t    /* istanbul ignore if */\n\t    if (!el) return;\n\t    frag = el.__v_frag;\n\t  }\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Find a vm from a fragment.\n\t *\n\t * @param {Fragment} frag\n\t * @return {Vue|undefined}\n\t */\n\t\n\tfunction findVmFromFrag(frag) {\n\t  var node = frag.node;\n\t  // handle multi-node frag\n\t  if (frag.end) {\n\t    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n\t      node = node.nextSibling;\n\t    }\n\t  }\n\t  return node.__vue__;\n\t}\n\t\n\t/**\n\t * Create a range array from given number.\n\t *\n\t * @param {Number} n\n\t * @return {Array}\n\t */\n\t\n\tfunction range(n) {\n\t  var i = -1;\n\t  var ret = new Array(Math.floor(n));\n\t  while (++i < n) {\n\t    ret[i] = i;\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Get the track by key for an item.\n\t *\n\t * @param {Number} index\n\t * @param {String} key\n\t * @param {*} value\n\t * @param {String} [trackByKey]\n\t */\n\t\n\tfunction getTrackByKey(index, key, value, trackByKey) {\n\t  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n\t}\n\t\n\tif (false) {\n\t  vFor.warnDuplicate = function (value) {\n\t    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n\t  };\n\t}\n\t\n\tvar vIf = {\n\t\n\t  priority: IF,\n\t  terminal: true,\n\t\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    if (!el.__vue__) {\n\t      // check else block\n\t      var next = el.nextElementSibling;\n\t      if (next && getAttr(next, 'v-else') !== null) {\n\t        remove(next);\n\t        this.elseEl = next;\n\t      }\n\t      // check main block\n\t      this.anchor = createAnchor('v-if');\n\t      replace(el, this.anchor);\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n\t      this.invalid = true;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) return;\n\t    if (value) {\n\t      if (!this.frag) {\n\t        this.insert();\n\t      }\n\t    } else {\n\t      this.remove();\n\t    }\n\t  },\n\t\n\t  insert: function insert() {\n\t    if (this.elseFrag) {\n\t      this.elseFrag.remove();\n\t      this.elseFrag = null;\n\t    }\n\t    // lazy init factory\n\t    if (!this.factory) {\n\t      this.factory = new FragmentFactory(this.vm, this.el);\n\t    }\n\t    this.frag = this.factory.create(this._host, this._scope, this._frag);\n\t    this.frag.before(this.anchor);\n\t  },\n\t\n\t  remove: function remove() {\n\t    if (this.frag) {\n\t      this.frag.remove();\n\t      this.frag = null;\n\t    }\n\t    if (this.elseEl && !this.elseFrag) {\n\t      if (!this.elseFactory) {\n\t        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n\t      }\n\t      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n\t      this.elseFrag.before(this.anchor);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t    if (this.elseFrag) {\n\t      this.elseFrag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar show = {\n\t\n\t  bind: function bind() {\n\t    // check else block\n\t    var next = this.el.nextElementSibling;\n\t    if (next && getAttr(next, 'v-else') !== null) {\n\t      this.elseEl = next;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.apply(this.el, value);\n\t    if (this.elseEl) {\n\t      this.apply(this.elseEl, !value);\n\t    }\n\t  },\n\t\n\t  apply: function apply(el, value) {\n\t    if (inDoc(el)) {\n\t      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n\t    } else {\n\t      toggle();\n\t    }\n\t    function toggle() {\n\t      el.style.display = value ? '' : 'none';\n\t    }\n\t  }\n\t};\n\t\n\tvar text$2 = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t    var isRange = el.type === 'range';\n\t    var lazy = this.params.lazy;\n\t    var number = this.params.number;\n\t    var debounce = this.params.debounce;\n\t\n\t    // handle composition events.\n\t    //   http://blog.evanyou.me/2014/01/03/composition-event/\n\t    // skip this for Android because it handles composition\n\t    // events quite differently. Android doesn't trigger\n\t    // composition events for language input methods e.g.\n\t    // Chinese, but instead triggers them for spelling\n\t    // suggestions... (see Discussion/#162)\n\t    var composing = false;\n\t    if (!isAndroid && !isRange) {\n\t      this.on('compositionstart', function () {\n\t        composing = true;\n\t      });\n\t      this.on('compositionend', function () {\n\t        composing = false;\n\t        // in IE11 the \"compositionend\" event fires AFTER\n\t        // the \"input\" event, so the input handler is blocked\n\t        // at the end... have to call it here.\n\t        //\n\t        // #1327: in lazy mode this is unecessary.\n\t        if (!lazy) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // prevent messing with the input when user is typing,\n\t    // and force update on blur.\n\t    this.focused = false;\n\t    if (!isRange && !lazy) {\n\t      this.on('focus', function () {\n\t        self.focused = true;\n\t      });\n\t      this.on('blur', function () {\n\t        self.focused = false;\n\t        // do not sync value after fragment removal (#2017)\n\t        if (!self._frag || self._frag.inserted) {\n\t          self.rawListener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // Now attach the main listener\n\t    this.listener = this.rawListener = function () {\n\t      if (composing || !self._bound) {\n\t        return;\n\t      }\n\t      var val = number || isRange ? toNumber(el.value) : el.value;\n\t      self.set(val);\n\t      // force update on next tick to avoid lock & same value\n\t      // also only update when user is not typing\n\t      nextTick(function () {\n\t        if (self._bound && !self.focused) {\n\t          self.update(self._watcher.value);\n\t        }\n\t      });\n\t    };\n\t\n\t    // apply debounce\n\t    if (debounce) {\n\t      this.listener = _debounce(this.listener, debounce);\n\t    }\n\t\n\t    // Support jQuery events, since jQuery.trigger() doesn't\n\t    // trigger native events in some cases and some plugins\n\t    // rely on $.trigger()\n\t    //\n\t    // We want to make sure if a listener is attached using\n\t    // jQuery, it is also removed with jQuery, that's why\n\t    // we do the check for each directive instance and\n\t    // store that check result on itself. This also allows\n\t    // easier test coverage control by unsetting the global\n\t    // jQuery variable in tests.\n\t    this.hasjQuery = typeof jQuery === 'function';\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.on ? 'on' : 'bind';\n\t      jQuery(el)[method]('change', this.rawListener);\n\t      if (!lazy) {\n\t        jQuery(el)[method]('input', this.listener);\n\t      }\n\t    } else {\n\t      this.on('change', this.rawListener);\n\t      if (!lazy) {\n\t        this.on('input', this.listener);\n\t      }\n\t    }\n\t\n\t    // IE9 doesn't fire input event on backspace/del/cut\n\t    if (!lazy && isIE9) {\n\t      this.on('cut', function () {\n\t        nextTick(self.listener);\n\t      });\n\t      this.on('keyup', function (e) {\n\t        if (e.keyCode === 46 || e.keyCode === 8) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // set initial value if present\n\t    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    // #3029 only update when the value changes. This prevent\n\t    // browsers from overwriting values like selectionStart\n\t    value = _toString(value);\n\t    if (value !== this.el.value) this.el.value = value;\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var el = this.el;\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.off ? 'off' : 'unbind';\n\t      jQuery(el)[method]('change', this.listener);\n\t      jQuery(el)[method]('input', this.listener);\n\t    }\n\t  }\n\t};\n\t\n\tvar radio = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      // value overwrite via v-bind:value\n\t      if (el.hasOwnProperty('_value')) {\n\t        return el._value;\n\t      }\n\t      var val = el.value;\n\t      if (self.params.number) {\n\t        val = toNumber(val);\n\t      }\n\t      return val;\n\t    };\n\t\n\t    this.listener = function () {\n\t      self.set(self.getValue());\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.checked = looseEqual(value, this.getValue());\n\t  }\n\t};\n\t\n\tvar select = {\n\t\n\t  bind: function bind() {\n\t    var _this = this;\n\t\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    // method to force update DOM using latest value.\n\t    this.forceUpdate = function () {\n\t      if (self._watcher) {\n\t        self.update(self._watcher.get());\n\t      }\n\t    };\n\t\n\t    // check if this is a multiple select\n\t    var multiple = this.multiple = el.hasAttribute('multiple');\n\t\n\t    // attach listener\n\t    this.listener = function () {\n\t      var value = getValue(el, multiple);\n\t      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n\t      self.set(value);\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    // if has initial value, set afterBind\n\t    var initValue = getValue(el, multiple, true);\n\t    if (multiple && initValue.length || !multiple && initValue !== null) {\n\t      this.afterBind = this.listener;\n\t    }\n\t\n\t    // All major browsers except Firefox resets\n\t    // selectedIndex with value -1 to 0 when the element\n\t    // is appended to a new parent, therefore we have to\n\t    // force a DOM update whenever that happens...\n\t    this.vm.$on('hook:attached', function () {\n\t      nextTick(_this.forceUpdate);\n\t    });\n\t    if (!inDoc(el)) {\n\t      nextTick(this.forceUpdate);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    el.selectedIndex = -1;\n\t    var multi = this.multiple && isArray(value);\n\t    var options = el.options;\n\t    var i = options.length;\n\t    var op, val;\n\t    while (i--) {\n\t      op = options[i];\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      /* eslint-disable eqeqeq */\n\t      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n\t      /* eslint-enable eqeqeq */\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    /* istanbul ignore next */\n\t    this.vm.$off('hook:attached', this.forceUpdate);\n\t  }\n\t};\n\t\n\t/**\n\t * Get select value\n\t *\n\t * @param {SelectElement} el\n\t * @param {Boolean} multi\n\t * @param {Boolean} init\n\t * @return {Array|*}\n\t */\n\t\n\tfunction getValue(el, multi, init) {\n\t  var res = multi ? [] : null;\n\t  var op, val, selected;\n\t  for (var i = 0, l = el.options.length; i < l; i++) {\n\t    op = el.options[i];\n\t    selected = init ? op.hasAttribute('selected') : op.selected;\n\t    if (selected) {\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      if (multi) {\n\t        res.push(val);\n\t      } else {\n\t        return val;\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Native Array.indexOf uses strict equal, but in this\n\t * case we need to match string/numbers with custom equal.\n\t *\n\t * @param {Array} arr\n\t * @param {*} val\n\t */\n\t\n\tfunction indexOf$1(arr, val) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (looseEqual(arr[i], val)) {\n\t      return i;\n\t    }\n\t  }\n\t  return -1;\n\t}\n\t\n\tvar checkbox = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n\t    };\n\t\n\t    function getBooleanValue() {\n\t      var val = el.checked;\n\t      if (val && el.hasOwnProperty('_trueValue')) {\n\t        return el._trueValue;\n\t      }\n\t      if (!val && el.hasOwnProperty('_falseValue')) {\n\t        return el._falseValue;\n\t      }\n\t      return val;\n\t    }\n\t\n\t    this.listener = function () {\n\t      var model = self._watcher.value;\n\t      if (isArray(model)) {\n\t        var val = self.getValue();\n\t        if (el.checked) {\n\t          if (indexOf(model, val) < 0) {\n\t            model.push(val);\n\t          }\n\t        } else {\n\t          model.$remove(val);\n\t        }\n\t      } else {\n\t        self.set(getBooleanValue());\n\t      }\n\t    };\n\t\n\t    this.on('change', this.listener);\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    if (isArray(value)) {\n\t      el.checked = indexOf(value, this.getValue()) > -1;\n\t    } else {\n\t      if (el.hasOwnProperty('_trueValue')) {\n\t        el.checked = looseEqual(value, el._trueValue);\n\t      } else {\n\t        el.checked = !!value;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tvar handlers = {\n\t  text: text$2,\n\t  radio: radio,\n\t  select: select,\n\t  checkbox: checkbox\n\t};\n\t\n\tvar model = {\n\t\n\t  priority: MODEL,\n\t  twoWay: true,\n\t  handlers: handlers,\n\t  params: ['lazy', 'number', 'debounce'],\n\t\n\t  /**\n\t   * Possible elements:\n\t   *   <select>\n\t   *   <textarea>\n\t   *   <input type=\"*\">\n\t   *     - text\n\t   *     - checkbox\n\t   *     - radio\n\t   *     - number\n\t   */\n\t\n\t  bind: function bind() {\n\t    // friendly warning...\n\t    this.checkFilters();\n\t    if (this.hasRead && !this.hasWrite) {\n\t      (\"production\") !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n\t    }\n\t    var el = this.el;\n\t    var tag = el.tagName;\n\t    var handler;\n\t    if (tag === 'INPUT') {\n\t      handler = handlers[el.type] || handlers.text;\n\t    } else if (tag === 'SELECT') {\n\t      handler = handlers.select;\n\t    } else if (tag === 'TEXTAREA') {\n\t      handler = handlers.text;\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n\t      return;\n\t    }\n\t    el.__v_model = this;\n\t    handler.bind.call(this);\n\t    this.update = handler.update;\n\t    this._unbind = handler.unbind;\n\t  },\n\t\n\t  /**\n\t   * Check read/write filter stats.\n\t   */\n\t\n\t  checkFilters: function checkFilters() {\n\t    var filters = this.filters;\n\t    if (!filters) return;\n\t    var i = filters.length;\n\t    while (i--) {\n\t      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n\t      if (typeof filter === 'function' || filter.read) {\n\t        this.hasRead = true;\n\t      }\n\t      if (filter.write) {\n\t        this.hasWrite = true;\n\t      }\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.el.__v_model = null;\n\t    this._unbind && this._unbind();\n\t  }\n\t};\n\t\n\t// keyCode aliases\n\tvar keyCodes = {\n\t  esc: 27,\n\t  tab: 9,\n\t  enter: 13,\n\t  space: 32,\n\t  'delete': [8, 46],\n\t  up: 38,\n\t  left: 37,\n\t  right: 39,\n\t  down: 40\n\t};\n\t\n\tfunction keyFilter(handler, keys) {\n\t  var codes = keys.map(function (key) {\n\t    var charCode = key.charCodeAt(0);\n\t    if (charCode > 47 && charCode < 58) {\n\t      return parseInt(key, 10);\n\t    }\n\t    if (key.length === 1) {\n\t      charCode = key.toUpperCase().charCodeAt(0);\n\t      if (charCode > 64 && charCode < 91) {\n\t        return charCode;\n\t      }\n\t    }\n\t    return keyCodes[key];\n\t  });\n\t  codes = [].concat.apply([], codes);\n\t  return function keyHandler(e) {\n\t    if (codes.indexOf(e.keyCode) > -1) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tfunction stopFilter(handler) {\n\t  return function stopHandler(e) {\n\t    e.stopPropagation();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction preventFilter(handler) {\n\t  return function preventHandler(e) {\n\t    e.preventDefault();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction selfFilter(handler) {\n\t  return function selfHandler(e) {\n\t    if (e.target === e.currentTarget) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tvar on$1 = {\n\t\n\t  priority: ON,\n\t  acceptStatement: true,\n\t  keyCodes: keyCodes,\n\t\n\t  bind: function bind() {\n\t    // deal with iframes\n\t    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n\t      var self = this;\n\t      this.iframeBind = function () {\n\t        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n\t      };\n\t      this.on('load', this.iframeBind);\n\t    }\n\t  },\n\t\n\t  update: function update(handler) {\n\t    // stub a noop for v-on with no value,\n\t    // e.g. @mousedown.prevent\n\t    if (!this.descriptor.raw) {\n\t      handler = function () {};\n\t    }\n\t\n\t    if (typeof handler !== 'function') {\n\t      (\"production\") !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n\t      return;\n\t    }\n\t\n\t    // apply modifiers\n\t    if (this.modifiers.stop) {\n\t      handler = stopFilter(handler);\n\t    }\n\t    if (this.modifiers.prevent) {\n\t      handler = preventFilter(handler);\n\t    }\n\t    if (this.modifiers.self) {\n\t      handler = selfFilter(handler);\n\t    }\n\t    // key filter\n\t    var keys = Object.keys(this.modifiers).filter(function (key) {\n\t      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n\t    });\n\t    if (keys.length) {\n\t      handler = keyFilter(handler, keys);\n\t    }\n\t\n\t    this.reset();\n\t    this.handler = handler;\n\t\n\t    if (this.iframeBind) {\n\t      this.iframeBind();\n\t    } else {\n\t      on(this.el, this.arg, this.handler, this.modifiers.capture);\n\t    }\n\t  },\n\t\n\t  reset: function reset() {\n\t    var el = this.iframeBind ? this.el.contentWindow : this.el;\n\t    if (this.handler) {\n\t      off(el, this.arg, this.handler);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.reset();\n\t  }\n\t};\n\t\n\tvar prefixes = ['-webkit-', '-moz-', '-ms-'];\n\tvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\n\tvar importantRE = /!important;?$/;\n\tvar propCache = Object.create(null);\n\t\n\tvar testEl = null;\n\t\n\tvar style = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (typeof value === 'string') {\n\t      this.el.style.cssText = value;\n\t    } else if (isArray(value)) {\n\t      this.handleObject(value.reduce(extend, {}));\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    // cache object styles so that only changed props\n\t    // are actually updated.\n\t    var cache = this.cache || (this.cache = {});\n\t    var name, val;\n\t    for (name in cache) {\n\t      if (!(name in value)) {\n\t        this.handleSingle(name, null);\n\t        delete cache[name];\n\t      }\n\t    }\n\t    for (name in value) {\n\t      val = value[name];\n\t      if (val !== cache[name]) {\n\t        cache[name] = val;\n\t        this.handleSingle(name, val);\n\t      }\n\t    }\n\t  },\n\t\n\t  handleSingle: function handleSingle(prop, value) {\n\t    prop = normalize(prop);\n\t    if (!prop) return; // unsupported prop\n\t    // cast possible numbers/booleans into strings\n\t    if (value != null) value += '';\n\t    if (value) {\n\t      var isImportant = importantRE.test(value) ? 'important' : '';\n\t      if (isImportant) {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n\t        }\n\t        value = value.replace(importantRE, '').trim();\n\t        this.el.style.setProperty(prop.kebab, value, isImportant);\n\t      } else {\n\t        this.el.style[prop.camel] = value;\n\t      }\n\t    } else {\n\t      this.el.style[prop.camel] = '';\n\t    }\n\t  }\n\t\n\t};\n\t\n\t/**\n\t * Normalize a CSS property name.\n\t * - cache result\n\t * - auto prefix\n\t * - camelCase -> dash-case\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction normalize(prop) {\n\t  if (propCache[prop]) {\n\t    return propCache[prop];\n\t  }\n\t  var res = prefix(prop);\n\t  propCache[prop] = propCache[res] = res;\n\t  return res;\n\t}\n\t\n\t/**\n\t * Auto detect the appropriate prefix for a CSS property.\n\t * https://gist.github.com/paulirish/523692\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction prefix(prop) {\n\t  prop = hyphenate(prop);\n\t  var camel = camelize(prop);\n\t  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n\t  if (!testEl) {\n\t    testEl = document.createElement('div');\n\t  }\n\t  var i = prefixes.length;\n\t  var prefixed;\n\t  if (camel !== 'filter' && camel in testEl.style) {\n\t    return {\n\t      kebab: prop,\n\t      camel: camel\n\t    };\n\t  }\n\t  while (i--) {\n\t    prefixed = camelPrefixes[i] + upper;\n\t    if (prefixed in testEl.style) {\n\t      return {\n\t        kebab: prefixes[i] + prop,\n\t        camel: prefixed\n\t      };\n\t    }\n\t  }\n\t}\n\t\n\t// xlink\n\tvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\tvar xlinkRE = /^xlink:/;\n\t\n\t// check for attributes that prohibit interpolations\n\tvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n\t// these attributes should also set their corresponding properties\n\t// because they only affect the initial state of the element\n\tvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n\t// these attributes expect enumrated values of \"true\" or \"false\"\n\t// but are not boolean attributes\n\tvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\t\n\t// these attributes should set a hidden property for\n\t// binding v-model to object values\n\tvar modelProps = {\n\t  value: '_value',\n\t  'true-value': '_trueValue',\n\t  'false-value': '_falseValue'\n\t};\n\t\n\tvar bind$1 = {\n\t\n\t  priority: BIND,\n\t\n\t  bind: function bind() {\n\t    var attr = this.arg;\n\t    var tag = this.el.tagName;\n\t    // should be deep watch on object mode\n\t    if (!attr) {\n\t      this.deep = true;\n\t    }\n\t    // handle interpolation bindings\n\t    var descriptor = this.descriptor;\n\t    var tokens = descriptor.interp;\n\t    if (tokens) {\n\t      // handle interpolations with one-time tokens\n\t      if (descriptor.hasOneTime) {\n\t        this.expression = tokensToExp(tokens, this._scope || this.vm);\n\t      }\n\t\n\t      // only allow binding on native attributes\n\t      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n\t        (\"production\") !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n\t        this.el.removeAttribute(attr);\n\t        this.invalid = true;\n\t      }\n\t\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        var raw = attr + '=\"' + descriptor.raw + '\": ';\n\t        // warn src\n\t        if (attr === 'src') {\n\t          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n\t        }\n\t\n\t        // warn style\n\t        if (attr === 'style') {\n\t          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) {\n\t      return;\n\t    }\n\t    var attr = this.arg;\n\t    if (this.arg) {\n\t      this.handleSingle(attr, value);\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  // share object handler with v-bind:class\n\t  handleObject: style.handleObject,\n\t\n\t  handleSingle: function handleSingle(attr, value) {\n\t    var el = this.el;\n\t    var interp = this.descriptor.interp;\n\t    if (this.modifiers.camel) {\n\t      attr = camelize(attr);\n\t    }\n\t    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n\t      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n\t      ? '' : value : value;\n\t\n\t      if (el[attr] !== attrValue) {\n\t        el[attr] = attrValue;\n\t      }\n\t    }\n\t    // set model props\n\t    var modelProp = modelProps[attr];\n\t    if (!interp && modelProp) {\n\t      el[modelProp] = value;\n\t      // update v-model if present\n\t      var model = el.__v_model;\n\t      if (model) {\n\t        model.listener();\n\t      }\n\t    }\n\t    // do not set value attribute for textarea\n\t    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n\t      el.removeAttribute(attr);\n\t      return;\n\t    }\n\t    // update attribute\n\t    if (enumeratedAttrRE.test(attr)) {\n\t      el.setAttribute(attr, value ? 'true' : 'false');\n\t    } else if (value != null && value !== false) {\n\t      if (attr === 'class') {\n\t        // handle edge case #1960:\n\t        // class interpolation should not overwrite Vue transition class\n\t        if (el.__v_trans) {\n\t          value += ' ' + el.__v_trans.id + '-transition';\n\t        }\n\t        setClass(el, value);\n\t      } else if (xlinkRE.test(attr)) {\n\t        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n\t      } else {\n\t        el.setAttribute(attr, value === true ? '' : value);\n\t      }\n\t    } else {\n\t      el.removeAttribute(attr);\n\t    }\n\t  }\n\t};\n\t\n\tvar el = {\n\t\n\t  priority: EL,\n\t\n\t  bind: function bind() {\n\t    /* istanbul ignore if */\n\t    if (!this.arg) {\n\t      return;\n\t    }\n\t    var id = this.id = camelize(this.arg);\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (hasOwn(refs, id)) {\n\t      refs[id] = this.el;\n\t    } else {\n\t      defineReactive(refs, id, this.el);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (refs[this.id] === this.el) {\n\t      refs[this.id] = null;\n\t    }\n\t  }\n\t};\n\t\n\tvar ref = {\n\t  bind: function bind() {\n\t    (\"production\") !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n\t  }\n\t};\n\t\n\tvar cloak = {\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    this.vm.$once('pre-hook:compiled', function () {\n\t      el.removeAttribute('v-cloak');\n\t    });\n\t  }\n\t};\n\t\n\t// must export plain object\n\tvar directives = {\n\t  text: text$1,\n\t  html: html,\n\t  'for': vFor,\n\t  'if': vIf,\n\t  show: show,\n\t  model: model,\n\t  on: on$1,\n\t  bind: bind$1,\n\t  el: el,\n\t  ref: ref,\n\t  cloak: cloak\n\t};\n\t\n\tvar vClass = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (!value) {\n\t      this.cleanup();\n\t    } else if (typeof value === 'string') {\n\t      this.setClass(value.trim().split(/\\s+/));\n\t    } else {\n\t      this.setClass(normalize$1(value));\n\t    }\n\t  },\n\t\n\t  setClass: function setClass(value) {\n\t    this.cleanup(value);\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var val = value[i];\n\t      if (val) {\n\t        apply(this.el, val, addClass);\n\t      }\n\t    }\n\t    this.prevKeys = value;\n\t  },\n\t\n\t  cleanup: function cleanup(value) {\n\t    var prevKeys = this.prevKeys;\n\t    if (!prevKeys) return;\n\t    var i = prevKeys.length;\n\t    while (i--) {\n\t      var key = prevKeys[i];\n\t      if (!value || value.indexOf(key) < 0) {\n\t        apply(this.el, key, removeClass);\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Normalize objects and arrays (potentially containing objects)\n\t * into array of strings.\n\t *\n\t * @param {Object|Array<String|Object>} value\n\t * @return {Array<String>}\n\t */\n\t\n\tfunction normalize$1(value) {\n\t  var res = [];\n\t  if (isArray(value)) {\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var _key = value[i];\n\t      if (_key) {\n\t        if (typeof _key === 'string') {\n\t          res.push(_key);\n\t        } else {\n\t          for (var k in _key) {\n\t            if (_key[k]) res.push(k);\n\t          }\n\t        }\n\t      }\n\t    }\n\t  } else if (isObject(value)) {\n\t    for (var key in value) {\n\t      if (value[key]) res.push(key);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Add or remove a class/classes on an element\n\t *\n\t * @param {Element} el\n\t * @param {String} key The class name. This may or may not\n\t *                     contain a space character, in such a\n\t *                     case we'll deal with multiple class\n\t *                     names at once.\n\t * @param {Function} fn\n\t */\n\t\n\tfunction apply(el, key, fn) {\n\t  key = key.trim();\n\t  if (key.indexOf(' ') === -1) {\n\t    fn(el, key);\n\t    return;\n\t  }\n\t  // The key contains one or more space characters.\n\t  // Since a class name doesn't accept such characters, we\n\t  // treat it as multiple classes.\n\t  var keys = key.split(/\\s+/);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    fn(el, keys[i]);\n\t  }\n\t}\n\t\n\tvar component = {\n\t\n\t  priority: COMPONENT,\n\t\n\t  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\t\n\t  /**\n\t   * Setup. Two possible usages:\n\t   *\n\t   * - static:\n\t   *   <comp> or <div v-component=\"comp\">\n\t   *\n\t   * - dynamic:\n\t   *   <component :is=\"view\">\n\t   */\n\t\n\t  bind: function bind() {\n\t    if (!this.el.__vue__) {\n\t      // keep-alive cache\n\t      this.keepAlive = this.params.keepAlive;\n\t      if (this.keepAlive) {\n\t        this.cache = {};\n\t      }\n\t      // check inline-template\n\t      if (this.params.inlineTemplate) {\n\t        // extract inline template as a DocumentFragment\n\t        this.inlineTemplate = extractContent(this.el, true);\n\t      }\n\t      // component resolution related state\n\t      this.pendingComponentCb = this.Component = null;\n\t      // transition related state\n\t      this.pendingRemovals = 0;\n\t      this.pendingRemovalCb = null;\n\t      // create a ref anchor\n\t      this.anchor = createAnchor('v-component');\n\t      replace(this.el, this.anchor);\n\t      // remove is attribute.\n\t      // this is removed during compilation, but because compilation is\n\t      // cached, when the component is used elsewhere this attribute\n\t      // will remain at link time.\n\t      this.el.removeAttribute('is');\n\t      this.el.removeAttribute(':is');\n\t      // remove ref, same as above\n\t      if (this.descriptor.ref) {\n\t        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n\t      }\n\t      // if static, build right now.\n\t      if (this.literal) {\n\t        this.setComponent(this.expression);\n\t      }\n\t    } else {\n\t      (\"production\") !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Public update, called by the watcher in the dynamic\n\t   * literal scenario, e.g. <component :is=\"view\">\n\t   */\n\t\n\t  update: function update(value) {\n\t    if (!this.literal) {\n\t      this.setComponent(value);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Switch dynamic components. May resolve the component\n\t   * asynchronously, and perform transition based on\n\t   * specified transition mode. Accepts a few additional\n\t   * arguments specifically for vue-router.\n\t   *\n\t   * The callback is called when the full transition is\n\t   * finished.\n\t   *\n\t   * @param {String} value\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  setComponent: function setComponent(value, cb) {\n\t    this.invalidatePending();\n\t    if (!value) {\n\t      // just remove current\n\t      this.unbuild(true);\n\t      this.remove(this.childVM, cb);\n\t      this.childVM = null;\n\t    } else {\n\t      var self = this;\n\t      this.resolveComponent(value, function () {\n\t        self.mountComponent(cb);\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Resolve the component constructor to use when creating\n\t   * the child vm.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  resolveComponent: function resolveComponent(value, cb) {\n\t    var self = this;\n\t    this.pendingComponentCb = cancellable(function (Component) {\n\t      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n\t      self.Component = Component;\n\t      cb();\n\t    });\n\t    this.vm._resolveComponent(value, this.pendingComponentCb);\n\t  },\n\t\n\t  /**\n\t   * Create a new instance using the current constructor and\n\t   * replace the existing instance. This method doesn't care\n\t   * whether the new component and the old one are actually\n\t   * the same.\n\t   *\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  mountComponent: function mountComponent(cb) {\n\t    // actual mount\n\t    this.unbuild(true);\n\t    var self = this;\n\t    var activateHooks = this.Component.options.activate;\n\t    var cached = this.getCached();\n\t    var newComponent = this.build();\n\t    if (activateHooks && !cached) {\n\t      this.waitingFor = newComponent;\n\t      callActivateHooks(activateHooks, newComponent, function () {\n\t        if (self.waitingFor !== newComponent) {\n\t          return;\n\t        }\n\t        self.waitingFor = null;\n\t        self.transition(newComponent, cb);\n\t      });\n\t    } else {\n\t      // update ref for kept-alive component\n\t      if (cached) {\n\t        newComponent._updateRef();\n\t      }\n\t      this.transition(newComponent, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * When the component changes or unbinds before an async\n\t   * constructor is resolved, we need to invalidate its\n\t   * pending callback.\n\t   */\n\t\n\t  invalidatePending: function invalidatePending() {\n\t    if (this.pendingComponentCb) {\n\t      this.pendingComponentCb.cancel();\n\t      this.pendingComponentCb = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Instantiate/insert a new child vm.\n\t   * If keep alive and has cached instance, insert that\n\t   * instance; otherwise build a new one and cache it.\n\t   *\n\t   * @param {Object} [extraOptions]\n\t   * @return {Vue} - the created instance\n\t   */\n\t\n\t  build: function build(extraOptions) {\n\t    var cached = this.getCached();\n\t    if (cached) {\n\t      return cached;\n\t    }\n\t    if (this.Component) {\n\t      // default options\n\t      var options = {\n\t        name: this.ComponentName,\n\t        el: cloneNode(this.el),\n\t        template: this.inlineTemplate,\n\t        // make sure to add the child with correct parent\n\t        // if this is a transcluded component, its parent\n\t        // should be the transclusion host.\n\t        parent: this._host || this.vm,\n\t        // if no inline-template, then the compiled\n\t        // linker can be cached for better performance.\n\t        _linkerCachable: !this.inlineTemplate,\n\t        _ref: this.descriptor.ref,\n\t        _asComponent: true,\n\t        _isRouterView: this._isRouterView,\n\t        // if this is a transcluded component, context\n\t        // will be the common parent vm of this instance\n\t        // and its host.\n\t        _context: this.vm,\n\t        // if this is inside an inline v-for, the scope\n\t        // will be the intermediate scope created for this\n\t        // repeat fragment. this is used for linking props\n\t        // and container directives.\n\t        _scope: this._scope,\n\t        // pass in the owner fragment of this component.\n\t        // this is necessary so that the fragment can keep\n\t        // track of its contained components in order to\n\t        // call attach/detach hooks for them.\n\t        _frag: this._frag\n\t      };\n\t      // extra options\n\t      // in 1.0.0 this is used by vue-router only\n\t      /* istanbul ignore if */\n\t      if (extraOptions) {\n\t        extend(options, extraOptions);\n\t      }\n\t      var child = new this.Component(options);\n\t      if (this.keepAlive) {\n\t        this.cache[this.Component.cid] = child;\n\t      }\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n\t      }\n\t      return child;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Try to get a cached instance of the current component.\n\t   *\n\t   * @return {Vue|undefined}\n\t   */\n\t\n\t  getCached: function getCached() {\n\t    return this.keepAlive && this.cache[this.Component.cid];\n\t  },\n\t\n\t  /**\n\t   * Teardown the current child, but defers cleanup so\n\t   * that we can separate the destroy and removal steps.\n\t   *\n\t   * @param {Boolean} defer\n\t   */\n\t\n\t  unbuild: function unbuild(defer) {\n\t    if (this.waitingFor) {\n\t      if (!this.keepAlive) {\n\t        this.waitingFor.$destroy();\n\t      }\n\t      this.waitingFor = null;\n\t    }\n\t    var child = this.childVM;\n\t    if (!child || this.keepAlive) {\n\t      if (child) {\n\t        // remove ref\n\t        child._inactive = true;\n\t        child._updateRef(true);\n\t      }\n\t      return;\n\t    }\n\t    // the sole purpose of `deferCleanup` is so that we can\n\t    // \"deactivate\" the vm right now and perform DOM removal\n\t    // later.\n\t    child.$destroy(false, defer);\n\t  },\n\t\n\t  /**\n\t   * Remove current destroyed child and manually do\n\t   * the cleanup after removal.\n\t   *\n\t   * @param {Function} cb\n\t   */\n\t\n\t  remove: function remove(child, cb) {\n\t    var keepAlive = this.keepAlive;\n\t    if (child) {\n\t      // we may have a component switch when a previous\n\t      // component is still being transitioned out.\n\t      // we want to trigger only one lastest insertion cb\n\t      // when the existing transition finishes. (#1119)\n\t      this.pendingRemovals++;\n\t      this.pendingRemovalCb = cb;\n\t      var self = this;\n\t      child.$remove(function () {\n\t        self.pendingRemovals--;\n\t        if (!keepAlive) child._cleanup();\n\t        if (!self.pendingRemovals && self.pendingRemovalCb) {\n\t          self.pendingRemovalCb();\n\t          self.pendingRemovalCb = null;\n\t        }\n\t      });\n\t    } else if (cb) {\n\t      cb();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Actually swap the components, depending on the\n\t   * transition mode. Defaults to simultaneous.\n\t   *\n\t   * @param {Vue} target\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  transition: function transition(target, cb) {\n\t    var self = this;\n\t    var current = this.childVM;\n\t    // for devtool inspection\n\t    if (current) current._inactive = true;\n\t    target._inactive = false;\n\t    this.childVM = target;\n\t    switch (self.params.transitionMode) {\n\t      case 'in-out':\n\t        target.$before(self.anchor, function () {\n\t          self.remove(current, cb);\n\t        });\n\t        break;\n\t      case 'out-in':\n\t        self.remove(current, function () {\n\t          target.$before(self.anchor, cb);\n\t        });\n\t        break;\n\t      default:\n\t        self.remove(current);\n\t        target.$before(self.anchor, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Unbind.\n\t   */\n\t\n\t  unbind: function unbind() {\n\t    this.invalidatePending();\n\t    // Do not defer cleanup when unbinding\n\t    this.unbuild();\n\t    // destroy all keep-alive cached instances\n\t    if (this.cache) {\n\t      for (var key in this.cache) {\n\t        this.cache[key].$destroy();\n\t      }\n\t      this.cache = null;\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Call activate hooks in order (asynchronous)\n\t *\n\t * @param {Array} hooks\n\t * @param {Vue} vm\n\t * @param {Function} cb\n\t */\n\t\n\tfunction callActivateHooks(hooks, vm, cb) {\n\t  var total = hooks.length;\n\t  var called = 0;\n\t  hooks[0].call(vm, next);\n\t  function next() {\n\t    if (++called >= total) {\n\t      cb();\n\t    } else {\n\t      hooks[called].call(vm, next);\n\t    }\n\t  }\n\t}\n\t\n\tvar propBindingModes = config._propBindingModes;\n\tvar empty = {};\n\t\n\t// regexes\n\tvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\n\tvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\t\n\t/**\n\t * Compile props on a root element and return\n\t * a props link function.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Array} propOptions\n\t * @param {Vue} vm\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction compileProps(el, propOptions, vm) {\n\t  var props = [];\n\t  var names = Object.keys(propOptions);\n\t  var i = names.length;\n\t  var options, name, attr, value, path, parsed, prop;\n\t  while (i--) {\n\t    name = names[i];\n\t    options = propOptions[name] || empty;\n\t\n\t    if (false) {\n\t      warn('Do not use $data as prop.', vm);\n\t      continue;\n\t    }\n\t\n\t    // props could contain dashes, which will be\n\t    // interpreted as minus calculations by the parser\n\t    // so we need to camelize the path here\n\t    path = camelize(name);\n\t    if (!identRE$1.test(path)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n\t      continue;\n\t    }\n\t\n\t    prop = {\n\t      name: name,\n\t      path: path,\n\t      options: options,\n\t      mode: propBindingModes.ONE_WAY,\n\t      raw: null\n\t    };\n\t\n\t    attr = hyphenate(name);\n\t    // first check dynamic version\n\t    if ((value = getBindAttr(el, attr)) === null) {\n\t      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n\t        prop.mode = propBindingModes.TWO_WAY;\n\t      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n\t        prop.mode = propBindingModes.ONE_TIME;\n\t      }\n\t    }\n\t    if (value !== null) {\n\t      // has dynamic binding!\n\t      prop.raw = value;\n\t      parsed = parseDirective(value);\n\t      value = parsed.expression;\n\t      prop.filters = parsed.filters;\n\t      // check binding type\n\t      if (isLiteral(value) && !parsed.filters) {\n\t        // for expressions containing literal numbers and\n\t        // booleans, there's no need to setup a prop binding,\n\t        // so we can optimize them as a one-time set.\n\t        prop.optimizedLiteral = true;\n\t      } else {\n\t        prop.dynamic = true;\n\t        // check non-settable path for two-way bindings\n\t        if (false) {\n\t          prop.mode = propBindingModes.ONE_WAY;\n\t          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n\t        }\n\t      }\n\t      prop.parentPath = value;\n\t\n\t      // warn required two-way\n\t      if (false) {\n\t        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n\t      }\n\t    } else if ((value = getAttr(el, attr)) !== null) {\n\t      // has literal binding!\n\t      prop.raw = value;\n\t    } else if (false) {\n\t      // check possible camelCase prop usage\n\t      var lowerCaseName = path.toLowerCase();\n\t      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n\t      if (value) {\n\t        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n\t      } else if (options.required) {\n\t        // warn missing required\n\t        warn('Missing required prop: ' + name, vm);\n\t      }\n\t    }\n\t    // push prop\n\t    props.push(prop);\n\t  }\n\t  return makePropsLinkFn(props);\n\t}\n\t\n\t/**\n\t * Build a function that applies props to a vm.\n\t *\n\t * @param {Array} props\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction makePropsLinkFn(props) {\n\t  return function propsLinkFn(vm, scope) {\n\t    // store resolved props info\n\t    vm._props = {};\n\t    var inlineProps = vm.$options.propsData;\n\t    var i = props.length;\n\t    var prop, path, options, value, raw;\n\t    while (i--) {\n\t      prop = props[i];\n\t      raw = prop.raw;\n\t      path = prop.path;\n\t      options = prop.options;\n\t      vm._props[path] = prop;\n\t      if (inlineProps && hasOwn(inlineProps, path)) {\n\t        initProp(vm, prop, inlineProps[path]);\n\t      }if (raw === null) {\n\t        // initialize absent prop\n\t        initProp(vm, prop, undefined);\n\t      } else if (prop.dynamic) {\n\t        // dynamic prop\n\t        if (prop.mode === propBindingModes.ONE_TIME) {\n\t          // one time binding\n\t          value = (scope || vm._context || vm).$get(prop.parentPath);\n\t          initProp(vm, prop, value);\n\t        } else {\n\t          if (vm._context) {\n\t            // dynamic binding\n\t            vm._bindDir({\n\t              name: 'prop',\n\t              def: propDef,\n\t              prop: prop\n\t            }, null, null, scope); // el, host, scope\n\t          } else {\n\t              // root instance\n\t              initProp(vm, prop, vm.$get(prop.parentPath));\n\t            }\n\t        }\n\t      } else if (prop.optimizedLiteral) {\n\t        // optimized literal, cast it and just set once\n\t        var stripped = stripQuotes(raw);\n\t        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n\t        initProp(vm, prop, value);\n\t      } else {\n\t        // string literal, but we need to cater for\n\t        // Boolean props with no value, or with same\n\t        // literal value (e.g. disabled=\"disabled\")\n\t        // see https://github.com/vuejs/vue-loader/issues/182\n\t        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n\t        initProp(vm, prop, value);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Process a prop with a rawValue, applying necessary coersions,\n\t * default values & assertions and call the given callback with\n\t * processed value.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} rawValue\n\t * @param {Function} fn\n\t */\n\t\n\tfunction processPropValue(vm, prop, rawValue, fn) {\n\t  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n\t  var value = rawValue;\n\t  if (value === undefined) {\n\t    value = getPropDefaultValue(vm, prop);\n\t  }\n\t  value = coerceProp(prop, value, vm);\n\t  var coerced = value !== rawValue;\n\t  if (!assertProp(prop, value, vm)) {\n\t    value = undefined;\n\t  }\n\t  if (isSimple && !coerced) {\n\t    withoutConversion(function () {\n\t      fn(value);\n\t    });\n\t  } else {\n\t    fn(value);\n\t  }\n\t}\n\t\n\t/**\n\t * Set a prop's initial value on a vm and its data object.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction initProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    defineReactive(vm, prop.path, value);\n\t  });\n\t}\n\t\n\t/**\n\t * Update a prop's value on a vm.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction updateProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    vm[prop.path] = value;\n\t  });\n\t}\n\t\n\t/**\n\t * Get the default value of a prop.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @return {*}\n\t */\n\t\n\tfunction getPropDefaultValue(vm, prop) {\n\t  // no default, return undefined\n\t  var options = prop.options;\n\t  if (!hasOwn(options, 'default')) {\n\t    // absent boolean value defaults to false\n\t    return options.type === Boolean ? false : undefined;\n\t  }\n\t  var def = options['default'];\n\t  // warn against non-factory defaults for Object & Array\n\t  if (isObject(def)) {\n\t    (\"production\") !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n\t  }\n\t  // call factory function for non-Function types\n\t  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n\t}\n\t\n\t/**\n\t * Assert whether a prop is valid.\n\t *\n\t * @param {Object} prop\n\t * @param {*} value\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction assertProp(prop, value, vm) {\n\t  if (!prop.options.required && ( // non-required\n\t  prop.raw === null || // abscent\n\t  value == null) // null or undefined\n\t  ) {\n\t      return true;\n\t    }\n\t  var options = prop.options;\n\t  var type = options.type;\n\t  var valid = !type;\n\t  var expectedTypes = [];\n\t  if (type) {\n\t    if (!isArray(type)) {\n\t      type = [type];\n\t    }\n\t    for (var i = 0; i < type.length && !valid; i++) {\n\t      var assertedType = assertType(value, type[i]);\n\t      expectedTypes.push(assertedType.expectedType);\n\t      valid = assertedType.valid;\n\t    }\n\t  }\n\t  if (!valid) {\n\t    if (false) {\n\t      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n\t    }\n\t    return false;\n\t  }\n\t  var validator = options.validator;\n\t  if (validator) {\n\t    if (!validator(value)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\t/**\n\t * Force parsing value with coerce option.\n\t *\n\t * @param {*} value\n\t * @param {Object} options\n\t * @return {*}\n\t */\n\t\n\tfunction coerceProp(prop, value, vm) {\n\t  var coerce = prop.options.coerce;\n\t  if (!coerce) {\n\t    return value;\n\t  }\n\t  if (typeof coerce === 'function') {\n\t    return coerce(value);\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid coerce for prop \"' + prop.name + '\": expected function, got ' + typeof coerce + '.', vm);\n\t    return value;\n\t  }\n\t}\n\t\n\t/**\n\t * Assert the type of a value\n\t *\n\t * @param {*} value\n\t * @param {Function} type\n\t * @return {Object}\n\t */\n\t\n\tfunction assertType(value, type) {\n\t  var valid;\n\t  var expectedType;\n\t  if (type === String) {\n\t    expectedType = 'string';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Number) {\n\t    expectedType = 'number';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Boolean) {\n\t    expectedType = 'boolean';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Function) {\n\t    expectedType = 'function';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Object) {\n\t    expectedType = 'object';\n\t    valid = isPlainObject(value);\n\t  } else if (type === Array) {\n\t    expectedType = 'array';\n\t    valid = isArray(value);\n\t  } else {\n\t    valid = value instanceof type;\n\t  }\n\t  return {\n\t    valid: valid,\n\t    expectedType: expectedType\n\t  };\n\t}\n\t\n\t/**\n\t * Format type for output\n\t *\n\t * @param {String} type\n\t * @return {String}\n\t */\n\t\n\tfunction formatType(type) {\n\t  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n\t}\n\t\n\t/**\n\t * Format value\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction formatValue(val) {\n\t  return Object.prototype.toString.call(val).slice(8, -1);\n\t}\n\t\n\tvar bindingModes = config._propBindingModes;\n\t\n\tvar propDef = {\n\t\n\t  bind: function bind() {\n\t    var child = this.vm;\n\t    var parent = child._context;\n\t    // passed in from compiler directly\n\t    var prop = this.descriptor.prop;\n\t    var childKey = prop.path;\n\t    var parentKey = prop.parentPath;\n\t    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\t\n\t    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n\t      updateProp(child, prop, val);\n\t    }, {\n\t      twoWay: twoWay,\n\t      filters: prop.filters,\n\t      // important: props need to be observed on the\n\t      // v-for scope if present\n\t      scope: this._scope\n\t    });\n\t\n\t    // set the child initial value.\n\t    initProp(child, prop, parentWatcher.value);\n\t\n\t    // setup two-way binding\n\t    if (twoWay) {\n\t      // important: defer the child watcher creation until\n\t      // the created hook (after data observation)\n\t      var self = this;\n\t      child.$once('pre-hook:created', function () {\n\t        self.childWatcher = new Watcher(child, childKey, function (val) {\n\t          parentWatcher.set(val);\n\t        }, {\n\t          // ensure sync upward before parent sync down.\n\t          // this is necessary in cases e.g. the child\n\t          // mutates a prop array, then replaces it. (#1683)\n\t          sync: true\n\t        });\n\t      });\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.parentWatcher.teardown();\n\t    if (this.childWatcher) {\n\t      this.childWatcher.teardown();\n\t    }\n\t  }\n\t};\n\t\n\tvar queue$1 = [];\n\tvar queued = false;\n\t\n\t/**\n\t * Push a job into the queue.\n\t *\n\t * @param {Function} job\n\t */\n\t\n\tfunction pushJob(job) {\n\t  queue$1.push(job);\n\t  if (!queued) {\n\t    queued = true;\n\t    nextTick(flush);\n\t  }\n\t}\n\t\n\t/**\n\t * Flush the queue, and do one forced reflow before\n\t * triggering transitions.\n\t */\n\t\n\tfunction flush() {\n\t  // Force layout\n\t  var f = document.documentElement.offsetHeight;\n\t  for (var i = 0; i < queue$1.length; i++) {\n\t    queue$1[i]();\n\t  }\n\t  queue$1 = [];\n\t  queued = false;\n\t  // dummy return, so js linters don't complain about\n\t  // unused variable f\n\t  return f;\n\t}\n\t\n\tvar TYPE_TRANSITION = 'transition';\n\tvar TYPE_ANIMATION = 'animation';\n\tvar transDurationProp = transitionProp + 'Duration';\n\tvar animDurationProp = animationProp + 'Duration';\n\t\n\t/**\n\t * If a just-entered element is applied the\n\t * leave class while its enter transition hasn't started yet,\n\t * and the transitioned property has the same value for both\n\t * enter/leave, then the leave transition will be skipped and\n\t * the transitionend event never fires. This function ensures\n\t * its callback to be called after a transition has started\n\t * by waiting for double raf.\n\t *\n\t * It falls back to setTimeout on devices that support CSS\n\t * transitions but not raf (e.g. Android 4.2 browser) - since\n\t * these environments are usually slow, we are giving it a\n\t * relatively large timeout.\n\t */\n\t\n\tvar raf = inBrowser && window.requestAnimationFrame;\n\tvar waitForTransitionStart = raf\n\t/* istanbul ignore next */\n\t? function (fn) {\n\t  raf(function () {\n\t    raf(fn);\n\t  });\n\t} : function (fn) {\n\t  setTimeout(fn, 50);\n\t};\n\t\n\t/**\n\t * A Transition object that encapsulates the state and logic\n\t * of the transition.\n\t *\n\t * @param {Element} el\n\t * @param {String} id\n\t * @param {Object} hooks\n\t * @param {Vue} vm\n\t */\n\tfunction Transition(el, id, hooks, vm) {\n\t  this.id = id;\n\t  this.el = el;\n\t  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n\t  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n\t  this.hooks = hooks;\n\t  this.vm = vm;\n\t  // async state\n\t  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n\t  this.justEntered = false;\n\t  this.entered = this.left = false;\n\t  this.typeCache = {};\n\t  // check css transition type\n\t  this.type = hooks && hooks.type;\n\t  /* istanbul ignore if */\n\t  if (false) {\n\t    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n\t      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n\t    }\n\t  }\n\t  // bind\n\t  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n\t    self[m] = bind(self[m], self);\n\t  });\n\t}\n\t\n\tvar p$1 = Transition.prototype;\n\t\n\t/**\n\t * Start an entering transition.\n\t *\n\t * 1. enter transition triggered\n\t * 2. call beforeEnter hook\n\t * 3. add enter class\n\t * 4. insert/show element\n\t * 5. call enter hook (with possible explicit js callback)\n\t * 6. reflow\n\t * 7. based on transition type:\n\t *    - transition:\n\t *        remove class now, wait for transitionend,\n\t *        then done if there's no explicit js callback.\n\t *    - animation:\n\t *        wait for animationend, remove class,\n\t *        then done if there's no explicit js callback.\n\t *    - no css transition:\n\t *        done now if there's no explicit js callback.\n\t * 8. wait for either done or js callback, then call\n\t *    afterEnter hook.\n\t *\n\t * @param {Function} op - insert/show the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.enter = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeEnter');\n\t  this.cb = cb;\n\t  addClass(this.el, this.enterClass);\n\t  op();\n\t  this.entered = false;\n\t  this.callHookWithCb('enter');\n\t  if (this.entered) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.enterCancelled;\n\t  pushJob(this.enterNextTick);\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of an entering transition, which is\n\t * to be pushed into a queue and executed after a reflow so\n\t * that removing the class can trigger a CSS transition.\n\t */\n\t\n\tp$1.enterNextTick = function () {\n\t  var _this = this;\n\t\n\t  // prevent transition skipping\n\t  this.justEntered = true;\n\t  waitForTransitionStart(function () {\n\t    _this.justEntered = false;\n\t  });\n\t  var enterDone = this.enterDone;\n\t  var type = this.getCssTransitionType(this.enterClass);\n\t  if (!this.pendingJsCb) {\n\t    if (type === TYPE_TRANSITION) {\n\t      // trigger transition by removing enter class now\n\t      removeClass(this.el, this.enterClass);\n\t      this.setupCssCb(transitionEndEvent, enterDone);\n\t    } else if (type === TYPE_ANIMATION) {\n\t      this.setupCssCb(animationEndEvent, enterDone);\n\t    } else {\n\t      enterDone();\n\t    }\n\t  } else if (type === TYPE_TRANSITION) {\n\t    removeClass(this.el, this.enterClass);\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of an entering transition.\n\t */\n\t\n\tp$1.enterDone = function () {\n\t  this.entered = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  removeClass(this.el, this.enterClass);\n\t  this.callHook('afterEnter');\n\t  if (this.cb) this.cb();\n\t};\n\t\n\t/**\n\t * Start a leaving transition.\n\t *\n\t * 1. leave transition triggered.\n\t * 2. call beforeLeave hook\n\t * 3. add leave class (trigger css transition)\n\t * 4. call leave hook (with possible explicit js callback)\n\t * 5. reflow if no explicit js callback is provided\n\t * 6. based on transition type:\n\t *    - transition or animation:\n\t *        wait for end event, remove class, then done if\n\t *        there's no explicit js callback.\n\t *    - no css transition:\n\t *        done if there's no explicit js callback.\n\t * 7. wait for either done or js callback, then call\n\t *    afterLeave hook.\n\t *\n\t * @param {Function} op - remove/hide the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.leave = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeLeave');\n\t  this.op = op;\n\t  this.cb = cb;\n\t  addClass(this.el, this.leaveClass);\n\t  this.left = false;\n\t  this.callHookWithCb('leave');\n\t  if (this.left) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.leaveCancelled;\n\t  // only need to handle leaveDone if\n\t  // 1. the transition is already done (synchronously called\n\t  //    by the user, which causes this.op set to null)\n\t  // 2. there's no explicit js callback\n\t  if (this.op && !this.pendingJsCb) {\n\t    // if a CSS transition leaves immediately after enter,\n\t    // the transitionend event never fires. therefore we\n\t    // detect such cases and end the leave immediately.\n\t    if (this.justEntered) {\n\t      this.leaveDone();\n\t    } else {\n\t      pushJob(this.leaveNextTick);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveNextTick = function () {\n\t  var type = this.getCssTransitionType(this.leaveClass);\n\t  if (type) {\n\t    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n\t    this.setupCssCb(event, this.leaveDone);\n\t  } else {\n\t    this.leaveDone();\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveDone = function () {\n\t  this.left = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  this.op();\n\t  removeClass(this.el, this.leaveClass);\n\t  this.callHook('afterLeave');\n\t  if (this.cb) this.cb();\n\t  this.op = null;\n\t};\n\t\n\t/**\n\t * Cancel any pending callbacks from a previously running\n\t * but not finished transition.\n\t */\n\t\n\tp$1.cancelPending = function () {\n\t  this.op = this.cb = null;\n\t  var hasPending = false;\n\t  if (this.pendingCssCb) {\n\t    hasPending = true;\n\t    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n\t    this.pendingCssEvent = this.pendingCssCb = null;\n\t  }\n\t  if (this.pendingJsCb) {\n\t    hasPending = true;\n\t    this.pendingJsCb.cancel();\n\t    this.pendingJsCb = null;\n\t  }\n\t  if (hasPending) {\n\t    removeClass(this.el, this.enterClass);\n\t    removeClass(this.el, this.leaveClass);\n\t  }\n\t  if (this.cancel) {\n\t    this.cancel.call(this.vm, this.el);\n\t    this.cancel = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided synchronous hook function.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHook = function (type) {\n\t  if (this.hooks && this.hooks[type]) {\n\t    this.hooks[type].call(this.vm, this.el);\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided, potentially-async hook function.\n\t * We check for the length of arguments to see if the hook\n\t * expects a `done` callback. If true, the transition's end\n\t * will be determined by when the user calls that callback;\n\t * otherwise, the end is determined by the CSS transition or\n\t * animation.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHookWithCb = function (type) {\n\t  var hook = this.hooks && this.hooks[type];\n\t  if (hook) {\n\t    if (hook.length > 1) {\n\t      this.pendingJsCb = cancellable(this[type + 'Done']);\n\t    }\n\t    hook.call(this.vm, this.el, this.pendingJsCb);\n\t  }\n\t};\n\t\n\t/**\n\t * Get an element's transition type based on the\n\t * calculated styles.\n\t *\n\t * @param {String} className\n\t * @return {Number}\n\t */\n\t\n\tp$1.getCssTransitionType = function (className) {\n\t  /* istanbul ignore if */\n\t  if (!transitionEndEvent ||\n\t  // skip CSS transitions if page is not visible -\n\t  // this solves the issue of transitionend events not\n\t  // firing until the page is visible again.\n\t  // pageVisibility API is supported in IE10+, same as\n\t  // CSS transitions.\n\t  document.hidden ||\n\t  // explicit js-only transition\n\t  this.hooks && this.hooks.css === false ||\n\t  // element is hidden\n\t  isHidden(this.el)) {\n\t    return;\n\t  }\n\t  var type = this.type || this.typeCache[className];\n\t  if (type) return type;\n\t  var inlineStyles = this.el.style;\n\t  var computedStyles = window.getComputedStyle(this.el);\n\t  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n\t  if (transDuration && transDuration !== '0s') {\n\t    type = TYPE_TRANSITION;\n\t  } else {\n\t    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n\t    if (animDuration && animDuration !== '0s') {\n\t      type = TYPE_ANIMATION;\n\t    }\n\t  }\n\t  if (type) {\n\t    this.typeCache[className] = type;\n\t  }\n\t  return type;\n\t};\n\t\n\t/**\n\t * Setup a CSS transitionend/animationend callback.\n\t *\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tp$1.setupCssCb = function (event, cb) {\n\t  this.pendingCssEvent = event;\n\t  var self = this;\n\t  var el = this.el;\n\t  var onEnd = this.pendingCssCb = function (e) {\n\t    if (e.target === el) {\n\t      off(el, event, onEnd);\n\t      self.pendingCssEvent = self.pendingCssCb = null;\n\t      if (!self.pendingJsCb && cb) {\n\t        cb();\n\t      }\n\t    }\n\t  };\n\t  on(el, event, onEnd);\n\t};\n\t\n\t/**\n\t * Check if an element is hidden - in that case we can just\n\t * skip the transition alltogether.\n\t *\n\t * @param {Element} el\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isHidden(el) {\n\t  if (/svg$/.test(el.namespaceURI)) {\n\t    // SVG elements do not have offset(Width|Height)\n\t    // so we need to check the client rect\n\t    var rect = el.getBoundingClientRect();\n\t    return !(rect.width || rect.height);\n\t  } else {\n\t    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n\t  }\n\t}\n\t\n\tvar transition$1 = {\n\t\n\t  priority: TRANSITION,\n\t\n\t  update: function update(id, oldId) {\n\t    var el = this.el;\n\t    // resolve on owner vm\n\t    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n\t    id = id || 'v';\n\t    oldId = oldId || 'v';\n\t    el.__v_trans = new Transition(el, id, hooks, this.vm);\n\t    removeClass(el, oldId + '-transition');\n\t    addClass(el, id + '-transition');\n\t  }\n\t};\n\t\n\tvar internalDirectives = {\n\t  style: style,\n\t  'class': vClass,\n\t  component: component,\n\t  prop: propDef,\n\t  transition: transition$1\n\t};\n\t\n\t// special binding prefixes\n\tvar bindRE = /^v-bind:|^:/;\n\tvar onRE = /^v-on:|^@/;\n\tvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\n\tvar modifierRE = /\\.[^\\.]+/g;\n\tvar transitionRE = /^(v-bind:|:)?transition$/;\n\t\n\t// default directive priority\n\tvar DEFAULT_PRIORITY = 1000;\n\tvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\t\n\t/**\n\t * Compile a template and return a reusable composite link\n\t * function, which recursively contains more link functions\n\t * inside. This top level compile function would normally\n\t * be called on instance root nodes, but can also be used\n\t * for partial compilation if the partial argument is true.\n\t *\n\t * The returned composite link function, when called, will\n\t * return an unlink function that tearsdown all directives\n\t * created during the linking phase.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Object} options\n\t * @param {Boolean} partial\n\t * @return {Function}\n\t */\n\t\n\tfunction compile(el, options, partial) {\n\t  // link function for the node itself.\n\t  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n\t  // link function for the childNodes\n\t  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\t\n\t  /**\n\t   * A composite linker function to be called on a already\n\t   * compiled piece of DOM, which instantiates all directive\n\t   * instances.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host] - host vm of transcluded content\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - link context fragment\n\t   * @return {Function|undefined}\n\t   */\n\t\n\t  return function compositeLinkFn(vm, el, host, scope, frag) {\n\t    // cache childNodes before linking parent, fix #657\n\t    var childNodes = toArray(el.childNodes);\n\t    // link\n\t    var dirs = linkAndCapture(function compositeLinkCapturer() {\n\t      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n\t      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n\t    }, vm);\n\t    return makeUnlinkFn(vm, dirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Apply a linker to a vm/element pair and capture the\n\t * directives created during the process.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction linkAndCapture(linker, vm) {\n\t  /* istanbul ignore if */\n\t  if (true) {\n\t    // reset directives before every capture in production\n\t    // mode, so that when unlinking we don't need to splice\n\t    // them out (which turns out to be a perf hit).\n\t    // they are kept in development mode because they are\n\t    // useful for Vue's own tests.\n\t    vm._directives = [];\n\t  }\n\t  var originalDirCount = vm._directives.length;\n\t  linker();\n\t  var dirs = vm._directives.slice(originalDirCount);\n\t  dirs.sort(directiveComparator);\n\t  for (var i = 0, l = dirs.length; i < l; i++) {\n\t    dirs[i]._bind();\n\t  }\n\t  return dirs;\n\t}\n\t\n\t/**\n\t * Directive priority sort comparator\n\t *\n\t * @param {Object} a\n\t * @param {Object} b\n\t */\n\t\n\tfunction directiveComparator(a, b) {\n\t  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  return a > b ? -1 : a === b ? 0 : 1;\n\t}\n\t\n\t/**\n\t * Linker functions return an unlink function that\n\t * tearsdown all directives instances generated during\n\t * the process.\n\t *\n\t * We create unlink functions with only the necessary\n\t * information to avoid retaining additional closures.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Vue} [context]\n\t * @param {Array} [contextDirs]\n\t * @return {Function}\n\t */\n\t\n\tfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n\t  function unlink(destroying) {\n\t    teardownDirs(vm, dirs, destroying);\n\t    if (context && contextDirs) {\n\t      teardownDirs(context, contextDirs);\n\t    }\n\t  }\n\t  // expose linked directives\n\t  unlink.dirs = dirs;\n\t  return unlink;\n\t}\n\t\n\t/**\n\t * Teardown partial linked directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Boolean} destroying\n\t */\n\t\n\tfunction teardownDirs(vm, dirs, destroying) {\n\t  var i = dirs.length;\n\t  while (i--) {\n\t    dirs[i]._teardown();\n\t    if (false) {\n\t      vm._directives.$remove(dirs[i]);\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Compile link props on an instance.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element} el\n\t * @param {Object} props\n\t * @param {Object} [scope]\n\t * @return {Function}\n\t */\n\t\n\tfunction compileAndLinkProps(vm, el, props, scope) {\n\t  var propsLinkFn = compileProps(el, props, vm);\n\t  var propDirs = linkAndCapture(function () {\n\t    propsLinkFn(vm, scope);\n\t  }, vm);\n\t  return makeUnlinkFn(vm, propDirs);\n\t}\n\t\n\t/**\n\t * Compile the root element of an instance.\n\t *\n\t * 1. attrs on context container (context scope)\n\t * 2. attrs on the component template root node, if\n\t *    replace:true (child scope)\n\t *\n\t * If this is a fragment instance, we only need to compile 1.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @param {Object} contextOptions\n\t * @return {Function}\n\t */\n\t\n\tfunction compileRoot(el, options, contextOptions) {\n\t  var containerAttrs = options._containerAttrs;\n\t  var replacerAttrs = options._replacerAttrs;\n\t  var contextLinkFn, replacerLinkFn;\n\t\n\t  // only need to compile other attributes for\n\t  // non-fragment instances\n\t  if (el.nodeType !== 11) {\n\t    // for components, container and replacer need to be\n\t    // compiled separately and linked in different scopes.\n\t    if (options._asComponent) {\n\t      // 2. container attributes\n\t      if (containerAttrs && contextOptions) {\n\t        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n\t      }\n\t      if (replacerAttrs) {\n\t        // 3. replacer attributes\n\t        replacerLinkFn = compileDirectives(replacerAttrs, options);\n\t      }\n\t    } else {\n\t      // non-component, just compile as a normal element.\n\t      replacerLinkFn = compileDirectives(el.attributes, options);\n\t    }\n\t  } else if (false) {\n\t    // warn container directives for fragment instances\n\t    var names = containerAttrs.filter(function (attr) {\n\t      // allow vue-loader/vueify scoped css attributes\n\t      return attr.name.indexOf('_v-') < 0 &&\n\t      // allow event listeners\n\t      !onRE.test(attr.name) &&\n\t      // allow slots\n\t      attr.name !== 'slot';\n\t    }).map(function (attr) {\n\t      return '\"' + attr.name + '\"';\n\t    });\n\t    if (names.length) {\n\t      var plural = names.length > 1;\n\t      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n\t    }\n\t  }\n\t\n\t  options._containerAttrs = options._replacerAttrs = null;\n\t  return function rootLinkFn(vm, el, scope) {\n\t    // link context scope dirs\n\t    var context = vm._context;\n\t    var contextDirs;\n\t    if (context && contextLinkFn) {\n\t      contextDirs = linkAndCapture(function () {\n\t        contextLinkFn(context, el, null, scope);\n\t      }, context);\n\t    }\n\t\n\t    // link self\n\t    var selfDirs = linkAndCapture(function () {\n\t      if (replacerLinkFn) replacerLinkFn(vm, el);\n\t    }, vm);\n\t\n\t    // return the unlink function that tearsdown context\n\t    // container directives.\n\t    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node and return a nodeLinkFn based on the\n\t * node type.\n\t *\n\t * @param {Node} node\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileNode(node, options) {\n\t  var type = node.nodeType;\n\t  if (type === 1 && !isScript(node)) {\n\t    return compileElement(node, options);\n\t  } else if (type === 3 && node.data.trim()) {\n\t    return compileTextNode(node, options);\n\t  } else {\n\t    return null;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile an element and return a nodeLinkFn.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileElement(el, options) {\n\t  // preprocess textareas.\n\t  // textarea treats its text content as the initial value.\n\t  // just bind it as an attr directive for value.\n\t  if (el.tagName === 'TEXTAREA') {\n\t    var tokens = parseText(el.value);\n\t    if (tokens) {\n\t      el.setAttribute(':value', tokensToExp(tokens));\n\t      el.value = '';\n\t    }\n\t  }\n\t  var linkFn;\n\t  var hasAttrs = el.hasAttributes();\n\t  var attrs = hasAttrs && toArray(el.attributes);\n\t  // check terminal directives (for & if)\n\t  if (hasAttrs) {\n\t    linkFn = checkTerminalDirectives(el, attrs, options);\n\t  }\n\t  // check element directives\n\t  if (!linkFn) {\n\t    linkFn = checkElementDirectives(el, options);\n\t  }\n\t  // check component\n\t  if (!linkFn) {\n\t    linkFn = checkComponent(el, options);\n\t  }\n\t  // normal directives\n\t  if (!linkFn && hasAttrs) {\n\t    linkFn = compileDirectives(attrs, options);\n\t  }\n\t  return linkFn;\n\t}\n\t\n\t/**\n\t * Compile a textNode and return a nodeLinkFn.\n\t *\n\t * @param {TextNode} node\n\t * @param {Object} options\n\t * @return {Function|null} textNodeLinkFn\n\t */\n\t\n\tfunction compileTextNode(node, options) {\n\t  // skip marked text nodes\n\t  if (node._skip) {\n\t    return removeText;\n\t  }\n\t\n\t  var tokens = parseText(node.wholeText);\n\t  if (!tokens) {\n\t    return null;\n\t  }\n\t\n\t  // mark adjacent text nodes as skipped,\n\t  // because we are using node.wholeText to compile\n\t  // all adjacent text nodes together. This fixes\n\t  // issues in IE where sometimes it splits up a single\n\t  // text node into multiple ones.\n\t  var next = node.nextSibling;\n\t  while (next && next.nodeType === 3) {\n\t    next._skip = true;\n\t    next = next.nextSibling;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var el, token;\n\t  for (var i = 0, l = tokens.length; i < l; i++) {\n\t    token = tokens[i];\n\t    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n\t    frag.appendChild(el);\n\t  }\n\t  return makeTextNodeLinkFn(tokens, frag, options);\n\t}\n\t\n\t/**\n\t * Linker for an skipped text node.\n\t *\n\t * @param {Vue} vm\n\t * @param {Text} node\n\t */\n\t\n\tfunction removeText(vm, node) {\n\t  remove(node);\n\t}\n\t\n\t/**\n\t * Process a single text token.\n\t *\n\t * @param {Object} token\n\t * @param {Object} options\n\t * @return {Node}\n\t */\n\t\n\tfunction processTextToken(token, options) {\n\t  var el;\n\t  if (token.oneTime) {\n\t    el = document.createTextNode(token.value);\n\t  } else {\n\t    if (token.html) {\n\t      el = document.createComment('v-html');\n\t      setTokenType('html');\n\t    } else {\n\t      // IE will clean up empty textNodes during\n\t      // frag.cloneNode(true), so we have to give it\n\t      // something here...\n\t      el = document.createTextNode(' ');\n\t      setTokenType('text');\n\t    }\n\t  }\n\t  function setTokenType(type) {\n\t    if (token.descriptor) return;\n\t    var parsed = parseDirective(token.value);\n\t    token.descriptor = {\n\t      name: type,\n\t      def: directives[type],\n\t      expression: parsed.expression,\n\t      filters: parsed.filters\n\t    };\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Build a function that processes a textNode.\n\t *\n\t * @param {Array<Object>} tokens\n\t * @param {DocumentFragment} frag\n\t */\n\t\n\tfunction makeTextNodeLinkFn(tokens, frag) {\n\t  return function textNodeLinkFn(vm, el, host, scope) {\n\t    var fragClone = frag.cloneNode(true);\n\t    var childNodes = toArray(fragClone.childNodes);\n\t    var token, value, node;\n\t    for (var i = 0, l = tokens.length; i < l; i++) {\n\t      token = tokens[i];\n\t      value = token.value;\n\t      if (token.tag) {\n\t        node = childNodes[i];\n\t        if (token.oneTime) {\n\t          value = (scope || vm).$eval(value);\n\t          if (token.html) {\n\t            replace(node, parseTemplate(value, true));\n\t          } else {\n\t            node.data = _toString(value);\n\t          }\n\t        } else {\n\t          vm._bindDir(token.descriptor, node, host, scope);\n\t        }\n\t      }\n\t    }\n\t    replace(el, fragClone);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node list and return a childLinkFn.\n\t *\n\t * @param {NodeList} nodeList\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileNodeList(nodeList, options) {\n\t  var linkFns = [];\n\t  var nodeLinkFn, childLinkFn, node;\n\t  for (var i = 0, l = nodeList.length; i < l; i++) {\n\t    node = nodeList[i];\n\t    nodeLinkFn = compileNode(node, options);\n\t    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n\t    linkFns.push(nodeLinkFn, childLinkFn);\n\t  }\n\t  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n\t}\n\t\n\t/**\n\t * Make a child link function for a node's childNodes.\n\t *\n\t * @param {Array<Function>} linkFns\n\t * @return {Function} childLinkFn\n\t */\n\t\n\tfunction makeChildLinkFn(linkFns) {\n\t  return function childLinkFn(vm, nodes, host, scope, frag) {\n\t    var node, nodeLinkFn, childrenLinkFn;\n\t    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n\t      node = nodes[n];\n\t      nodeLinkFn = linkFns[i++];\n\t      childrenLinkFn = linkFns[i++];\n\t      // cache childNodes before linking parent, fix #657\n\t      var childNodes = toArray(node.childNodes);\n\t      if (nodeLinkFn) {\n\t        nodeLinkFn(vm, node, host, scope, frag);\n\t      }\n\t      if (childrenLinkFn) {\n\t        childrenLinkFn(vm, childNodes, host, scope, frag);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check for element directives (custom elements that should\n\t * be resovled as terminal directives).\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t */\n\t\n\tfunction checkElementDirectives(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  if (commonTagRE.test(tag)) {\n\t    return;\n\t  }\n\t  var def = resolveAsset(options, 'elementDirectives', tag);\n\t  if (def) {\n\t    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n\t  }\n\t}\n\t\n\t/**\n\t * Check if an element is a component. If yes, return\n\t * a component link function.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction checkComponent(el, options) {\n\t  var component = checkComponentAttr(el, options);\n\t  if (component) {\n\t    var ref = findRef(el);\n\t    var descriptor = {\n\t      name: 'component',\n\t      ref: ref,\n\t      expression: component.id,\n\t      def: internalDirectives.component,\n\t      modifiers: {\n\t        literal: !component.dynamic\n\t      }\n\t    };\n\t    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n\t      if (ref) {\n\t        defineReactive((scope || vm).$refs, ref, null);\n\t      }\n\t      vm._bindDir(descriptor, el, host, scope, frag);\n\t    };\n\t    componentLinkFn.terminal = true;\n\t    return componentLinkFn;\n\t  }\n\t}\n\t\n\t/**\n\t * Check an element for terminal directives in fixed order.\n\t * If it finds one, return a terminal link function.\n\t *\n\t * @param {Element} el\n\t * @param {Array} attrs\n\t * @param {Object} options\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction checkTerminalDirectives(el, attrs, options) {\n\t  // skip v-pre\n\t  if (getAttr(el, 'v-pre') !== null) {\n\t    return skip;\n\t  }\n\t  // skip v-else block, but only if following v-if\n\t  if (el.hasAttribute('v-else')) {\n\t    var prev = el.previousElementSibling;\n\t    if (prev && prev.hasAttribute('v-if')) {\n\t      return skip;\n\t    }\n\t  }\n\t\n\t  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n\t  for (var i = 0, j = attrs.length; i < j; i++) {\n\t    attr = attrs[i];\n\t    name = attr.name.replace(modifierRE, '');\n\t    if (matched = name.match(dirAttrRE)) {\n\t      def = resolveAsset(options, 'directives', matched[1]);\n\t      if (def && def.terminal) {\n\t        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n\t          termDef = def;\n\t          rawName = attr.name;\n\t          modifiers = parseModifiers(attr.name);\n\t          value = attr.value;\n\t          dirName = matched[1];\n\t          arg = matched[2];\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (termDef) {\n\t    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n\t  }\n\t}\n\t\n\tfunction skip() {}\n\tskip.terminal = true;\n\t\n\t/**\n\t * Build a node link function for a terminal directive.\n\t * A terminal link function terminates the current\n\t * compilation recursion and handles compilation of the\n\t * subtree in the directive.\n\t *\n\t * @param {Element} el\n\t * @param {String} dirName\n\t * @param {String} value\n\t * @param {Object} options\n\t * @param {Object} def\n\t * @param {String} [rawName]\n\t * @param {String} [arg]\n\t * @param {Object} [modifiers]\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n\t  var parsed = parseDirective(value);\n\t  var descriptor = {\n\t    name: dirName,\n\t    arg: arg,\n\t    expression: parsed.expression,\n\t    filters: parsed.filters,\n\t    raw: value,\n\t    attr: rawName,\n\t    modifiers: modifiers,\n\t    def: def\n\t  };\n\t  // check ref for v-for and router-view\n\t  if (dirName === 'for' || dirName === 'router-view') {\n\t    descriptor.ref = findRef(el);\n\t  }\n\t  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n\t    if (descriptor.ref) {\n\t      defineReactive((scope || vm).$refs, descriptor.ref, null);\n\t    }\n\t    vm._bindDir(descriptor, el, host, scope, frag);\n\t  };\n\t  fn.terminal = true;\n\t  return fn;\n\t}\n\t\n\t/**\n\t * Compile the directives on an element and return a linker.\n\t *\n\t * @param {Array|NamedNodeMap} attrs\n\t * @param {Object} options\n\t * @return {Function}\n\t */\n\t\n\tfunction compileDirectives(attrs, options) {\n\t  var i = attrs.length;\n\t  var dirs = [];\n\t  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n\t  while (i--) {\n\t    attr = attrs[i];\n\t    name = rawName = attr.name;\n\t    value = rawValue = attr.value;\n\t    tokens = parseText(value);\n\t    // reset arg\n\t    arg = null;\n\t    // check modifiers\n\t    modifiers = parseModifiers(name);\n\t    name = name.replace(modifierRE, '');\n\t\n\t    // attribute interpolations\n\t    if (tokens) {\n\t      value = tokensToExp(tokens);\n\t      arg = name;\n\t      pushDir('bind', directives.bind, tokens);\n\t      // warn against mixing mustaches with v-bind\n\t      if (false) {\n\t        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n\t          return attr.name === ':class' || attr.name === 'v-bind:class';\n\t        })) {\n\t          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n\t        }\n\t      }\n\t    } else\n\t\n\t      // special attribute: transition\n\t      if (transitionRE.test(name)) {\n\t        modifiers.literal = !bindRE.test(name);\n\t        pushDir('transition', internalDirectives.transition);\n\t      } else\n\t\n\t        // event handlers\n\t        if (onRE.test(name)) {\n\t          arg = name.replace(onRE, '');\n\t          pushDir('on', directives.on);\n\t        } else\n\t\n\t          // attribute bindings\n\t          if (bindRE.test(name)) {\n\t            dirName = name.replace(bindRE, '');\n\t            if (dirName === 'style' || dirName === 'class') {\n\t              pushDir(dirName, internalDirectives[dirName]);\n\t            } else {\n\t              arg = dirName;\n\t              pushDir('bind', directives.bind);\n\t            }\n\t          } else\n\t\n\t            // normal directives\n\t            if (matched = name.match(dirAttrRE)) {\n\t              dirName = matched[1];\n\t              arg = matched[2];\n\t\n\t              // skip v-else (when used with v-show)\n\t              if (dirName === 'else') {\n\t                continue;\n\t              }\n\t\n\t              dirDef = resolveAsset(options, 'directives', dirName, true);\n\t              if (dirDef) {\n\t                pushDir(dirName, dirDef);\n\t              }\n\t            }\n\t  }\n\t\n\t  /**\n\t   * Push a directive.\n\t   *\n\t   * @param {String} dirName\n\t   * @param {Object|Function} def\n\t   * @param {Array} [interpTokens]\n\t   */\n\t\n\t  function pushDir(dirName, def, interpTokens) {\n\t    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n\t    var parsed = !hasOneTimeToken && parseDirective(value);\n\t    dirs.push({\n\t      name: dirName,\n\t      attr: rawName,\n\t      raw: rawValue,\n\t      def: def,\n\t      arg: arg,\n\t      modifiers: modifiers,\n\t      // conversion from interpolation strings with one-time token\n\t      // to expression is differed until directive bind time so that we\n\t      // have access to the actual vm context for one-time bindings.\n\t      expression: parsed && parsed.expression,\n\t      filters: parsed && parsed.filters,\n\t      interp: interpTokens,\n\t      hasOneTime: hasOneTimeToken\n\t    });\n\t  }\n\t\n\t  if (dirs.length) {\n\t    return makeNodeLinkFn(dirs);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse modifiers from directive attribute name.\n\t *\n\t * @param {String} name\n\t * @return {Object}\n\t */\n\t\n\tfunction parseModifiers(name) {\n\t  var res = Object.create(null);\n\t  var match = name.match(modifierRE);\n\t  if (match) {\n\t    var i = match.length;\n\t    while (i--) {\n\t      res[match[i].slice(1)] = true;\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Build a link function for all directives on a single node.\n\t *\n\t * @param {Array} directives\n\t * @return {Function} directivesLinkFn\n\t */\n\t\n\tfunction makeNodeLinkFn(directives) {\n\t  return function nodeLinkFn(vm, el, host, scope, frag) {\n\t    // reverse apply because it's sorted low to high\n\t    var i = directives.length;\n\t    while (i--) {\n\t      vm._bindDir(directives[i], el, host, scope, frag);\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an interpolation string contains one-time tokens.\n\t *\n\t * @param {Array} tokens\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOneTime(tokens) {\n\t  var i = tokens.length;\n\t  while (i--) {\n\t    if (tokens[i].oneTime) return true;\n\t  }\n\t}\n\t\n\tfunction isScript(el) {\n\t  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n\t}\n\t\n\tvar specialCharRE = /[^\\w\\-:\\.]/;\n\t\n\t/**\n\t * Process an element or a DocumentFragment based on a\n\t * instance option object. This allows us to transclude\n\t * a template node/fragment before the instance is created,\n\t * so the processed fragment can then be cloned and reused\n\t * in v-for.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transclude(el, options) {\n\t  // extract container attributes to pass them down\n\t  // to compiler, because they need to be compiled in\n\t  // parent scope. we are mutating the options object here\n\t  // assuming the same object will be used for compile\n\t  // right after this.\n\t  if (options) {\n\t    options._containerAttrs = extractAttrs(el);\n\t  }\n\t  // for template tags, what we want is its content as\n\t  // a documentFragment (for fragment instances)\n\t  if (isTemplate(el)) {\n\t    el = parseTemplate(el);\n\t  }\n\t  if (options) {\n\t    if (options._asComponent && !options.template) {\n\t      options.template = '<slot></slot>';\n\t    }\n\t    if (options.template) {\n\t      options._content = extractContent(el);\n\t      el = transcludeTemplate(el, options);\n\t    }\n\t  }\n\t  if (isFragment(el)) {\n\t    // anchors for fragment instance\n\t    // passing in `persist: true` to avoid them being\n\t    // discarded by IE during template cloning\n\t    prepend(createAnchor('v-start', true), el);\n\t    el.appendChild(createAnchor('v-end', true));\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Process the template option.\n\t * If the replace option is true this will swap the $el.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transcludeTemplate(el, options) {\n\t  var template = options.template;\n\t  var frag = parseTemplate(template, true);\n\t  if (frag) {\n\t    var replacer = frag.firstChild;\n\t    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n\t    if (options.replace) {\n\t      /* istanbul ignore if */\n\t      if (el === document.body) {\n\t        (\"production\") !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n\t      }\n\t      // there are many cases where the instance must\n\t      // become a fragment instance: basically anything that\n\t      // can create more than 1 root nodes.\n\t      if (\n\t      // multi-children template\n\t      frag.childNodes.length > 1 ||\n\t      // non-element template\n\t      replacer.nodeType !== 1 ||\n\t      // single nested component\n\t      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n\t      // element directive\n\t      resolveAsset(options, 'elementDirectives', tag) ||\n\t      // for block\n\t      replacer.hasAttribute('v-for') ||\n\t      // if block\n\t      replacer.hasAttribute('v-if')) {\n\t        return frag;\n\t      } else {\n\t        options._replacerAttrs = extractAttrs(replacer);\n\t        mergeAttrs(el, replacer);\n\t        return replacer;\n\t      }\n\t    } else {\n\t      el.appendChild(frag);\n\t      return el;\n\t    }\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid template option: ' + template);\n\t  }\n\t}\n\t\n\t/**\n\t * Helper to extract a component container's attributes\n\t * into a plain object array.\n\t *\n\t * @param {Element} el\n\t * @return {Array}\n\t */\n\t\n\tfunction extractAttrs(el) {\n\t  if (el.nodeType === 1 && el.hasAttributes()) {\n\t    return toArray(el.attributes);\n\t  }\n\t}\n\t\n\t/**\n\t * Merge the attributes of two elements, and make sure\n\t * the class names are merged properly.\n\t *\n\t * @param {Element} from\n\t * @param {Element} to\n\t */\n\t\n\tfunction mergeAttrs(from, to) {\n\t  var attrs = from.attributes;\n\t  var i = attrs.length;\n\t  var name, value;\n\t  while (i--) {\n\t    name = attrs[i].name;\n\t    value = attrs[i].value;\n\t    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n\t      to.setAttribute(name, value);\n\t    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n\t      value.split(/\\s+/).forEach(function (cls) {\n\t        addClass(to, cls);\n\t      });\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Scan and determine slot content distribution.\n\t * We do this during transclusion instead at compile time so that\n\t * the distribution is decoupled from the compilation order of\n\t * the slots.\n\t *\n\t * @param {Element|DocumentFragment} template\n\t * @param {Element} content\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction resolveSlots(vm, content) {\n\t  if (!content) {\n\t    return;\n\t  }\n\t  var contents = vm._slotContents = Object.create(null);\n\t  var el, name;\n\t  for (var i = 0, l = content.children.length; i < l; i++) {\n\t    el = content.children[i];\n\t    /* eslint-disable no-cond-assign */\n\t    if (name = el.getAttribute('slot')) {\n\t      (contents[name] || (contents[name] = [])).push(el);\n\t    }\n\t    /* eslint-enable no-cond-assign */\n\t    if (false) {\n\t      warn('The \"slot\" attribute must be static.', vm.$parent);\n\t    }\n\t  }\n\t  for (name in contents) {\n\t    contents[name] = extractFragment(contents[name], content);\n\t  }\n\t  if (content.hasChildNodes()) {\n\t    var nodes = content.childNodes;\n\t    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n\t      return;\n\t    }\n\t    contents['default'] = extractFragment(content.childNodes, content);\n\t  }\n\t}\n\t\n\t/**\n\t * Extract qualified content nodes from a node list.\n\t *\n\t * @param {NodeList} nodes\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction extractFragment(nodes, parent) {\n\t  var frag = document.createDocumentFragment();\n\t  nodes = toArray(nodes);\n\t  for (var i = 0, l = nodes.length; i < l; i++) {\n\t    var node = nodes[i];\n\t    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n\t      parent.removeChild(node);\n\t      node = parseTemplate(node, true);\n\t    }\n\t    frag.appendChild(node);\n\t  }\n\t  return frag;\n\t}\n\t\n\t\n\t\n\tvar compiler = Object.freeze({\n\t\tcompile: compile,\n\t\tcompileAndLinkProps: compileAndLinkProps,\n\t\tcompileRoot: compileRoot,\n\t\ttransclude: transclude,\n\t\tresolveSlots: resolveSlots\n\t});\n\t\n\tfunction stateMixin (Vue) {\n\t  /**\n\t   * Accessor for `$data` property, since setting $data\n\t   * requires observing the new object and updating\n\t   * proxied properties.\n\t   */\n\t\n\t  Object.defineProperty(Vue.prototype, '$data', {\n\t    get: function get() {\n\t      return this._data;\n\t    },\n\t    set: function set(newData) {\n\t      if (newData !== this._data) {\n\t        this._setData(newData);\n\t      }\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Setup the scope of an instance, which contains:\n\t   * - observed data\n\t   * - computed properties\n\t   * - user methods\n\t   * - meta properties\n\t   */\n\t\n\t  Vue.prototype._initState = function () {\n\t    this._initProps();\n\t    this._initMeta();\n\t    this._initMethods();\n\t    this._initData();\n\t    this._initComputed();\n\t  };\n\t\n\t  /**\n\t   * Initialize props.\n\t   */\n\t\n\t  Vue.prototype._initProps = function () {\n\t    var options = this.$options;\n\t    var el = options.el;\n\t    var props = options.props;\n\t    if (props && !el) {\n\t      (\"production\") !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n\t    }\n\t    // make sure to convert string selectors into element now\n\t    el = options.el = query(el);\n\t    this._propsUnlinkFn = el && el.nodeType === 1 && props\n\t    // props must be linked in proper scope if inside v-for\n\t    ? compileAndLinkProps(this, el, props, this._scope) : null;\n\t  };\n\t\n\t  /**\n\t   * Initialize the data.\n\t   */\n\t\n\t  Vue.prototype._initData = function () {\n\t    var dataFn = this.$options.data;\n\t    var data = this._data = dataFn ? dataFn() : {};\n\t    if (!isPlainObject(data)) {\n\t      data = {};\n\t      (\"production\") !== 'production' && warn('data functions should return an object.', this);\n\t    }\n\t    var props = this._props;\n\t    // proxy data on instance\n\t    var keys = Object.keys(data);\n\t    var i, key;\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      // there are two scenarios where we can proxy a data key:\n\t      // 1. it's not already defined as a prop\n\t      // 2. it's provided via a instantiation option AND there are no\n\t      //    template prop present\n\t      if (!props || !hasOwn(props, key)) {\n\t        this._proxy(key);\n\t      } else if (false) {\n\t        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n\t      }\n\t    }\n\t    // observe data\n\t    observe(data, this);\n\t  };\n\t\n\t  /**\n\t   * Swap the instance's $data. Called in $data's setter.\n\t   *\n\t   * @param {Object} newData\n\t   */\n\t\n\t  Vue.prototype._setData = function (newData) {\n\t    newData = newData || {};\n\t    var oldData = this._data;\n\t    this._data = newData;\n\t    var keys, key, i;\n\t    // unproxy keys not present in new data\n\t    keys = Object.keys(oldData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!(key in newData)) {\n\t        this._unproxy(key);\n\t      }\n\t    }\n\t    // proxy keys not already proxied,\n\t    // and trigger change for changed values\n\t    keys = Object.keys(newData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!hasOwn(this, key)) {\n\t        // new property\n\t        this._proxy(key);\n\t      }\n\t    }\n\t    oldData.__ob__.removeVm(this);\n\t    observe(newData, this);\n\t    this._digest();\n\t  };\n\t\n\t  /**\n\t   * Proxy a property, so that\n\t   * vm.prop === vm._data.prop\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._proxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      // need to store ref to self here\n\t      // because these getter/setters might\n\t      // be called by child scopes via\n\t      // prototype inheritance.\n\t      var self = this;\n\t      Object.defineProperty(self, key, {\n\t        configurable: true,\n\t        enumerable: true,\n\t        get: function proxyGetter() {\n\t          return self._data[key];\n\t        },\n\t        set: function proxySetter(val) {\n\t          self._data[key] = val;\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Unproxy a property.\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._unproxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      delete this[key];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Force update on every watcher in scope.\n\t   */\n\t\n\t  Vue.prototype._digest = function () {\n\t    for (var i = 0, l = this._watchers.length; i < l; i++) {\n\t      this._watchers[i].update(true); // shallow updates\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Setup computed properties. They are essentially\n\t   * special getter/setters\n\t   */\n\t\n\t  function noop() {}\n\t  Vue.prototype._initComputed = function () {\n\t    var computed = this.$options.computed;\n\t    if (computed) {\n\t      for (var key in computed) {\n\t        var userDef = computed[key];\n\t        var def = {\n\t          enumerable: true,\n\t          configurable: true\n\t        };\n\t        if (typeof userDef === 'function') {\n\t          def.get = makeComputedGetter(userDef, this);\n\t          def.set = noop;\n\t        } else {\n\t          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n\t          def.set = userDef.set ? bind(userDef.set, this) : noop;\n\t        }\n\t        Object.defineProperty(this, key, def);\n\t      }\n\t    }\n\t  };\n\t\n\t  function makeComputedGetter(getter, owner) {\n\t    var watcher = new Watcher(owner, getter, null, {\n\t      lazy: true\n\t    });\n\t    return function computedGetter() {\n\t      if (watcher.dirty) {\n\t        watcher.evaluate();\n\t      }\n\t      if (Dep.target) {\n\t        watcher.depend();\n\t      }\n\t      return watcher.value;\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Setup instance methods. Methods must be bound to the\n\t   * instance since they might be passed down as a prop to\n\t   * child components.\n\t   */\n\t\n\t  Vue.prototype._initMethods = function () {\n\t    var methods = this.$options.methods;\n\t    if (methods) {\n\t      for (var key in methods) {\n\t        this[key] = bind(methods[key], this);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Initialize meta information like $index, $key & $value.\n\t   */\n\t\n\t  Vue.prototype._initMeta = function () {\n\t    var metas = this.$options._meta;\n\t    if (metas) {\n\t      for (var key in metas) {\n\t        defineReactive(this, key, metas[key]);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\tvar eventRE = /^v-on:|^@/;\n\t\n\tfunction eventsMixin (Vue) {\n\t  /**\n\t   * Setup the instance's option events & watchers.\n\t   * If the value is a string, we pull it from the\n\t   * instance's methods by name.\n\t   */\n\t\n\t  Vue.prototype._initEvents = function () {\n\t    var options = this.$options;\n\t    if (options._asComponent) {\n\t      registerComponentEvents(this, options.el);\n\t    }\n\t    registerCallbacks(this, '$on', options.events);\n\t    registerCallbacks(this, '$watch', options.watch);\n\t  };\n\t\n\t  /**\n\t   * Register v-on events on a child component\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} el\n\t   */\n\t\n\t  function registerComponentEvents(vm, el) {\n\t    var attrs = el.attributes;\n\t    var name, value, handler;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      name = attrs[i].name;\n\t      if (eventRE.test(name)) {\n\t        name = name.replace(eventRE, '');\n\t        // force the expression into a statement so that\n\t        // it always dynamically resolves the method to call (#2670)\n\t        // kinda ugly hack, but does the job.\n\t        value = attrs[i].value;\n\t        if (isSimplePath(value)) {\n\t          value += '.apply(this, $arguments)';\n\t        }\n\t        handler = (vm._scope || vm._context).$eval(value, true);\n\t        handler._fromParent = true;\n\t        vm.$on(name.replace(eventRE), handler);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Register callbacks for option events and watchers.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {Object} hash\n\t   */\n\t\n\t  function registerCallbacks(vm, action, hash) {\n\t    if (!hash) return;\n\t    var handlers, key, i, j;\n\t    for (key in hash) {\n\t      handlers = hash[key];\n\t      if (isArray(handlers)) {\n\t        for (i = 0, j = handlers.length; i < j; i++) {\n\t          register(vm, action, key, handlers[i]);\n\t        }\n\t      } else {\n\t        register(vm, action, key, handlers);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Helper to register an event/watch callback.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {String} key\n\t   * @param {Function|String|Object} handler\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  function register(vm, action, key, handler, options) {\n\t    var type = typeof handler;\n\t    if (type === 'function') {\n\t      vm[action](key, handler, options);\n\t    } else if (type === 'string') {\n\t      var methods = vm.$options.methods;\n\t      var method = methods && methods[handler];\n\t      if (method) {\n\t        vm[action](key, method, options);\n\t      } else {\n\t        (\"production\") !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n\t      }\n\t    } else if (handler && type === 'object') {\n\t      register(vm, action, key, handler.handler, handler);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Setup recursive attached/detached calls\n\t   */\n\t\n\t  Vue.prototype._initDOMHooks = function () {\n\t    this.$on('hook:attached', onAttached);\n\t    this.$on('hook:detached', onDetached);\n\t  };\n\t\n\t  /**\n\t   * Callback to recursively call attached hook on children\n\t   */\n\t\n\t  function onAttached() {\n\t    if (!this._isAttached) {\n\t      this._isAttached = true;\n\t      this.$children.forEach(callAttach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call attached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callAttach(child) {\n\t    if (!child._isAttached && inDoc(child.$el)) {\n\t      child._callHook('attached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Callback to recursively call detached hook on children\n\t   */\n\t\n\t  function onDetached() {\n\t    if (this._isAttached) {\n\t      this._isAttached = false;\n\t      this.$children.forEach(callDetach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call detached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callDetach(child) {\n\t    if (child._isAttached && !inDoc(child.$el)) {\n\t      child._callHook('detached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Trigger all handlers for a hook\n\t   *\n\t   * @param {String} hook\n\t   */\n\t\n\t  Vue.prototype._callHook = function (hook) {\n\t    this.$emit('pre-hook:' + hook);\n\t    var handlers = this.$options[hook];\n\t    if (handlers) {\n\t      for (var i = 0, j = handlers.length; i < j; i++) {\n\t        handlers[i].call(this);\n\t      }\n\t    }\n\t    this.$emit('hook:' + hook);\n\t  };\n\t}\n\t\n\tfunction noop$1() {}\n\t\n\t/**\n\t * A directive links a DOM element with a piece of data,\n\t * which is the result of evaluating an expression.\n\t * It registers a watcher with the expression and calls\n\t * the DOM update function when a change is triggered.\n\t *\n\t * @param {Object} descriptor\n\t *                 - {String} name\n\t *                 - {Object} def\n\t *                 - {String} expression\n\t *                 - {Array<Object>} [filters]\n\t *                 - {Object} [modifiers]\n\t *                 - {Boolean} literal\n\t *                 - {String} attr\n\t *                 - {String} arg\n\t *                 - {String} raw\n\t *                 - {String} [ref]\n\t *                 - {Array<Object>} [interp]\n\t *                 - {Boolean} [hasOneTime]\n\t * @param {Vue} vm\n\t * @param {Node} el\n\t * @param {Vue} [host] - transclusion host component\n\t * @param {Object} [scope] - v-for scope\n\t * @param {Fragment} [frag] - owner fragment\n\t * @constructor\n\t */\n\tfunction Directive(descriptor, vm, el, host, scope, frag) {\n\t  this.vm = vm;\n\t  this.el = el;\n\t  // copy descriptor properties\n\t  this.descriptor = descriptor;\n\t  this.name = descriptor.name;\n\t  this.expression = descriptor.expression;\n\t  this.arg = descriptor.arg;\n\t  this.modifiers = descriptor.modifiers;\n\t  this.filters = descriptor.filters;\n\t  this.literal = this.modifiers && this.modifiers.literal;\n\t  // private\n\t  this._locked = false;\n\t  this._bound = false;\n\t  this._listeners = null;\n\t  // link context\n\t  this._host = host;\n\t  this._scope = scope;\n\t  this._frag = frag;\n\t  // store directives on node in dev mode\n\t  if (false) {\n\t    this.el._vue_directives = this.el._vue_directives || [];\n\t    this.el._vue_directives.push(this);\n\t  }\n\t}\n\t\n\t/**\n\t * Initialize the directive, mixin definition properties,\n\t * setup the watcher, call definition bind() and update()\n\t * if present.\n\t */\n\t\n\tDirective.prototype._bind = function () {\n\t  var name = this.name;\n\t  var descriptor = this.descriptor;\n\t\n\t  // remove attribute\n\t  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n\t    var attr = descriptor.attr || 'v-' + name;\n\t    this.el.removeAttribute(attr);\n\t  }\n\t\n\t  // copy def properties\n\t  var def = descriptor.def;\n\t  if (typeof def === 'function') {\n\t    this.update = def;\n\t  } else {\n\t    extend(this, def);\n\t  }\n\t\n\t  // setup directive params\n\t  this._setupParams();\n\t\n\t  // initial bind\n\t  if (this.bind) {\n\t    this.bind();\n\t  }\n\t  this._bound = true;\n\t\n\t  if (this.literal) {\n\t    this.update && this.update(descriptor.raw);\n\t  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n\t    // wrapped updater for context\n\t    var dir = this;\n\t    if (this.update) {\n\t      this._update = function (val, oldVal) {\n\t        if (!dir._locked) {\n\t          dir.update(val, oldVal);\n\t        }\n\t      };\n\t    } else {\n\t      this._update = noop$1;\n\t    }\n\t    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n\t    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n\t    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n\t    {\n\t      filters: this.filters,\n\t      twoWay: this.twoWay,\n\t      deep: this.deep,\n\t      preProcess: preProcess,\n\t      postProcess: postProcess,\n\t      scope: this._scope\n\t    });\n\t    // v-model with inital inline value need to sync back to\n\t    // model instead of update to DOM on init. They would\n\t    // set the afterBind hook to indicate that.\n\t    if (this.afterBind) {\n\t      this.afterBind();\n\t    } else if (this.update) {\n\t      this.update(watcher.value);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup all param attributes, e.g. track-by,\n\t * transition-mode, etc...\n\t */\n\t\n\tDirective.prototype._setupParams = function () {\n\t  if (!this.params) {\n\t    return;\n\t  }\n\t  var params = this.params;\n\t  // swap the params array with a fresh object.\n\t  this.params = Object.create(null);\n\t  var i = params.length;\n\t  var key, val, mappedKey;\n\t  while (i--) {\n\t    key = hyphenate(params[i]);\n\t    mappedKey = camelize(key);\n\t    val = getBindAttr(this.el, key);\n\t    if (val != null) {\n\t      // dynamic\n\t      this._setupParamWatcher(mappedKey, val);\n\t    } else {\n\t      // static\n\t      val = getAttr(this.el, key);\n\t      if (val != null) {\n\t        this.params[mappedKey] = val === '' ? true : val;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup a watcher for a dynamic param.\n\t *\n\t * @param {String} key\n\t * @param {String} expression\n\t */\n\t\n\tDirective.prototype._setupParamWatcher = function (key, expression) {\n\t  var self = this;\n\t  var called = false;\n\t  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n\t    self.params[key] = val;\n\t    // since we are in immediate mode,\n\t    // only call the param change callbacks if this is not the first update.\n\t    if (called) {\n\t      var cb = self.paramWatchers && self.paramWatchers[key];\n\t      if (cb) {\n\t        cb.call(self, val, oldVal);\n\t      }\n\t    } else {\n\t      called = true;\n\t    }\n\t  }, {\n\t    immediate: true,\n\t    user: false\n\t  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n\t};\n\t\n\t/**\n\t * Check if the directive is a function caller\n\t * and if the expression is a callable one. If both true,\n\t * we wrap up the expression and use it as the event\n\t * handler.\n\t *\n\t * e.g. on-click=\"a++\"\n\t *\n\t * @return {Boolean}\n\t */\n\t\n\tDirective.prototype._checkStatement = function () {\n\t  var expression = this.expression;\n\t  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n\t    var fn = parseExpression(expression).get;\n\t    var scope = this._scope || this.vm;\n\t    var handler = function handler(e) {\n\t      scope.$event = e;\n\t      fn.call(scope, scope);\n\t      scope.$event = null;\n\t    };\n\t    if (this.filters) {\n\t      handler = scope._applyFilters(handler, null, this.filters);\n\t    }\n\t    this.update(handler);\n\t    return true;\n\t  }\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t * This should only be used in two-way directives\n\t * e.g. v-model.\n\t *\n\t * @param {*} value\n\t * @public\n\t */\n\t\n\tDirective.prototype.set = function (value) {\n\t  /* istanbul ignore else */\n\t  if (this.twoWay) {\n\t    this._withLock(function () {\n\t      this._watcher.set(value);\n\t    });\n\t  } else if (false) {\n\t    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n\t  }\n\t};\n\t\n\t/**\n\t * Execute a function while preventing that function from\n\t * triggering updates on this directive instance.\n\t *\n\t * @param {Function} fn\n\t */\n\t\n\tDirective.prototype._withLock = function (fn) {\n\t  var self = this;\n\t  self._locked = true;\n\t  fn.call(self);\n\t  nextTick(function () {\n\t    self._locked = false;\n\t  });\n\t};\n\t\n\t/**\n\t * Convenience method that attaches a DOM event listener\n\t * to the directive element and autometically tears it down\n\t * during unbind.\n\t *\n\t * @param {String} event\n\t * @param {Function} handler\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tDirective.prototype.on = function (event, handler, useCapture) {\n\t  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n\t};\n\t\n\t/**\n\t * Teardown the watcher and call unbind.\n\t */\n\t\n\tDirective.prototype._teardown = function () {\n\t  if (this._bound) {\n\t    this._bound = false;\n\t    if (this.unbind) {\n\t      this.unbind();\n\t    }\n\t    if (this._watcher) {\n\t      this._watcher.teardown();\n\t    }\n\t    var listeners = this._listeners;\n\t    var i;\n\t    if (listeners) {\n\t      i = listeners.length;\n\t      while (i--) {\n\t        off(this.el, listeners[i][0], listeners[i][1]);\n\t      }\n\t    }\n\t    var unwatchFns = this._paramUnwatchFns;\n\t    if (unwatchFns) {\n\t      i = unwatchFns.length;\n\t      while (i--) {\n\t        unwatchFns[i]();\n\t      }\n\t    }\n\t    if (false) {\n\t      this.el._vue_directives.$remove(this);\n\t    }\n\t    this.vm = this.el = this._watcher = this._listeners = null;\n\t  }\n\t};\n\t\n\tfunction lifecycleMixin (Vue) {\n\t  /**\n\t   * Update v-ref for component.\n\t   *\n\t   * @param {Boolean} remove\n\t   */\n\t\n\t  Vue.prototype._updateRef = function (remove) {\n\t    var ref = this.$options._ref;\n\t    if (ref) {\n\t      var refs = (this._scope || this._context).$refs;\n\t      if (remove) {\n\t        if (refs[ref] === this) {\n\t          refs[ref] = null;\n\t        }\n\t      } else {\n\t        refs[ref] = this;\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Transclude, compile and link element.\n\t   *\n\t   * If a pre-compiled linker is available, that means the\n\t   * passed in element will be pre-transcluded and compiled\n\t   * as well - all we need to do is to call the linker.\n\t   *\n\t   * Otherwise we need to call transclude/compile/link here.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._compile = function (el) {\n\t    var options = this.$options;\n\t\n\t    // transclude and init element\n\t    // transclude can potentially replace original\n\t    // so we need to keep reference; this step also injects\n\t    // the template and caches the original attributes\n\t    // on the container node and replacer node.\n\t    var original = el;\n\t    el = transclude(el, options);\n\t    this._initElement(el);\n\t\n\t    // handle v-pre on root node (#2026)\n\t    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n\t      return;\n\t    }\n\t\n\t    // root is always compiled per-instance, because\n\t    // container attrs and props can be different every time.\n\t    var contextOptions = this._context && this._context.$options;\n\t    var rootLinker = compileRoot(el, options, contextOptions);\n\t\n\t    // resolve slot distribution\n\t    resolveSlots(this, options._content);\n\t\n\t    // compile and link the rest\n\t    var contentLinkFn;\n\t    var ctor = this.constructor;\n\t    // component compilation can be cached\n\t    // as long as it's not using inline-template\n\t    if (options._linkerCachable) {\n\t      contentLinkFn = ctor.linker;\n\t      if (!contentLinkFn) {\n\t        contentLinkFn = ctor.linker = compile(el, options);\n\t      }\n\t    }\n\t\n\t    // link phase\n\t    // make sure to link root with prop scope!\n\t    var rootUnlinkFn = rootLinker(this, el, this._scope);\n\t    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\t\n\t    // register composite unlink function\n\t    // to be called during instance destruction\n\t    this._unlinkFn = function () {\n\t      rootUnlinkFn();\n\t      // passing destroying: true to avoid searching and\n\t      // splicing the directives\n\t      contentUnlinkFn(true);\n\t    };\n\t\n\t    // finally replace original\n\t    if (options.replace) {\n\t      replace(original, el);\n\t    }\n\t\n\t    this._isCompiled = true;\n\t    this._callHook('compiled');\n\t  };\n\t\n\t  /**\n\t   * Initialize instance element. Called in the public\n\t   * $mount() method.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._initElement = function (el) {\n\t    if (isFragment(el)) {\n\t      this._isFragment = true;\n\t      this.$el = this._fragmentStart = el.firstChild;\n\t      this._fragmentEnd = el.lastChild;\n\t      // set persisted text anchors to empty\n\t      if (this._fragmentStart.nodeType === 3) {\n\t        this._fragmentStart.data = this._fragmentEnd.data = '';\n\t      }\n\t      this._fragment = el;\n\t    } else {\n\t      this.$el = el;\n\t    }\n\t    this.$el.__vue__ = this;\n\t    this._callHook('beforeCompile');\n\t  };\n\t\n\t  /**\n\t   * Create and bind a directive to an element.\n\t   *\n\t   * @param {Object} descriptor - parsed directive descriptor\n\t   * @param {Node} node   - target node\n\t   * @param {Vue} [host] - transclusion host component\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - owner fragment\n\t   */\n\t\n\t  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n\t    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n\t  };\n\t\n\t  /**\n\t   * Teardown an instance, unobserves the data, unbind all the\n\t   * directives, turn off all the event listeners, etc.\n\t   *\n\t   * @param {Boolean} remove - whether to remove the DOM node.\n\t   * @param {Boolean} deferCleanup - if true, defer cleanup to\n\t   *                                 be called later\n\t   */\n\t\n\t  Vue.prototype._destroy = function (remove, deferCleanup) {\n\t    if (this._isBeingDestroyed) {\n\t      if (!deferCleanup) {\n\t        this._cleanup();\n\t      }\n\t      return;\n\t    }\n\t\n\t    var destroyReady;\n\t    var pendingRemoval;\n\t\n\t    var self = this;\n\t    // Cleanup should be called either synchronously or asynchronoysly as\n\t    // callback of this.$remove(), or if remove and deferCleanup are false.\n\t    // In any case it should be called after all other removing, unbinding and\n\t    // turning of is done\n\t    var cleanupIfPossible = function cleanupIfPossible() {\n\t      if (destroyReady && !pendingRemoval && !deferCleanup) {\n\t        self._cleanup();\n\t      }\n\t    };\n\t\n\t    // remove DOM element\n\t    if (remove && this.$el) {\n\t      pendingRemoval = true;\n\t      this.$remove(function () {\n\t        pendingRemoval = false;\n\t        cleanupIfPossible();\n\t      });\n\t    }\n\t\n\t    this._callHook('beforeDestroy');\n\t    this._isBeingDestroyed = true;\n\t    var i;\n\t    // remove self from parent. only necessary\n\t    // if parent is not being destroyed as well.\n\t    var parent = this.$parent;\n\t    if (parent && !parent._isBeingDestroyed) {\n\t      parent.$children.$remove(this);\n\t      // unregister ref (remove: true)\n\t      this._updateRef(true);\n\t    }\n\t    // destroy all children.\n\t    i = this.$children.length;\n\t    while (i--) {\n\t      this.$children[i].$destroy();\n\t    }\n\t    // teardown props\n\t    if (this._propsUnlinkFn) {\n\t      this._propsUnlinkFn();\n\t    }\n\t    // teardown all directives. this also tearsdown all\n\t    // directive-owned watchers.\n\t    if (this._unlinkFn) {\n\t      this._unlinkFn();\n\t    }\n\t    i = this._watchers.length;\n\t    while (i--) {\n\t      this._watchers[i].teardown();\n\t    }\n\t    // remove reference to self on $el\n\t    if (this.$el) {\n\t      this.$el.__vue__ = null;\n\t    }\n\t\n\t    destroyReady = true;\n\t    cleanupIfPossible();\n\t  };\n\t\n\t  /**\n\t   * Clean up to ensure garbage collection.\n\t   * This is called after the leave transition if there\n\t   * is any.\n\t   */\n\t\n\t  Vue.prototype._cleanup = function () {\n\t    if (this._isDestroyed) {\n\t      return;\n\t    }\n\t    // remove self from owner fragment\n\t    // do it in cleanup so that we can call $destroy with\n\t    // defer right when a fragment is about to be removed.\n\t    if (this._frag) {\n\t      this._frag.children.$remove(this);\n\t    }\n\t    // remove reference from data ob\n\t    // frozen object may not have observer.\n\t    if (this._data && this._data.__ob__) {\n\t      this._data.__ob__.removeVm(this);\n\t    }\n\t    // Clean up references to private properties and other\n\t    // instances. preserve reference to _data so that proxy\n\t    // accessors still work. The only potential side effect\n\t    // here is that mutating the instance after it's destroyed\n\t    // may affect the state of other components that are still\n\t    // observing the same object, but that seems to be a\n\t    // reasonable responsibility for the user rather than\n\t    // always throwing an error on them.\n\t    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n\t    // call the last hook...\n\t    this._isDestroyed = true;\n\t    this._callHook('destroyed');\n\t    // turn off all instance listeners.\n\t    this.$off();\n\t  };\n\t}\n\t\n\tfunction miscMixin (Vue) {\n\t  /**\n\t   * Apply a list of filter (descriptors) to a value.\n\t   * Using plain for loops here because this will be called in\n\t   * the getter of any watcher with filters so it is very\n\t   * performance sensitive.\n\t   *\n\t   * @param {*} value\n\t   * @param {*} [oldValue]\n\t   * @param {Array} filters\n\t   * @param {Boolean} write\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n\t    var filter, fn, args, arg, offset, i, l, j, k;\n\t    for (i = 0, l = filters.length; i < l; i++) {\n\t      filter = filters[write ? l - i - 1 : i];\n\t      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n\t      if (!fn) continue;\n\t      fn = write ? fn.write : fn.read || fn;\n\t      if (typeof fn !== 'function') continue;\n\t      args = write ? [value, oldValue] : [value];\n\t      offset = write ? 2 : 1;\n\t      if (filter.args) {\n\t        for (j = 0, k = filter.args.length; j < k; j++) {\n\t          arg = filter.args[j];\n\t          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n\t        }\n\t      }\n\t      value = fn.apply(this, args);\n\t    }\n\t    return value;\n\t  };\n\t\n\t  /**\n\t   * Resolve a component, depending on whether the component\n\t   * is defined normally or using an async factory function.\n\t   * Resolves synchronously if already resolved, otherwise\n\t   * resolves asynchronously and caches the resolved\n\t   * constructor on the factory.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  Vue.prototype._resolveComponent = function (value, cb) {\n\t    var factory;\n\t    if (typeof value === 'function') {\n\t      factory = value;\n\t    } else {\n\t      factory = resolveAsset(this.$options, 'components', value, true);\n\t    }\n\t    /* istanbul ignore if */\n\t    if (!factory) {\n\t      return;\n\t    }\n\t    // async component factory\n\t    if (!factory.options) {\n\t      if (factory.resolved) {\n\t        // cached\n\t        cb(factory.resolved);\n\t      } else if (factory.requested) {\n\t        // pool callbacks\n\t        factory.pendingCallbacks.push(cb);\n\t      } else {\n\t        factory.requested = true;\n\t        var cbs = factory.pendingCallbacks = [cb];\n\t        factory.call(this, function resolve(res) {\n\t          if (isPlainObject(res)) {\n\t            res = Vue.extend(res);\n\t          }\n\t          // cache resolved\n\t          factory.resolved = res;\n\t          // invoke callbacks\n\t          for (var i = 0, l = cbs.length; i < l; i++) {\n\t            cbs[i](res);\n\t          }\n\t        }, function reject(reason) {\n\t          (\"production\") !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n\t        });\n\t      }\n\t    } else {\n\t      // normal component\n\t      cb(factory);\n\t    }\n\t  };\n\t}\n\t\n\tvar filterRE$1 = /[^|]\\|[^|]/;\n\t\n\tfunction dataAPI (Vue) {\n\t  /**\n\t   * Get the value from an expression on this vm.\n\t   *\n\t   * @param {String} exp\n\t   * @param {Boolean} [asStatement]\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype.$get = function (exp, asStatement) {\n\t    var res = parseExpression(exp);\n\t    if (res) {\n\t      if (asStatement) {\n\t        var self = this;\n\t        return function statementHandler() {\n\t          self.$arguments = toArray(arguments);\n\t          var result = res.get.call(self, self);\n\t          self.$arguments = null;\n\t          return result;\n\t        };\n\t      } else {\n\t        try {\n\t          return res.get.call(this, this);\n\t        } catch (e) {}\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Set the value from an expression on this vm.\n\t   * The expression must be a valid left-hand\n\t   * expression in an assignment.\n\t   *\n\t   * @param {String} exp\n\t   * @param {*} val\n\t   */\n\t\n\t  Vue.prototype.$set = function (exp, val) {\n\t    var res = parseExpression(exp, true);\n\t    if (res && res.set) {\n\t      res.set.call(this, this, val);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Delete a property on the VM\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype.$delete = function (key) {\n\t    del(this._data, key);\n\t  };\n\t\n\t  /**\n\t   * Watch an expression, trigger callback when its\n\t   * value changes.\n\t   *\n\t   * @param {String|Function} expOrFn\n\t   * @param {Function} cb\n\t   * @param {Object} [options]\n\t   *                 - {Boolean} deep\n\t   *                 - {Boolean} immediate\n\t   * @return {Function} - unwatchFn\n\t   */\n\t\n\t  Vue.prototype.$watch = function (expOrFn, cb, options) {\n\t    var vm = this;\n\t    var parsed;\n\t    if (typeof expOrFn === 'string') {\n\t      parsed = parseDirective(expOrFn);\n\t      expOrFn = parsed.expression;\n\t    }\n\t    var watcher = new Watcher(vm, expOrFn, cb, {\n\t      deep: options && options.deep,\n\t      sync: options && options.sync,\n\t      filters: parsed && parsed.filters,\n\t      user: !options || options.user !== false\n\t    });\n\t    if (options && options.immediate) {\n\t      cb.call(vm, watcher.value);\n\t    }\n\t    return function unwatchFn() {\n\t      watcher.teardown();\n\t    };\n\t  };\n\t\n\t  /**\n\t   * Evaluate a text directive, including filters.\n\t   *\n\t   * @param {String} text\n\t   * @param {Boolean} [asStatement]\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$eval = function (text, asStatement) {\n\t    // check for filters.\n\t    if (filterRE$1.test(text)) {\n\t      var dir = parseDirective(text);\n\t      // the filter regex check might give false positive\n\t      // for pipes inside strings, so it's possible that\n\t      // we don't get any filters here\n\t      var val = this.$get(dir.expression, asStatement);\n\t      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n\t    } else {\n\t      // no filter\n\t      return this.$get(text, asStatement);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Interpolate a piece of template text.\n\t   *\n\t   * @param {String} text\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$interpolate = function (text) {\n\t    var tokens = parseText(text);\n\t    var vm = this;\n\t    if (tokens) {\n\t      if (tokens.length === 1) {\n\t        return vm.$eval(tokens[0].value) + '';\n\t      } else {\n\t        return tokens.map(function (token) {\n\t          return token.tag ? vm.$eval(token.value) : token.value;\n\t        }).join('');\n\t      }\n\t    } else {\n\t      return text;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Log instance data as a plain JS object\n\t   * so that it is easier to inspect in console.\n\t   * This method assumes console is available.\n\t   *\n\t   * @param {String} [path]\n\t   */\n\t\n\t  Vue.prototype.$log = function (path) {\n\t    var data = path ? getPath(this._data, path) : this._data;\n\t    if (data) {\n\t      data = clean(data);\n\t    }\n\t    // include computed fields\n\t    if (!path) {\n\t      var key;\n\t      for (key in this.$options.computed) {\n\t        data[key] = clean(this[key]);\n\t      }\n\t      if (this._props) {\n\t        for (key in this._props) {\n\t          data[key] = clean(this[key]);\n\t        }\n\t      }\n\t    }\n\t    console.log(data);\n\t  };\n\t\n\t  /**\n\t   * \"clean\" a getter/setter converted object into a plain\n\t   * object copy.\n\t   *\n\t   * @param {Object} - obj\n\t   * @return {Object}\n\t   */\n\t\n\t  function clean(obj) {\n\t    return JSON.parse(JSON.stringify(obj));\n\t  }\n\t}\n\t\n\tfunction domAPI (Vue) {\n\t  /**\n\t   * Convenience on-instance nextTick. The callback is\n\t   * auto-bound to the instance, and this avoids component\n\t   * modules having to rely on the global Vue.\n\t   *\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$nextTick = function (fn) {\n\t    nextTick(fn, this);\n\t  };\n\t\n\t  /**\n\t   * Append instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, append, appendWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Prepend instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.hasChildNodes()) {\n\t      this.$before(target.firstChild, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Insert instance before target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$before = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Insert instance after target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$after = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.nextSibling) {\n\t      this.$before(target.nextSibling, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target.parentNode, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove instance from DOM\n\t   *\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$remove = function (cb, withTransition) {\n\t    if (!this.$el.parentNode) {\n\t      return cb && cb();\n\t    }\n\t    var inDocument = this._isAttached && inDoc(this.$el);\n\t    // if we are not in document, no need to check\n\t    // for transitions\n\t    if (!inDocument) withTransition = false;\n\t    var self = this;\n\t    var realCb = function realCb() {\n\t      if (inDocument) self._callHook('detached');\n\t      if (cb) cb();\n\t    };\n\t    if (this._isFragment) {\n\t      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n\t    } else {\n\t      var op = withTransition === false ? removeWithCb : removeWithTransition;\n\t      op(this.$el, this, realCb);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Shared DOM insertion function.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition]\n\t   * @param {Function} op1 - op for non-transition insert\n\t   * @param {Function} op2 - op for transition insert\n\t   * @return vm\n\t   */\n\t\n\t  function insert(vm, target, cb, withTransition, op1, op2) {\n\t    target = query(target);\n\t    var targetIsDetached = !inDoc(target);\n\t    var op = withTransition === false || targetIsDetached ? op1 : op2;\n\t    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n\t    if (vm._isFragment) {\n\t      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n\t        op(node, target, vm);\n\t      });\n\t      cb && cb();\n\t    } else {\n\t      op(vm.$el, target, vm, cb);\n\t    }\n\t    if (shouldCallHook) {\n\t      vm._callHook('attached');\n\t    }\n\t    return vm;\n\t  }\n\t\n\t  /**\n\t   * Check for selectors\n\t   *\n\t   * @param {String|Element} el\n\t   */\n\t\n\t  function query(el) {\n\t    return typeof el === 'string' ? document.querySelector(el) : el;\n\t  }\n\t\n\t  /**\n\t   * Append operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function append(el, target, vm, cb) {\n\t    target.appendChild(el);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * InsertBefore operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function beforeWithCb(el, target, vm, cb) {\n\t    before(el, target);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * Remove operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function removeWithCb(el, vm, cb) {\n\t    remove(el);\n\t    if (cb) cb();\n\t  }\n\t}\n\t\n\tfunction eventsAPI (Vue) {\n\t  /**\n\t   * Listen on the given `event` with `fn`.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$on = function (event, fn) {\n\t    (this._events[event] || (this._events[event] = [])).push(fn);\n\t    modifyListenerCount(this, event, 1);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Adds an `event` listener that will be invoked a single\n\t   * time then automatically removed.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$once = function (event, fn) {\n\t    var self = this;\n\t    function on() {\n\t      self.$off(event, on);\n\t      fn.apply(this, arguments);\n\t    }\n\t    on.fn = fn;\n\t    this.$on(event, on);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove the given callback for `event` or all\n\t   * registered callbacks.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$off = function (event, fn) {\n\t    var cbs;\n\t    // all\n\t    if (!arguments.length) {\n\t      if (this.$parent) {\n\t        for (event in this._events) {\n\t          cbs = this._events[event];\n\t          if (cbs) {\n\t            modifyListenerCount(this, event, -cbs.length);\n\t          }\n\t        }\n\t      }\n\t      this._events = {};\n\t      return this;\n\t    }\n\t    // specific event\n\t    cbs = this._events[event];\n\t    if (!cbs) {\n\t      return this;\n\t    }\n\t    if (arguments.length === 1) {\n\t      modifyListenerCount(this, event, -cbs.length);\n\t      this._events[event] = null;\n\t      return this;\n\t    }\n\t    // specific handler\n\t    var cb;\n\t    var i = cbs.length;\n\t    while (i--) {\n\t      cb = cbs[i];\n\t      if (cb === fn || cb.fn === fn) {\n\t        modifyListenerCount(this, event, -1);\n\t        cbs.splice(i, 1);\n\t        break;\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Trigger an event on self.\n\t   *\n\t   * @param {String|Object} event\n\t   * @return {Boolean} shouldPropagate\n\t   */\n\t\n\t  Vue.prototype.$emit = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    var cbs = this._events[event];\n\t    var shouldPropagate = isSource || !cbs;\n\t    if (cbs) {\n\t      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n\t      // this is a somewhat hacky solution to the question raised\n\t      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n\t      // the propagation handling is somewhat broken. Therefore we\n\t      // need to treat these inline callbacks differently.\n\t      var hasParentCbs = isSource && cbs.some(function (cb) {\n\t        return cb._fromParent;\n\t      });\n\t      if (hasParentCbs) {\n\t        shouldPropagate = false;\n\t      }\n\t      var args = toArray(arguments, 1);\n\t      for (var i = 0, l = cbs.length; i < l; i++) {\n\t        var cb = cbs[i];\n\t        var res = cb.apply(this, args);\n\t        if (res === true && (!hasParentCbs || cb._fromParent)) {\n\t          shouldPropagate = true;\n\t        }\n\t      }\n\t    }\n\t    return shouldPropagate;\n\t  };\n\t\n\t  /**\n\t   * Recursively broadcast an event to all children instances.\n\t   *\n\t   * @param {String|Object} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$broadcast = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    // if no child has registered for this event,\n\t    // then there's no need to broadcast.\n\t    if (!this._eventsCount[event]) return;\n\t    var children = this.$children;\n\t    var args = toArray(arguments);\n\t    if (isSource) {\n\t      // use object event to indicate non-source emit\n\t      // on children\n\t      args[0] = { name: event, source: this };\n\t    }\n\t    for (var i = 0, l = children.length; i < l; i++) {\n\t      var child = children[i];\n\t      var shouldPropagate = child.$emit.apply(child, args);\n\t      if (shouldPropagate) {\n\t        child.$broadcast.apply(child, args);\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Recursively propagate an event up the parent chain.\n\t   *\n\t   * @param {String} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$dispatch = function (event) {\n\t    var shouldPropagate = this.$emit.apply(this, arguments);\n\t    if (!shouldPropagate) return;\n\t    var parent = this.$parent;\n\t    var args = toArray(arguments);\n\t    // use object event to indicate non-source emit\n\t    // on parents\n\t    args[0] = { name: event, source: this };\n\t    while (parent) {\n\t      shouldPropagate = parent.$emit.apply(parent, args);\n\t      parent = shouldPropagate ? parent.$parent : null;\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Modify the listener counts on all parents.\n\t   * This bookkeeping allows $broadcast to return early when\n\t   * no child has listened to a certain event.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} event\n\t   * @param {Number} count\n\t   */\n\t\n\t  var hookRE = /^hook:/;\n\t  function modifyListenerCount(vm, event, count) {\n\t    var parent = vm.$parent;\n\t    // hooks do not get broadcasted so no need\n\t    // to do bookkeeping for them\n\t    if (!parent || !count || hookRE.test(event)) return;\n\t    while (parent) {\n\t      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n\t      parent = parent.$parent;\n\t    }\n\t  }\n\t}\n\t\n\tfunction lifecycleAPI (Vue) {\n\t  /**\n\t   * Set instance target element and kick off the compilation\n\t   * process. The passed in `el` can be a selector string, an\n\t   * existing Element, or a DocumentFragment (for block\n\t   * instances).\n\t   *\n\t   * @param {Element|DocumentFragment|string} el\n\t   * @public\n\t   */\n\t\n\t  Vue.prototype.$mount = function (el) {\n\t    if (this._isCompiled) {\n\t      (\"production\") !== 'production' && warn('$mount() should be called only once.', this);\n\t      return;\n\t    }\n\t    el = query(el);\n\t    if (!el) {\n\t      el = document.createElement('div');\n\t    }\n\t    this._compile(el);\n\t    this._initDOMHooks();\n\t    if (inDoc(this.$el)) {\n\t      this._callHook('attached');\n\t      ready.call(this);\n\t    } else {\n\t      this.$once('hook:attached', ready);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Mark an instance as ready.\n\t   */\n\t\n\t  function ready() {\n\t    this._isAttached = true;\n\t    this._isReady = true;\n\t    this._callHook('ready');\n\t  }\n\t\n\t  /**\n\t   * Teardown the instance, simply delegate to the internal\n\t   * _destroy.\n\t   *\n\t   * @param {Boolean} remove\n\t   * @param {Boolean} deferCleanup\n\t   */\n\t\n\t  Vue.prototype.$destroy = function (remove, deferCleanup) {\n\t    this._destroy(remove, deferCleanup);\n\t  };\n\t\n\t  /**\n\t   * Partially compile a piece of DOM and return a\n\t   * decompile function.\n\t   *\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host]\n\t   * @param {Object} [scope]\n\t   * @param {Fragment} [frag]\n\t   * @return {Function}\n\t   */\n\t\n\t  Vue.prototype.$compile = function (el, host, scope, frag) {\n\t    return compile(el, this.$options, true)(this, el, host, scope, frag);\n\t  };\n\t}\n\t\n\t/**\n\t * The exposed Vue constructor.\n\t *\n\t * API conventions:\n\t * - public API methods/properties are prefixed with `$`\n\t * - internal methods/properties are prefixed with `_`\n\t * - non-prefixed properties are assumed to be proxied user\n\t *   data.\n\t *\n\t * @constructor\n\t * @param {Object} [options]\n\t * @public\n\t */\n\t\n\tfunction Vue(options) {\n\t  this._init(options);\n\t}\n\t\n\t// install internals\n\tinitMixin(Vue);\n\tstateMixin(Vue);\n\teventsMixin(Vue);\n\tlifecycleMixin(Vue);\n\tmiscMixin(Vue);\n\t\n\t// install instance APIs\n\tdataAPI(Vue);\n\tdomAPI(Vue);\n\teventsAPI(Vue);\n\tlifecycleAPI(Vue);\n\t\n\tvar slot = {\n\t\n\t  priority: SLOT,\n\t  params: ['name'],\n\t\n\t  bind: function bind() {\n\t    // this was resolved during component transclusion\n\t    var name = this.params.name || 'default';\n\t    var content = this.vm._slotContents && this.vm._slotContents[name];\n\t    if (!content || !content.hasChildNodes()) {\n\t      this.fallback();\n\t    } else {\n\t      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n\t    }\n\t  },\n\t\n\t  compile: function compile(content, context, host) {\n\t    if (content && context) {\n\t      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n\t        // if the inserted slot has v-if\n\t        // inject fallback content as the v-else\n\t        var elseBlock = document.createElement('template');\n\t        elseBlock.setAttribute('v-else', '');\n\t        elseBlock.innerHTML = this.el.innerHTML;\n\t        // the else block should be compiled in child scope\n\t        elseBlock._context = this.vm;\n\t        content.appendChild(elseBlock);\n\t      }\n\t      var scope = host ? host._scope : this._scope;\n\t      this.unlink = context.$compile(content, host, scope, this._frag);\n\t    }\n\t    if (content) {\n\t      replace(this.el, content);\n\t    } else {\n\t      remove(this.el);\n\t    }\n\t  },\n\t\n\t  fallback: function fallback() {\n\t    this.compile(extractContent(this.el, true), this.vm);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.unlink) {\n\t      this.unlink();\n\t    }\n\t  }\n\t};\n\t\n\tvar partial = {\n\t\n\t  priority: PARTIAL,\n\t\n\t  params: ['name'],\n\t\n\t  // watch changes to name for dynamic partials\n\t  paramWatchers: {\n\t    name: function name(value) {\n\t      vIf.remove.call(this);\n\t      if (value) {\n\t        this.insert(value);\n\t      }\n\t    }\n\t  },\n\t\n\t  bind: function bind() {\n\t    this.anchor = createAnchor('v-partial');\n\t    replace(this.el, this.anchor);\n\t    this.insert(this.params.name);\n\t  },\n\t\n\t  insert: function insert(id) {\n\t    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n\t    if (partial) {\n\t      this.factory = new FragmentFactory(this.vm, partial);\n\t      vIf.insert.call(this);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar elementDirectives = {\n\t  slot: slot,\n\t  partial: partial\n\t};\n\t\n\tvar convertArray = vFor._postProcess;\n\t\n\t/**\n\t * Limit filter for arrays\n\t *\n\t * @param {Number} n\n\t * @param {Number} offset (Decimal expected)\n\t */\n\t\n\tfunction limitBy(arr, n, offset) {\n\t  offset = offset ? parseInt(offset, 10) : 0;\n\t  n = toNumber(n);\n\t  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String} search\n\t * @param {String} [delimiter]\n\t * @param {String} ...dataKeys\n\t */\n\t\n\tfunction filterBy(arr, search, delimiter) {\n\t  arr = convertArray(arr);\n\t  if (search == null) {\n\t    return arr;\n\t  }\n\t  if (typeof search === 'function') {\n\t    return arr.filter(search);\n\t  }\n\t  // cast to lowercase string\n\t  search = ('' + search).toLowerCase();\n\t  // allow optional `in` delimiter\n\t  // because why not\n\t  var n = delimiter === 'in' ? 3 : 2;\n\t  // extract and flatten keys\n\t  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n\t  var res = [];\n\t  var item, key, val, j;\n\t  for (var i = 0, l = arr.length; i < l; i++) {\n\t    item = arr[i];\n\t    val = item && item.$value || item;\n\t    j = keys.length;\n\t    if (j) {\n\t      while (j--) {\n\t        key = keys[j];\n\t        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n\t          res.push(item);\n\t          break;\n\t        }\n\t      }\n\t    } else if (contains(item, search)) {\n\t      res.push(item);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String|Array<String>|Function} ...sortKeys\n\t * @param {Number} [order]\n\t */\n\t\n\tfunction orderBy(arr) {\n\t  var comparator = null;\n\t  var sortKeys = undefined;\n\t  arr = convertArray(arr);\n\t\n\t  // determine order (last argument)\n\t  var args = toArray(arguments, 1);\n\t  var order = args[args.length - 1];\n\t  if (typeof order === 'number') {\n\t    order = order < 0 ? -1 : 1;\n\t    args = args.length > 1 ? args.slice(0, -1) : args;\n\t  } else {\n\t    order = 1;\n\t  }\n\t\n\t  // determine sortKeys & comparator\n\t  var firstArg = args[0];\n\t  if (!firstArg) {\n\t    return arr;\n\t  } else if (typeof firstArg === 'function') {\n\t    // custom comparator\n\t    comparator = function (a, b) {\n\t      return firstArg(a, b) * order;\n\t    };\n\t  } else {\n\t    // string keys. flatten first\n\t    sortKeys = Array.prototype.concat.apply([], args);\n\t    comparator = function (a, b, i) {\n\t      i = i || 0;\n\t      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n\t    };\n\t  }\n\t\n\t  function baseCompare(a, b, sortKeyIndex) {\n\t    var sortKey = sortKeys[sortKeyIndex];\n\t    if (sortKey) {\n\t      if (sortKey !== '$key') {\n\t        if (isObject(a) && '$value' in a) a = a.$value;\n\t        if (isObject(b) && '$value' in b) b = b.$value;\n\t      }\n\t      a = isObject(a) ? getPath(a, sortKey) : a;\n\t      b = isObject(b) ? getPath(b, sortKey) : b;\n\t    }\n\t    return a === b ? 0 : a > b ? order : -order;\n\t  }\n\t\n\t  // sort on a copy to avoid mutating original array\n\t  return arr.slice().sort(comparator);\n\t}\n\t\n\t/**\n\t * String contain helper\n\t *\n\t * @param {*} val\n\t * @param {String} search\n\t */\n\t\n\tfunction contains(val, search) {\n\t  var i;\n\t  if (isPlainObject(val)) {\n\t    var keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) {\n\t      if (contains(val[keys[i]], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) {\n\t      if (contains(val[i], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (val != null) {\n\t    return val.toString().toLowerCase().indexOf(search) > -1;\n\t  }\n\t}\n\t\n\tvar digitsRE = /(\\d{3})(?=\\d)/g;\n\t\n\t// asset collections must be a plain object.\n\tvar filters = {\n\t\n\t  orderBy: orderBy,\n\t  filterBy: filterBy,\n\t  limitBy: limitBy,\n\t\n\t  /**\n\t   * Stringify value.\n\t   *\n\t   * @param {Number} indent\n\t   */\n\t\n\t  json: {\n\t    read: function read(value, indent) {\n\t      return typeof value === 'string' ? value : JSON.stringify(value, null, arguments.length > 1 ? indent : 2);\n\t    },\n\t    write: function write(value) {\n\t      try {\n\t        return JSON.parse(value);\n\t      } catch (e) {\n\t        return value;\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'Abc'\n\t   */\n\t\n\t  capitalize: function capitalize(value) {\n\t    if (!value && value !== 0) return '';\n\t    value = value.toString();\n\t    return value.charAt(0).toUpperCase() + value.slice(1);\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'ABC'\n\t   */\n\t\n\t  uppercase: function uppercase(value) {\n\t    return value || value === 0 ? value.toString().toUpperCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 'AbC' => 'abc'\n\t   */\n\t\n\t  lowercase: function lowercase(value) {\n\t    return value || value === 0 ? value.toString().toLowerCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 12345 => $12,345.00\n\t   *\n\t   * @param {String} sign\n\t   * @param {Number} decimals Decimal places\n\t   */\n\t\n\t  currency: function currency(value, _currency, decimals) {\n\t    value = parseFloat(value);\n\t    if (!isFinite(value) || !value && value !== 0) return '';\n\t    _currency = _currency != null ? _currency : '$';\n\t    decimals = decimals != null ? decimals : 2;\n\t    var stringified = Math.abs(value).toFixed(decimals);\n\t    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n\t    var i = _int.length % 3;\n\t    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n\t    var _float = decimals ? stringified.slice(-1 - decimals) : '';\n\t    var sign = value < 0 ? '-' : '';\n\t    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n\t  },\n\t\n\t  /**\n\t   * 'item' => 'items'\n\t   *\n\t   * @params\n\t   *  an array of strings corresponding to\n\t   *  the single, double, triple ... forms of the word to\n\t   *  be pluralized. When the number to be pluralized\n\t   *  exceeds the length of the args, it will use the last\n\t   *  entry in the array.\n\t   *\n\t   *  e.g. ['single', 'double', 'triple', 'multiple']\n\t   */\n\t\n\t  pluralize: function pluralize(value) {\n\t    var args = toArray(arguments, 1);\n\t    var length = args.length;\n\t    if (length > 1) {\n\t      var index = value % 10 - 1;\n\t      return index in args ? args[index] : args[length - 1];\n\t    } else {\n\t      return args[0] + (value === 1 ? '' : 's');\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Debounce a handler function.\n\t   *\n\t   * @param {Function} handler\n\t   * @param {Number} delay = 300\n\t   * @return {Function}\n\t   */\n\t\n\t  debounce: function debounce(handler, delay) {\n\t    if (!handler) return;\n\t    if (!delay) {\n\t      delay = 300;\n\t    }\n\t    return _debounce(handler, delay);\n\t  }\n\t};\n\t\n\tfunction installGlobalAPI (Vue) {\n\t  /**\n\t   * Vue and every constructor that extends Vue has an\n\t   * associated options object, which can be accessed during\n\t   * compilation steps as `this.constructor.options`.\n\t   *\n\t   * These can be seen as the default options of every\n\t   * Vue instance.\n\t   */\n\t\n\t  Vue.options = {\n\t    directives: directives,\n\t    elementDirectives: elementDirectives,\n\t    filters: filters,\n\t    transitions: {},\n\t    components: {},\n\t    partials: {},\n\t    replace: true\n\t  };\n\t\n\t  /**\n\t   * Expose useful internals\n\t   */\n\t\n\t  Vue.util = util;\n\t  Vue.config = config;\n\t  Vue.set = set;\n\t  Vue['delete'] = del;\n\t  Vue.nextTick = nextTick;\n\t\n\t  /**\n\t   * The following are exposed for advanced usage / plugins\n\t   */\n\t\n\t  Vue.compiler = compiler;\n\t  Vue.FragmentFactory = FragmentFactory;\n\t  Vue.internalDirectives = internalDirectives;\n\t  Vue.parsers = {\n\t    path: path,\n\t    text: text,\n\t    template: template,\n\t    directive: directive,\n\t    expression: expression\n\t  };\n\t\n\t  /**\n\t   * Each instance constructor, including Vue, has a unique\n\t   * cid. This enables us to create wrapped \"child\n\t   * constructors\" for prototypal inheritance and cache them.\n\t   */\n\t\n\t  Vue.cid = 0;\n\t  var cid = 1;\n\t\n\t  /**\n\t   * Class inheritance\n\t   *\n\t   * @param {Object} extendOptions\n\t   */\n\t\n\t  Vue.extend = function (extendOptions) {\n\t    extendOptions = extendOptions || {};\n\t    var Super = this;\n\t    var isFirstExtend = Super.cid === 0;\n\t    if (isFirstExtend && extendOptions._Ctor) {\n\t      return extendOptions._Ctor;\n\t    }\n\t    var name = extendOptions.name || Super.options.name;\n\t    if (false) {\n\t      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n\t        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n\t        name = null;\n\t      }\n\t    }\n\t    var Sub = createClass(name || 'VueComponent');\n\t    Sub.prototype = Object.create(Super.prototype);\n\t    Sub.prototype.constructor = Sub;\n\t    Sub.cid = cid++;\n\t    Sub.options = mergeOptions(Super.options, extendOptions);\n\t    Sub['super'] = Super;\n\t    // allow further extension\n\t    Sub.extend = Super.extend;\n\t    // create asset registers, so extended classes\n\t    // can have their private assets too.\n\t    config._assetTypes.forEach(function (type) {\n\t      Sub[type] = Super[type];\n\t    });\n\t    // enable recursive self-lookup\n\t    if (name) {\n\t      Sub.options.components[name] = Sub;\n\t    }\n\t    // cache constructor\n\t    if (isFirstExtend) {\n\t      extendOptions._Ctor = Sub;\n\t    }\n\t    return Sub;\n\t  };\n\t\n\t  /**\n\t   * A function that returns a sub-class constructor with the\n\t   * given name. This gives us much nicer output when\n\t   * logging instances in the console.\n\t   *\n\t   * @param {String} name\n\t   * @return {Function}\n\t   */\n\t\n\t  function createClass(name) {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n\t    /* eslint-enable no-new-func */\n\t  }\n\t\n\t  /**\n\t   * Plugin system\n\t   *\n\t   * @param {Object} plugin\n\t   */\n\t\n\t  Vue.use = function (plugin) {\n\t    /* istanbul ignore if */\n\t    if (plugin.installed) {\n\t      return;\n\t    }\n\t    // additional parameters\n\t    var args = toArray(arguments, 1);\n\t    args.unshift(this);\n\t    if (typeof plugin.install === 'function') {\n\t      plugin.install.apply(plugin, args);\n\t    } else {\n\t      plugin.apply(null, args);\n\t    }\n\t    plugin.installed = true;\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Apply a global mixin by merging it into the default\n\t   * options.\n\t   */\n\t\n\t  Vue.mixin = function (mixin) {\n\t    Vue.options = mergeOptions(Vue.options, mixin);\n\t  };\n\t\n\t  /**\n\t   * Create asset registration methods with the following\n\t   * signature:\n\t   *\n\t   * @param {String} id\n\t   * @param {*} definition\n\t   */\n\t\n\t  config._assetTypes.forEach(function (type) {\n\t    Vue[type] = function (id, definition) {\n\t      if (!definition) {\n\t        return this.options[type + 's'][id];\n\t      } else {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n\t            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n\t          }\n\t        }\n\t        if (type === 'component' && isPlainObject(definition)) {\n\t          if (!definition.name) {\n\t            definition.name = id;\n\t          }\n\t          definition = Vue.extend(definition);\n\t        }\n\t        this.options[type + 's'][id] = definition;\n\t        return definition;\n\t      }\n\t    };\n\t  });\n\t\n\t  // expose internal transition API\n\t  extend(Vue.transition, transition);\n\t}\n\t\n\tinstallGlobalAPI(Vue);\n\t\n\tVue.version = '1.0.26';\n\t\n\t// devtools global hook\n\t/* istanbul ignore next */\n\tsetTimeout(function () {\n\t  if (config.devtools) {\n\t    if (devtools) {\n\t      devtools.emit('init', Vue);\n\t    } else if (false) {\n\t      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n\t    }\n\t  }\n\t}, 0);\n\t\n\tmodule.exports = Vue;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\t// css base code, injected by the css-loader\r\n\tmodule.exports = function() {\r\n\t\tvar list = [];\r\n\t\r\n\t\t// return the list of modules as css string\r\n\t\tlist.toString = function toString() {\r\n\t\t\tvar result = [];\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar item = this[i];\r\n\t\t\t\tif(item[2]) {\r\n\t\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.push(item[1]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn result.join(\"\");\r\n\t\t};\r\n\t\r\n\t\t// import a list of modules into the list\r\n\t\tlist.i = function(modules, mediaQuery) {\r\n\t\t\tif(typeof modules === \"string\")\r\n\t\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\t\tvar alreadyImportedModules = {};\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar id = this[i][0];\r\n\t\t\t\tif(typeof id === \"number\")\r\n\t\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t\t}\r\n\t\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\t\tvar item = modules[i];\r\n\t\t\t\t// skip already imported module\r\n\t\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlist.push(item);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn list;\r\n\t};\r\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\n\t\tAuthor Tobias Koppers @sokra\n\t*/\n\tvar stylesInDom = {},\n\t\tmemoize = function(fn) {\n\t\t\tvar memo;\n\t\t\treturn function () {\n\t\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\t\t\treturn memo;\n\t\t\t};\n\t\t},\n\t\tisOldIE = memoize(function() {\n\t\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\n\t\t}),\n\t\tgetHeadElement = memoize(function () {\n\t\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\n\t\t}),\n\t\tsingletonElement = null,\n\t\tsingletonCounter = 0,\n\t\tstyleElementsInsertedAtTop = [];\n\t\n\tmodule.exports = function(list, options) {\n\t\tif(false) {\n\t\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t\t}\n\t\n\t\toptions = options || {};\n\t\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t\t// tags it will allow on a page\n\t\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\n\t\n\t\t// By default, add <style> tags to the bottom of <head>.\n\t\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\n\t\n\t\tvar styles = listToStyles(list);\n\t\taddStylesToDom(styles, options);\n\t\n\t\treturn function update(newList) {\n\t\t\tvar mayRemove = [];\n\t\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\t\tvar item = styles[i];\n\t\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\t\tdomStyle.refs--;\n\t\t\t\tmayRemove.push(domStyle);\n\t\t\t}\n\t\t\tif(newList) {\n\t\t\t\tvar newStyles = listToStyles(newList);\n\t\t\t\taddStylesToDom(newStyles, options);\n\t\t\t}\n\t\t\tfor(var i = 0; i < mayRemove.length; i++) {\n\t\t\t\tvar domStyle = mayRemove[i];\n\t\t\t\tif(domStyle.refs === 0) {\n\t\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\n\t\t\t\t\t\tdomStyle.parts[j]();\n\t\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\t\n\tfunction addStylesToDom(styles, options) {\n\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\tif(domStyle) {\n\t\t\t\tdomStyle.refs++;\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t\t}\n\t\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar parts = [];\n\t\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t\t}\n\t\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction listToStyles(list) {\n\t\tvar styles = [];\n\t\tvar newStyles = {};\n\t\tfor(var i = 0; i < list.length; i++) {\n\t\t\tvar item = list[i];\n\t\t\tvar id = item[0];\n\t\t\tvar css = item[1];\n\t\t\tvar media = item[2];\n\t\t\tvar sourceMap = item[3];\n\t\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\t\t\tif(!newStyles[id])\n\t\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\n\t\t\telse\n\t\t\t\tnewStyles[id].parts.push(part);\n\t\t}\n\t\treturn styles;\n\t}\n\t\n\tfunction insertStyleElement(options, styleElement) {\n\t\tvar head = getHeadElement();\n\t\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\t\tif (options.insertAt === \"top\") {\n\t\t\tif(!lastStyleElementInsertedAtTop) {\n\t\t\t\thead.insertBefore(styleElement, head.firstChild);\n\t\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n\t\t\t} else {\n\t\t\t\thead.appendChild(styleElement);\n\t\t\t}\n\t\t\tstyleElementsInsertedAtTop.push(styleElement);\n\t\t} else if (options.insertAt === \"bottom\") {\n\t\t\thead.appendChild(styleElement);\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t\t}\n\t}\n\t\n\tfunction removeStyleElement(styleElement) {\n\t\tstyleElement.parentNode.removeChild(styleElement);\n\t\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\n\t\tif(idx >= 0) {\n\t\t\tstyleElementsInsertedAtTop.splice(idx, 1);\n\t\t}\n\t}\n\t\n\tfunction createStyleElement(options) {\n\t\tvar styleElement = document.createElement(\"style\");\n\t\tstyleElement.type = \"text/css\";\n\t\tinsertStyleElement(options, styleElement);\n\t\treturn styleElement;\n\t}\n\t\n\tfunction addStyle(obj, options) {\n\t\tvar styleElement, update, remove;\n\t\n\t\tif (options.singleton) {\n\t\t\tvar styleIndex = singletonCounter++;\n\t\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\n\t\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n\t\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n\t\t} else {\n\t\t\tstyleElement = createStyleElement(options);\n\t\t\tupdate = applyToTag.bind(null, styleElement);\n\t\t\tremove = function() {\n\t\t\t\tremoveStyleElement(styleElement);\n\t\t\t};\n\t\t}\n\t\n\t\tupdate(obj);\n\t\n\t\treturn function updateStyle(newObj) {\n\t\t\tif(newObj) {\n\t\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\n\t\t\t\t\treturn;\n\t\t\t\tupdate(obj = newObj);\n\t\t\t} else {\n\t\t\t\tremove();\n\t\t\t}\n\t\t};\n\t}\n\t\n\tvar replaceText = (function () {\n\t\tvar textStore = [];\n\t\n\t\treturn function (index, replacement) {\n\t\t\ttextStore[index] = replacement;\n\t\t\treturn textStore.filter(Boolean).join('\\n');\n\t\t};\n\t})();\n\t\n\tfunction applyToSingletonTag(styleElement, index, remove, obj) {\n\t\tvar css = remove ? \"\" : obj.css;\n\t\n\t\tif (styleElement.styleSheet) {\n\t\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\n\t\t} else {\n\t\t\tvar cssNode = document.createTextNode(css);\n\t\t\tvar childNodes = styleElement.childNodes;\n\t\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\t\t\tif (childNodes.length) {\n\t\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\n\t\t\t} else {\n\t\t\t\tstyleElement.appendChild(cssNode);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction applyToTag(styleElement, obj) {\n\t\tvar css = obj.css;\n\t\tvar media = obj.media;\n\t\tvar sourceMap = obj.sourceMap;\n\t\n\t\tif (media) {\n\t\t\tstyleElement.setAttribute(\"media\", media);\n\t\t}\n\t\n\t\tif (sourceMap) {\n\t\t\t// https://developer.chrome.com/devtools/docs/javascript-debugging\n\t\t\t// this makes source maps inside style tags work properly in Chrome\n\t\t\tcss += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */';\n\t\t\t// http://stackoverflow.com/a/26603875\n\t\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t\t}\n\t\n\t\tif (styleElement.styleSheet) {\n\t\t\tstyleElement.styleSheet.cssText = css;\n\t\t} else {\n\t\t\twhile(styleElement.firstChild) {\n\t\t\t\tstyleElement.removeChild(styleElement.firstChild);\n\t\t\t}\n\t\t\tstyleElement.appendChild(document.createTextNode(css));\n\t\t}\n\t}\n\n\n/***/ }\n]);\n\n\n/** WEBPACK FOOTER **\n ** static/js/vendor.ea4ea9c080128c8f9ab7.js\n **/","(function(f) {\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\n        module.exports = f();\n    } else {\n        if (typeof define === 'function' && define.amd) {\n            define([], f);\n        } else {\n            var g;\n            if (typeof window !== 'undefined') {\n                g = window;\n            } else {\n                if (typeof global !== 'undefined') {\n                    g = global;\n                } else {\n                    if (typeof self !== 'undefined') {\n                        g = self;\n                    } else {\n                        g = this;\n                    }\n                }\n            }\n            g.glitch = f();\n        }\n    }\n})(function() {\n    var define, module, exports;\n    return function e(t, n, r) {\n        function s(o, u) {\n            if (!n[o]) {\n                if (!t[o]) {\n                    var a = typeof require == 'function' && require;\n                    if (!u && a) {\n                        return a(o, !0);\n                    }\n                    if (i) {\n                        return i(o, !0);\n                    }\n                    var f = new Error('Cannot find module \\'' + o + '\\'');\n                    throw f.code = 'MODULE_NOT_FOUND', f;\n                }\n                var l = n[o] = {\n                    exports: {}\n                };\n                t[o][0].call(l.exports, function(e) {\n                    var n = t[o][1][e];\n                    return s(n ? n : e);\n                }, l, l.exports, e, t, n, r);\n            }\n            return n[o].exports;\n        }\n        var i = typeof require == 'function' && require;\n        for (var o = 0; o < r.length; o++) {\n            s(r[o]);\n        }\n        return s;\n    }({\n        1: [ function(_dereq_, module, exports) {\n            'use strict';\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    'default': obj\n                };\n            }\n            Object.defineProperty(exports, '__esModule', {\n                value: !0\n            });\n            var _extends = Object.assign || function(target) {\n                for (var i = 1; i < arguments.length; i++) {\n                    var source = arguments[i];\n                    for (var key in source) {\n                        Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);\n                    }\n                }\n                return target;\n            };\n            exports['default'] = function(params) {\n                function getParams() {\n                    return params;\n                }\n                function getInput() {\n                    var result = _extends({}, api);\n                    return inputFn || _extends(result, inputMethods), result;\n                }\n                function getOutput() {\n                    var result = _extends({}, api);\n                    return outputFn || _extends(result, outputMethods), result;\n                }\n                function noTransform(x) {\n                    return x;\n                }\n                function fromImage(inputOptions) {\n                    return setInput(_fromImage2['default'], inputOptions);\n                }\n                function fromImageData(inputOptions) {\n                    return setInput(noTransform, inputOptions);\n                }\n                function toDataURL(outputOptions) {\n                    return setOutput(noTransform);\n                }\n                function toImage(outputOptions) {\n                    return setOutput(_toImage2['default'], outputOptions, !0);\n                }\n                function toImageData(outputOptions) {\n                    return setOutput(_toImageData2['default'], outputOptions, !0);\n                }\n                function setInput(fn, inputOptions, canResolve) {\n                    return inputFn = function() {\n                        return new Promise(function(resolve, reject) {\n                            if (canResolve) {\n                                fn(inputOptions, resolve, reject);\n                            } else {\n                                if (fn === noTransform) {\n                                    resolve(inputOptions);\n                                } else {\n                                    try {\n                                        resolve(fn(inputOptions, resolve, reject));\n                                    } catch (err) {\n                                        reject(err);\n                                    }\n                                }\n                            }\n                        });\n                    }, isReady() ? getResult() : getOutput();\n                }\n                function setOutput(fn, outputOptions, canResolve) {\n                    return outputFn = function(base64URL) {\n                        return new Promise(function(resolve, reject) {\n                            canResolve ? fn(base64URL, outputOptions, resolve, reject) : fn === noTransform ? resolve(base64URL) : fn(base64URL, outputOptions).then(resolve, reject);\n                        });\n                    }, isReady() ? getResult() : getInput();\n                }\n                function isReady() {\n                    return inputFn && outputFn;\n                }\n                function getResult() {\n                    return new Promise(function(resolve, reject) {\n                        inputFn().then(function(imageData) {\n                            return glitch(imageData, params);\n                        }, reject).then(function(base64URL) {\n                            outputFn(base64URL).then(resolve, reject);\n                        }, reject);\n                    });\n                }\n                function glitch(imageData, params) {\n                    return new Promise(function(resolve, reject) {\n                        (0, _imageDataToBase2['default'])(imageData, params.quality).then(function(base64URL) {\n                            return glitchInWorker(imageData, base64URL, params);\n                        }, reject).then(resolve, reject);\n                    });\n                }\n                function glitchInWorker(imageData, base64URL, params) {\n                    return new Promise(function(resolve, reject) {\n                        worker.addEventListener('message', function(event) {\n                            event.data && event.data.base64URL ? resolve(event.data.base64URL) : reject(event.data && event.data.err ? event.data.err : event);\n                        }), worker.postMessage({\n                            params: params,\n                            base64URL: base64URL,\n                            imageData: imageData,\n                            imageDataWidth: imageData.width,\n                            imageDataHeight: imageData.height\n                        });\n                    });\n                }\n                params = (0, _sanitizeInput2['default'])(params);\n                var inputFn = void 0, outputFn = void 0, worker = (0, _webworkify2['default'])(_glitchWorker2['default']), api = {\n                    getParams: getParams,\n                    getInput: getInput,\n                    getOutput: getOutput\n                }, inputMethods = {\n                    fromImageData: fromImageData,\n                    fromImage: fromImage\n                }, outputMethods = {\n                    toImage: toImage,\n                    toDataURL: toDataURL,\n                    toImageData: toImageData\n                };\n                return getInput();\n            };\n            var _sanitizeInput = _dereq_('./input/sanitizeInput'), _sanitizeInput2 = _interopRequireDefault(_sanitizeInput), _fromImage = _dereq_('./input/browser/fromImage'), _fromImage2 = _interopRequireDefault(_fromImage), _toImage = _dereq_('./output/browser/toImage'), _toImage2 = _interopRequireDefault(_toImage), _toImageData = _dereq_('./output/toImageData'), _toImageData2 = _interopRequireDefault(_toImageData), _imageDataToBase = _dereq_('./glitch/browser/imageDataToBase64'), _imageDataToBase2 = _interopRequireDefault(_imageDataToBase), _glitchImageData = _dereq_('./glitch/glitchImageData'), _glitchImageData2 = _interopRequireDefault(_glitchImageData), _webworkify = _dereq_('webworkify'), _webworkify2 = _interopRequireDefault(_webworkify), _glitchWorker = _dereq_('./workers/glitchWorker'), _glitchWorker2 = _interopRequireDefault(_glitchWorker);\n            module.exports = exports['default'];\n        }, {\n            './glitch/browser/imageDataToBase64': 4,\n            './glitch/glitchImageData': 7,\n            './input/browser/fromImage': 9,\n            './input/sanitizeInput': 11,\n            './output/browser/toImage': 12,\n            './output/toImageData': 13,\n            './workers/glitchWorker': 20,\n            webworkify: 22\n        } ],\n        2: [ function(_dereq_, module, exports) {\n            'use strict';\n            Object.defineProperty(exports, '__esModule', {\n                value: !0\n            });\n            var base64Chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/', base64Map = base64Chars.split(''), reversedBase64Map = {};\n            base64Map.forEach(function(val, key) {\n                reversedBase64Map[val] = key;\n            }), exports['default'] = {\n                map: base64Map,\n                reverse: reversedBase64Map\n            }, module.exports = exports['default'];\n        }, {} ],\n        3: [ function(_dereq_, module, exports) {\n            'use strict';\n            Object.defineProperty(exports, '__esModule', {\n                value: !0\n            }), exports['default'] = function(base64URL) {\n                for (var digitNum, currrentChar, prev, result = [], i = 23, len = base64URL.length; len > i; i++) {\n                    switch (currrentChar = _base64Map.reverse[base64URL.charAt(i)], digitNum = (i - 23) % 4) {\n                      case 1:\n                        result.push(prev << 2 | currrentChar >> 4);\n                        break;\n\n                      case 2:\n                        result.push((15 & prev) << 4 | currrentChar >> 2);\n                        break;\n\n                      case 3:\n                        result.push((3 & prev) << 6 | currrentChar);\n                    }\n                    prev = currrentChar;\n                }\n                return result;\n            };\n            var _base64Map = _dereq_('./base64Map');\n            module.exports = exports['default'];\n        }, {\n            './base64Map': 2\n        } ],\n        4: [ function(_dereq_, module, exports) {\n            'use strict';\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    'default': obj\n                };\n            }\n            Object.defineProperty(exports, '__esModule', {\n                value: !0\n            }), exports['default'] = function(imageData, quality) {\n                return new Promise(function(resolve, reject) {\n                    if ((0, _isImageData2['default'])(imageData)) {\n                        var canvas = new _canvasBrowserify2['default'](imageData.width, imageData.height), ctx = canvas.getContext('2d');\n                        ctx.putImageData(imageData, 0, 0);\n                        var base64URL = canvas.toDataURL('image/jpeg', quality / 100);\n                        resolve(base64URL);\n                    } else {\n                        reject(new Error('object is not valid imageData'));\n                    }\n                });\n            };\n            var _canvasBrowserify = _dereq_('canvas-browserify'), _canvasBrowserify2 = _interopRequireDefault(_canvasBrowserify), _isImageData = _dereq_('../../util/isImageData'), _isImageData2 = _interopRequireDefault(_isImageData);\n            module.exports = exports['default'];\n        }, {\n            '../../util/isImageData': 18,\n            'canvas-browserify': 21\n        } ],\n        5: [ function(_dereq_, module, exports) {\n            'use strict';\n            Object.defineProperty(exports, '__esModule', {\n                value: !0\n            }), exports['default'] = function(byteArray) {\n                for (var result = [ 'data:image/jpeg;base64,' ], byteNum = void 0, currentByte = void 0, previousByte = void 0, i = 0, len = byteArray.length; len > i; i++) {\n                    switch (currentByte = byteArray[i], byteNum = i % 3) {\n                      case 0:\n                        result.push(_base64Map.map[currentByte >> 2]);\n                        break;\n\n                      case 1:\n                        result.push(_base64Map.map[(3 & previousByte) << 4 | currentByte >> 4]);\n                        break;\n\n                      case 2:\n                        result.push(_base64Map.map[(15 & previousByte) << 2 | currentByte >> 6]), result.push(_base64Map.map[63 & currentByte]);\n                    }\n                    previousByte = currentByte;\n                }\n                return 0 === byteNum ? (result.push(_base64Map.map[(3 & previousByte) << 4]), result.push('==')) : 1 === byteNum && (result.push(_base64Map.map[(15 & previousByte) << 2]), \n                result.push('=')), result.join('');\n            };\n            var _base64Map = _dereq_('./base64Map');\n            module.exports = exports['default'];\n        }, {\n            './base64Map': 2\n        } ],\n        6: [ function(_dereq_, module, exports) {\n            'use strict';\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    'default': obj\n                };\n            }\n            Object.defineProperty(exports, '__esModule', {\n                value: !0\n            }), exports['default'] = function(byteArray, seed, amount, iterationCount) {\n                for (var headerLength = (0, _jpgHeaderLength2['default'])(byteArray), maxIndex = byteArray.length - headerLength - 4, amountPercent = amount / 100, seedPercent = seed / 100, iterationIndex = 0; iterationCount > iterationIndex; iterationIndex++) {\n                    var minPixelIndex = maxIndex / iterationCount * iterationIndex | 0, maxPixelIndex = maxIndex / iterationCount * (iterationIndex + 1) | 0, delta = maxPixelIndex - minPixelIndex, pixelIndex = minPixelIndex + delta * seedPercent | 0;\n                    pixelIndex > maxIndex && (pixelIndex = maxIndex);\n                    var indexInByteArray = ~~(headerLength + pixelIndex);\n                    byteArray[indexInByteArray] = ~~(256 * amountPercent);\n                }\n                return byteArray;\n            };\n            var _jpgHeaderLength = _dereq_('./jpgHeaderLength'), _jpgHeaderLength2 = _interopRequireDefault(_jpgHeaderLength);\n            module.exports = exports['default'];\n        }, {\n            './jpgHeaderLength': 8\n        } ],\n        7: [ function(_dereq_, module, exports) {\n            'use strict';\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    'default': obj\n                };\n            }\n            Object.defineProperty(exports, '__esModule', {\n                value: !0\n            }), exports['default'] = function(imageData, base64URL, params) {\n                if ((0, _isImageData2['default'])(imageData)) {\n                    var byteArray = (0, _base64ToByteArray2['default'])(base64URL), glitchedByteArray = (0, \n                    _glitchByteArray2['default'])(byteArray, params.seed, params.amount, params.iterations), glitchedBase64URL = (0, \n                    _byteArrayToBase2['default'])(glitchedByteArray);\n                    return glitchedBase64URL;\n                }\n                throw new Error('glitchImageData: imageData seems to be corrupt.');\n            };\n            var _isImageData = _dereq_('../util/isImageData'), _isImageData2 = _interopRequireDefault(_isImageData), _base64ToByteArray = _dereq_('./base64ToByteArray'), _base64ToByteArray2 = _interopRequireDefault(_base64ToByteArray), _glitchByteArray = _dereq_('./glitchByteArray'), _glitchByteArray2 = _interopRequireDefault(_glitchByteArray), _byteArrayToBase = _dereq_('./byteArrayToBase64'), _byteArrayToBase2 = _interopRequireDefault(_byteArrayToBase);\n            module.exports = exports['default'];\n        }, {\n            '../util/isImageData': 18,\n            './base64ToByteArray': 3,\n            './byteArrayToBase64': 5,\n            './glitchByteArray': 6\n        } ],\n        8: [ function(_dereq_, module, exports) {\n            'use strict';\n            Object.defineProperty(exports, '__esModule', {\n                value: !0\n            }), exports['default'] = function(byteArr) {\n                for (var result = 417, i = 0, len = byteArr.length; len > i; i++) {\n                    if (255 === byteArr[i] && 218 === byteArr[i + 1]) {\n                        result = i + 2;\n                        break;\n                    }\n                }\n                return result;\n            }, module.exports = exports['default'];\n        }, {} ],\n        9: [ function(_dereq_, module, exports) {\n            'use strict';\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    'default': obj\n                };\n            }\n            Object.defineProperty(exports, '__esModule', {\n                value: !0\n            }), exports['default'] = function(image) {\n                if (image instanceof HTMLImageElement) {\n                    if (!image.naturalWidth || !image.naturalHeight || image.complete === !1) {\n                        throw new Error('This this image hasn\\'t finished loading: ' + image.src);\n                    }\n                    var canvas = new _canvasBrowserify2['default'](image.naturalWidth, image.naturalHeight), ctx = canvas.getContext('2d');\n                    ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n                    var imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n                    return imageData.data && imageData.data.length && ('undefined' == typeof imageData.width && (imageData.width = image.naturalWidth), \n                    'undefined' == typeof imageData.height && (imageData.height = image.naturalHeight)), \n                    imageData;\n                }\n                throw new Error('This object does not seem to be an image.');\n            };\n            var _canvasBrowserify = _dereq_('canvas-browserify'), _canvasBrowserify2 = _interopRequireDefault(_canvasBrowserify), Image = _canvasBrowserify2['default'].Image;\n            module.exports = exports['default'];\n        }, {\n            'canvas-browserify': 21\n        } ],\n        10: [ function(_dereq_, module, exports) {\n            'use strict';\n            Object.defineProperty(exports, '__esModule', {\n                value: !0\n            }), exports['default'] = {\n                amount: 35,\n                iterations: 20,\n                quality: 30,\n                seed: 25\n            }, module.exports = exports['default'];\n        }, {} ],\n        11: [ function(_dereq_, module, exports) {\n            'use strict';\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    'default': obj\n                };\n            }\n            Object.defineProperty(exports, '__esModule', {\n                value: !0\n            });\n            var _typeof = 'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator ? function(obj) {\n                return typeof obj;\n            } : function(obj) {\n                return obj && 'function' == typeof Symbol && obj.constructor === Symbol ? 'symbol' : typeof obj;\n            };\n            exports['default'] = function(params) {\n                params = (0, _clone2['default'])(params), 'object' !== ('undefined' == typeof params ? 'undefined' : _typeof(params)) && (params = {});\n                var defaultKeys = Object.keys(_defaultParams2['default']).filter(function(key) {\n                    return 'iterations' !== key;\n                });\n                return defaultKeys.forEach(function(key) {\n                    'number' != typeof params[key] || isNaN(params[key]) ? params[key] = _defaultParams2['default'][key] : params[key] = (0, \n                    _clamp2['default'])(params[key], 0, 100), params[key] = Math.round(params[key]);\n                }), ('number' != typeof params.iterations || isNaN(params.iterations) || params.iterations <= 0) && (params.iterations = _defaultParams2['default'].iterations), \n                params.iterations = Math.round(params.iterations), params;\n            };\n            var _clamp = _dereq_('../util/clamp'), _clamp2 = _interopRequireDefault(_clamp), _clone = _dereq_('../util/clone'), _clone2 = _interopRequireDefault(_clone), _defaultParams = _dereq_('./defaultParams'), _defaultParams2 = _interopRequireDefault(_defaultParams);\n            module.exports = exports['default'];\n        }, {\n            '../util/clamp': 15,\n            '../util/clone': 16,\n            './defaultParams': 10\n        } ],\n        12: [ function(_dereq_, module, exports) {\n            'use strict';\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    'default': obj\n                };\n            }\n            Object.defineProperty(exports, '__esModule', {\n                value: !0\n            }), exports['default'] = function(base64URL, opts, resolve, reject) {\n                (0, _loadBase64Image2['default'])(base64URL).then(resolve, reject);\n            };\n            var _loadBase64Image = _dereq_('../../util/loadBase64Image'), _loadBase64Image2 = _interopRequireDefault(_loadBase64Image);\n            module.exports = exports['default'];\n        }, {\n            '../../util/loadBase64Image': 19\n        } ],\n        13: [ function(_dereq_, module, exports) {\n            'use strict';\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    'default': obj\n                };\n            }\n            Object.defineProperty(exports, '__esModule', {\n                value: !0\n            }), exports['default'] = function(base64URL, options, resolve, reject) {\n                (0, _loadBase64Image2['default'])(base64URL).then(function(image) {\n                    var size = (0, _getImageSize2['default'])(image), imageData = (0, _canvasFromImage2['default'])(image).ctx.getImageData(0, 0, size.width, size.height);\n                    imageData.width || (imageData.width = size.width), imageData.height || (imageData.height = size.height), \n                    resolve(imageData);\n                }, reject);\n            };\n            var _loadBase64Image = _dereq_('../util/loadBase64Image'), _loadBase64Image2 = _interopRequireDefault(_loadBase64Image), _canvasFromImage = _dereq_('../util/canvasFromImage'), _canvasFromImage2 = _interopRequireDefault(_canvasFromImage), _getImageSize = _dereq_('../util/getImageSize'), _getImageSize2 = _interopRequireDefault(_getImageSize);\n            module.exports = exports['default'];\n        }, {\n            '../util/canvasFromImage': 14,\n            '../util/getImageSize': 17,\n            '../util/loadBase64Image': 19\n        } ],\n        14: [ function(_dereq_, module, exports) {\n            'use strict';\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    'default': obj\n                };\n            }\n            Object.defineProperty(exports, '__esModule', {\n                value: !0\n            }), exports['default'] = function(image) {\n                var size = (0, _getImageSize2['default'])(image), canvas = new _canvasBrowserify2['default'](size.width, size.height), ctx = canvas.getContext('2d');\n                return ctx.drawImage(image, 0, 0, size.width, size.height), {\n                    canvas: canvas,\n                    ctx: ctx\n                };\n            };\n            var _canvasBrowserify = _dereq_('canvas-browserify'), _canvasBrowserify2 = _interopRequireDefault(_canvasBrowserify), _getImageSize = _dereq_('./getImageSize'), _getImageSize2 = _interopRequireDefault(_getImageSize);\n            module.exports = exports['default'];\n        }, {\n            './getImageSize': 17,\n            'canvas-browserify': 21\n        } ],\n        15: [ function(_dereq_, module, exports) {\n            'use strict';\n            Object.defineProperty(exports, '__esModule', {\n                value: !0\n            }), exports['default'] = function(value, min, max) {\n                return min > value ? min : value > max ? max : value;\n            }, module.exports = exports['default'];\n        }, {} ],\n        16: [ function(_dereq_, module, exports) {\n            'use strict';\n            Object.defineProperty(exports, '__esModule', {\n                value: !0\n            }), exports['default'] = function(obj) {\n                var result = !1;\n                if ('undefined' != typeof obj) {\n                    try {\n                        result = JSON.parse(JSON.stringify(obj));\n                    } catch (e) {}\n                }\n                return result;\n            }, module.exports = exports['default'];\n        }, {} ],\n        17: [ function(_dereq_, module, exports) {\n            'use strict';\n            Object.defineProperty(exports, '__esModule', {\n                value: !0\n            }), exports['default'] = function(image) {\n                return {\n                    width: image.width || image.naturalWidth,\n                    height: image.height || image.naturalHeight\n                };\n            }, module.exports = exports['default'];\n        }, {} ],\n        18: [ function(_dereq_, module, exports) {\n            'use strict';\n            Object.defineProperty(exports, '__esModule', {\n                value: !0\n            });\n            var _typeof = 'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator ? function(obj) {\n                return typeof obj;\n            } : function(obj) {\n                return obj && 'function' == typeof Symbol && obj.constructor === Symbol ? 'symbol' : typeof obj;\n            };\n            exports['default'] = function(imageData) {\n                return imageData && 'number' == typeof imageData.width && 'number' == typeof imageData.height && imageData.data && 'number' == typeof imageData.data.length && 'object' === _typeof(imageData.data);\n            }, module.exports = exports['default'];\n        }, {} ],\n        19: [ function(_dereq_, module, exports) {\n            'use strict';\n            Object.defineProperty(exports, '__esModule', {\n                value: !0\n            }), exports['default'] = function(base64URL) {\n                return new Promise(function(resolve, reject) {\n                    var image = new _canvasBrowserify.Image();\n                    image.onload = function() {\n                        resolve(image);\n                    }, image.onerror = function(err) {\n                        reject(err);\n                    }, image.src = base64URL;\n                });\n            };\n            var _canvasBrowserify = _dereq_('canvas-browserify');\n            module.exports = exports['default'];\n        }, {\n            'canvas-browserify': 21\n        } ],\n        20: [ function(_dereq_, module, exports) {\n            'use strict';\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    'default': obj\n                };\n            }\n            function worker(self) {\n                self.addEventListener('message', function(msg) {\n                    var imageData = msg.data.imageData, params = msg.data.params, base64URL = msg.data.base64URL;\n                    if (imageData && base64URL && params) {\n                        try {\n                            'undefined' == typeof imageData.width && 'number' == typeof msg.data.imageDataWidth && (imageData.width = msg.data.imageDataWidth), \n                            'undefined' == typeof imageData.height && 'number' == typeof msg.data.imageDataHeight && (imageData.height = msg.data.imageDataHeight);\n                            var glitchedBase64URL = (0, _glitchImageData2['default'])(imageData, base64URL, params);\n                            success(glitchedBase64URL);\n                        } catch (err) {\n                            fail(err);\n                        }\n                    } else {\n                        fail(msg.data.imageData ? 'Parameters are missing.' : 'ImageData is missing.');\n                    }\n                    self.close();\n                });\n            }\n            function fail(err) {\n                self.postMessage({\n                    err: err.message || err\n                });\n            }\n            function success(base64URL) {\n                self.postMessage({\n                    base64URL: base64URL\n                });\n            }\n            Object.defineProperty(exports, '__esModule', {\n                value: !0\n            }), exports['default'] = worker;\n            var _glitchImageData = _dereq_('../glitch/glitchImageData'), _glitchImageData2 = _interopRequireDefault(_glitchImageData);\n            module.exports = exports['default'];\n        }, {\n            '../glitch/glitchImageData': 7\n        } ],\n        21: [ function(_dereq_, module, exports) {\n            var Canvas = module.exports = function Canvas(w, h) {\n                var canvas = document.createElement('canvas');\n                canvas.width = w || 300;\n                canvas.height = h || 150;\n                return canvas;\n            };\n            Canvas.Image = function() {\n                var img = document.createElement('img');\n                return img;\n            };\n        }, {} ],\n        22: [ function(_dereq_, module, exports) {\n            var bundleFn = arguments[3];\n            var sources = arguments[4];\n            var cache = arguments[5];\n            var stringify = JSON.stringify;\n            module.exports = function(fn) {\n                var keys = [];\n                var wkey;\n                var cacheKeys = Object.keys(cache);\n                for (var i = 0, l = cacheKeys.length; i < l; i++) {\n                    var key = cacheKeys[i];\n                    var exp = cache[key].exports;\n                    if (exp === fn || exp.default === fn) {\n                        wkey = key;\n                        break;\n                    }\n                }\n                if (!wkey) {\n                    wkey = Math.floor(Math.pow(16, 8) * Math.random()).toString(16);\n                    var wcache = {};\n                    for (var i = 0, l = cacheKeys.length; i < l; i++) {\n                        var key = cacheKeys[i];\n                        wcache[key] = key;\n                    }\n                    sources[wkey] = [ Function([ 'require', 'module', 'exports' ], '(' + fn + ')(self)'), wcache ];\n                }\n                var skey = Math.floor(Math.pow(16, 8) * Math.random()).toString(16);\n                var scache = {};\n                scache[wkey] = wkey;\n                sources[skey] = [ Function([ 'require' ], 'var f = require(' + stringify(wkey) + ');' + '(f.default ? f.default : f)(self);'), scache ];\n                var src = '(' + bundleFn + ')({' + Object.keys(sources).map(function(key) {\n                    return stringify(key) + ':[' + sources[key][0] + ',' + stringify(sources[key][1]) + ']';\n                }).join(',') + '},{},[' + stringify(skey) + '])';\n                var URL = window.URL || window.webkitURL || window.mozURL || window.msURL;\n                return new Worker(URL.createObjectURL(new Blob([ src ], {\n                    type: 'text/javascript'\n                })));\n            };\n        }, {} ]\n    }, {}, [ 1 ])(1);\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/glitch-canvas/dist/glitch-canvas.js\n ** module id = 4\n ** module chunks = 2\n **/","/*!\n * Vue.js v1.0.26\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\nfunction set(obj, key, val) {\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return;\n  }\n  if (obj._isVue) {\n    set(obj._data, key, val);\n    return;\n  }\n  var ob = obj.__ob__;\n  if (!ob) {\n    obj[key] = val;\n    return;\n  }\n  ob.convert(key, val);\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._proxy(key);\n      vm._digest();\n    }\n  }\n  return val;\n}\n\n/**\n * Delete a property and trigger change if necessary.\n *\n * @param {Object} obj\n * @param {String} key\n */\n\nfunction del(obj, key) {\n  if (!hasOwn(obj, key)) {\n    return;\n  }\n  delete obj[key];\n  var ob = obj.__ob__;\n  if (!ob) {\n    if (obj._isVue) {\n      delete obj._data[key];\n      obj._digest();\n    }\n    return;\n  }\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._unproxy(key);\n      vm._digest();\n    }\n  }\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Check whether the object has the property.\n *\n * @param {Object} obj\n * @param {String} key\n * @return {Boolean}\n */\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\n/**\n * Check if an expression is a literal value.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\nfunction isLiteral(exp) {\n  return literalValueRE.test(exp);\n}\n\n/**\n * Check if a string starts with $ or _\n *\n * @param {String} str\n * @return {Boolean}\n */\n\nfunction isReserved(str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F;\n}\n\n/**\n * Guard text output, make sure undefined outputs\n * empty string\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction _toString(value) {\n  return value == null ? '' : value.toString();\n}\n\n/**\n * Check and convert possible numeric strings to numbers\n * before setting back to data\n *\n * @param {*} value\n * @return {*|Number}\n */\n\nfunction toNumber(value) {\n  if (typeof value !== 'string') {\n    return value;\n  } else {\n    var parsed = Number(value);\n    return isNaN(parsed) ? value : parsed;\n  }\n}\n\n/**\n * Convert string boolean literals into real booleans.\n *\n * @param {*} value\n * @return {*|Boolean}\n */\n\nfunction toBoolean(value) {\n  return value === 'true' ? true : value === 'false' ? false : value;\n}\n\n/**\n * Strip quotes from a string\n *\n * @param {String} str\n * @return {String | false}\n */\n\nfunction stripQuotes(str) {\n  var a = str.charCodeAt(0);\n  var b = str.charCodeAt(str.length - 1);\n  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n\n/**\n * Camelize a hyphen-delmited string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar camelizeRE = /-(\\w)/g;\n\nfunction camelize(str) {\n  return str.replace(camelizeRE, toUpper);\n}\n\nfunction toUpper(_, c) {\n  return c ? c.toUpperCase() : '';\n}\n\n/**\n * Hyphenate a camelCase string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\nfunction hyphenate(str) {\n  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n}\n\n/**\n * Converts hyphen/underscore/slash delimitered names into\n * camelized classNames.\n *\n * e.g. my-component => MyComponent\n *      some_else    => SomeElse\n *      some/comp    => SomeComp\n *\n * @param {String} str\n * @return {String}\n */\n\nvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\nfunction classify(str) {\n  return str.replace(classifyRE, toUpper);\n}\n\n/**\n * Simple bind, faster than native\n *\n * @param {Function} fn\n * @param {Object} ctx\n * @return {Function}\n */\n\nfunction bind(fn, ctx) {\n  return function (a) {\n    var l = arguments.length;\n    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n  };\n}\n\n/**\n * Convert an Array-like object to a real Array.\n *\n * @param {Array-like} list\n * @param {Number} [start] - start index\n * @return {Array}\n */\n\nfunction toArray(list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret;\n}\n\n/**\n * Mix properties into target object.\n *\n * @param {Object} to\n * @param {Object} from\n */\n\nfunction extend(to, from) {\n  var keys = Object.keys(from);\n  var i = keys.length;\n  while (i--) {\n    to[keys[i]] = from[keys[i]];\n  }\n  return to;\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\n\nfunction isPlainObject(obj) {\n  return toString.call(obj) === OBJECT_STRING;\n}\n\n/**\n * Array type check.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar isArray = Array.isArray;\n\n/**\n * Define a property.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n * @param {Boolean} [enumerable]\n */\n\nfunction def(obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Debounce a function so it only gets called after the\n * input stops arriving after the given wait period.\n *\n * @param {Function} func\n * @param {Number} wait\n * @return {Function} - the debounced function\n */\n\nfunction _debounce(func, wait) {\n  var timeout, args, context, timestamp, result;\n  var later = function later() {\n    var last = Date.now() - timestamp;\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    }\n  };\n  return function () {\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n    return result;\n  };\n}\n\n/**\n * Manual indexOf because it's slightly faster than\n * native.\n *\n * @param {Array} arr\n * @param {*} obj\n */\n\nfunction indexOf(arr, obj) {\n  var i = arr.length;\n  while (i--) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n}\n\n/**\n * Make a cancellable version of an async callback.\n *\n * @param {Function} fn\n * @return {Function}\n */\n\nfunction cancellable(fn) {\n  var cb = function cb() {\n    if (!cb.cancelled) {\n      return fn.apply(this, arguments);\n    }\n  };\n  cb.cancel = function () {\n    cb.cancelled = true;\n  };\n  return cb;\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n *\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n */\n\nfunction looseEqual(a, b) {\n  /* eslint-disable eqeqeq */\n  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n  /* eslint-enable eqeqeq */\n}\n\nvar hasProto = ('__proto__' in {});\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n// UA sniffing for working around browser-specific quirks\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && UA.indexOf('trident') > 0;\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIos = UA && /(iphone|ipad|ipod|ios)/i.test(UA);\nvar iosVersionMatch = isIos && UA.match(/os ([\\d_]+)/);\nvar iosVersion = iosVersionMatch && iosVersionMatch[1].split('_');\n\n// detecting iOS UIWebView by indexedDB\nvar hasMutationObserverBug = iosVersion && Number(iosVersion[0]) >= 9 && Number(iosVersion[1]) >= 3 && !window.indexedDB;\n\nvar transitionProp = undefined;\nvar transitionEndEvent = undefined;\nvar animationProp = undefined;\nvar animationEndEvent = undefined;\n\n// Transition property/event sniffing\nif (inBrowser && !isIE9) {\n  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n}\n\n/**\n * Defer a task to execute it asynchronously. Ideally this\n * should be executed as a microtask, so we leverage\n * MutationObserver if it's available, and fallback to\n * setTimeout(0).\n *\n * @param {Function} cb\n * @param {Object} ctx\n */\n\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n  function nextTickHandler() {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks = [];\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  /* istanbul ignore if */\n  if (typeof MutationObserver !== 'undefined' && !hasMutationObserverBug) {\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(counter);\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = counter;\n    };\n  } else {\n    // webpack attempts to inject a shim for setImmediate\n    // if it is used as a global, so we have to work around that to\n    // avoid bundling unnecessary code.\n    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n    timerFunc = context.setImmediate || setTimeout;\n  }\n  return function (cb, ctx) {\n    var func = ctx ? function () {\n      cb.call(ctx);\n    } : cb;\n    callbacks.push(func);\n    if (pending) return;\n    pending = true;\n    timerFunc(nextTickHandler, 0);\n  };\n})();\n\nvar _Set = undefined;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = function () {\n    this.set = Object.create(null);\n  };\n  _Set.prototype.has = function (key) {\n    return this.set[key] !== undefined;\n  };\n  _Set.prototype.add = function (key) {\n    this.set[key] = 1;\n  };\n  _Set.prototype.clear = function () {\n    this.set = Object.create(null);\n  };\n}\n\nfunction Cache(limit) {\n  this.size = 0;\n  this.limit = limit;\n  this.head = this.tail = undefined;\n  this._keymap = Object.create(null);\n}\n\nvar p = Cache.prototype;\n\n/**\n * Put <value> into the cache associated with <key>.\n * Returns the entry which was removed to make room for\n * the new entry. Otherwise undefined is returned.\n * (i.e. if there was enough room already).\n *\n * @param {String} key\n * @param {*} value\n * @return {Entry|undefined}\n */\n\np.put = function (key, value) {\n  var removed;\n\n  var entry = this.get(key, true);\n  if (!entry) {\n    if (this.size === this.limit) {\n      removed = this.shift();\n    }\n    entry = {\n      key: key\n    };\n    this._keymap[key] = entry;\n    if (this.tail) {\n      this.tail.newer = entry;\n      entry.older = this.tail;\n    } else {\n      this.head = entry;\n    }\n    this.tail = entry;\n    this.size++;\n  }\n  entry.value = value;\n\n  return removed;\n};\n\n/**\n * Purge the least recently used (oldest) entry from the\n * cache. Returns the removed entry or undefined if the\n * cache was empty.\n */\n\np.shift = function () {\n  var entry = this.head;\n  if (entry) {\n    this.head = this.head.newer;\n    this.head.older = undefined;\n    entry.newer = entry.older = undefined;\n    this._keymap[entry.key] = undefined;\n    this.size--;\n  }\n  return entry;\n};\n\n/**\n * Get and register recent use of <key>. Returns the value\n * associated with <key> or undefined if not in cache.\n *\n * @param {String} key\n * @param {Boolean} returnEntry\n * @return {Entry|*}\n */\n\np.get = function (key, returnEntry) {\n  var entry = this._keymap[key];\n  if (entry === undefined) return;\n  if (entry === this.tail) {\n    return returnEntry ? entry : entry.value;\n  }\n  // HEAD--------------TAIL\n  //   <.older   .newer>\n  //  <--- add direction --\n  //   A  B  C  <D>  E\n  if (entry.newer) {\n    if (entry === this.head) {\n      this.head = entry.newer;\n    }\n    entry.newer.older = entry.older; // C <-- E.\n  }\n  if (entry.older) {\n    entry.older.newer = entry.newer; // C. --> E\n  }\n  entry.newer = undefined; // D --x\n  entry.older = this.tail; // D. --> E\n  if (this.tail) {\n    this.tail.newer = entry; // E. <-- D\n  }\n  this.tail = entry;\n  return returnEntry ? entry : entry.value;\n};\n\nvar cache$1 = new Cache(1000);\nvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\nvar reservedArgRE = /^in$|^-?\\d+/;\n\n/**\n * Parser state\n */\n\nvar str;\nvar dir;\nvar c;\nvar prev;\nvar i;\nvar l;\nvar lastFilterIndex;\nvar inSingle;\nvar inDouble;\nvar curly;\nvar square;\nvar paren;\n/**\n * Push a filter to the current directive object\n */\n\nfunction pushFilter() {\n  var exp = str.slice(lastFilterIndex, i).trim();\n  var filter;\n  if (exp) {\n    filter = {};\n    var tokens = exp.match(filterTokenRE);\n    filter.name = tokens[0];\n    if (tokens.length > 1) {\n      filter.args = tokens.slice(1).map(processFilterArg);\n    }\n  }\n  if (filter) {\n    (dir.filters = dir.filters || []).push(filter);\n  }\n  lastFilterIndex = i + 1;\n}\n\n/**\n * Check if an argument is dynamic and strip quotes.\n *\n * @param {String} arg\n * @return {Object}\n */\n\nfunction processFilterArg(arg) {\n  if (reservedArgRE.test(arg)) {\n    return {\n      value: toNumber(arg),\n      dynamic: false\n    };\n  } else {\n    var stripped = stripQuotes(arg);\n    var dynamic = stripped === arg;\n    return {\n      value: dynamic ? arg : stripped,\n      dynamic: dynamic\n    };\n  }\n}\n\n/**\n * Parse a directive value and extract the expression\n * and its filters into a descriptor.\n *\n * Example:\n *\n * \"a + 1 | uppercase\" will yield:\n * {\n *   expression: 'a + 1',\n *   filters: [\n *     { name: 'uppercase', args: null }\n *   ]\n * }\n *\n * @param {String} s\n * @return {Object}\n */\n\nfunction parseDirective(s) {\n  var hit = cache$1.get(s);\n  if (hit) {\n    return hit;\n  }\n\n  // reset parser state\n  str = s;\n  inSingle = inDouble = false;\n  curly = square = paren = 0;\n  lastFilterIndex = 0;\n  dir = {};\n\n  for (i = 0, l = str.length; i < l; i++) {\n    prev = c;\n    c = str.charCodeAt(i);\n    if (inSingle) {\n      // check single quote\n      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n    } else if (inDouble) {\n      // check double quote\n      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n    } else if (c === 0x7C && // pipe\n    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n      if (dir.expression == null) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        dir.expression = str.slice(0, i).trim();\n      } else {\n        // already has filter\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22:\n          inDouble = true;break; // \"\n        case 0x27:\n          inSingle = true;break; // '\n        case 0x28:\n          paren++;break; // (\n        case 0x29:\n          paren--;break; // )\n        case 0x5B:\n          square++;break; // [\n        case 0x5D:\n          square--;break; // ]\n        case 0x7B:\n          curly++;break; // {\n        case 0x7D:\n          curly--;break; // }\n      }\n    }\n  }\n\n  if (dir.expression == null) {\n    dir.expression = str.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  cache$1.put(s, dir);\n  return dir;\n}\n\nvar directive = Object.freeze({\n  parseDirective: parseDirective\n});\n\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\nvar cache = undefined;\nvar tagRE = undefined;\nvar htmlRE = undefined;\n/**\n * Escape a string so it can be used in a RegExp\n * constructor.\n *\n * @param {String} str\n */\n\nfunction escapeRegex(str) {\n  return str.replace(regexEscapeRE, '\\\\$&');\n}\n\nfunction compileRegex() {\n  var open = escapeRegex(config.delimiters[0]);\n  var close = escapeRegex(config.delimiters[1]);\n  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n  htmlRE = new RegExp('^' + unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '$');\n  // reset cache\n  cache = new Cache(1000);\n}\n\n/**\n * Parse a template text string into an array of tokens.\n *\n * @param {String} text\n * @return {Array<Object> | null}\n *               - {String} type\n *               - {String} value\n *               - {Boolean} [html]\n *               - {Boolean} [oneTime]\n */\n\nfunction parseText(text) {\n  if (!cache) {\n    compileRegex();\n  }\n  var hit = cache.get(text);\n  if (hit) {\n    return hit;\n  }\n  if (!tagRE.test(text)) {\n    return null;\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, html, value, first, oneTime;\n  /* eslint-disable no-cond-assign */\n  while (match = tagRE.exec(text)) {\n    /* eslint-enable no-cond-assign */\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push({\n        value: text.slice(lastIndex, index)\n      });\n    }\n    // tag token\n    html = htmlRE.test(match[0]);\n    value = html ? match[1] : match[2];\n    first = value.charCodeAt(0);\n    oneTime = first === 42; // *\n    value = oneTime ? value.slice(1) : value;\n    tokens.push({\n      tag: true,\n      value: value.trim(),\n      html: html,\n      oneTime: oneTime\n    });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push({\n      value: text.slice(lastIndex)\n    });\n  }\n  cache.put(text, tokens);\n  return tokens;\n}\n\n/**\n * Format a list of tokens into an expression.\n * e.g. tokens parsed from 'a {{b}} c' can be serialized\n * into one single expression as '\"a \" + b + \" c\"'.\n *\n * @param {Array} tokens\n * @param {Vue} [vm]\n * @return {String}\n */\n\nfunction tokensToExp(tokens, vm) {\n  if (tokens.length > 1) {\n    return tokens.map(function (token) {\n      return formatToken(token, vm);\n    }).join('+');\n  } else {\n    return formatToken(tokens[0], vm, true);\n  }\n}\n\n/**\n * Format a single token.\n *\n * @param {Object} token\n * @param {Vue} [vm]\n * @param {Boolean} [single]\n * @return {String}\n */\n\nfunction formatToken(token, vm, single) {\n  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n}\n\n/**\n * For an attribute with multiple interpolation tags,\n * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n * the whole thing into a single watchable expression, we\n * have to inline those filters. This function does exactly\n * that. This is a bit hacky but it avoids heavy changes\n * to directive parser and watcher mechanism.\n *\n * @param {String} exp\n * @param {Boolean} single\n * @return {String}\n */\n\nvar filterRE = /[^|]\\|[^|]/;\nfunction inlineFilters(exp, single) {\n  if (!filterRE.test(exp)) {\n    return single ? exp : '(' + exp + ')';\n  } else {\n    var dir = parseDirective(exp);\n    if (!dir.filters) {\n      return '(' + exp + ')';\n    } else {\n      return 'this._applyFilters(' + dir.expression + // value\n      ',null,' + // oldValue (null for read)\n      JSON.stringify(dir.filters) + // filter descriptors\n      ',false)'; // write?\n    }\n  }\n}\n\nvar text = Object.freeze({\n  compileRegex: compileRegex,\n  parseText: parseText,\n  tokensToExp: tokensToExp\n});\n\nvar delimiters = ['{{', '}}'];\nvar unsafeDelimiters = ['{{{', '}}}'];\n\nvar config = Object.defineProperties({\n\n  /**\n   * Whether to print debug messages.\n   * Also enables stack trace for warnings.\n   *\n   * @type {Boolean}\n   */\n\n  debug: false,\n\n  /**\n   * Whether to suppress warnings.\n   *\n   * @type {Boolean}\n   */\n\n  silent: false,\n\n  /**\n   * Whether to use async rendering.\n   */\n\n  async: true,\n\n  /**\n   * Whether to warn against errors caught when evaluating\n   * expressions.\n   */\n\n  warnExpressionErrors: true,\n\n  /**\n   * Whether to allow devtools inspection.\n   * Disabled by default in production builds.\n   */\n\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Internal flag to indicate the delimiters have been\n   * changed.\n   *\n   * @type {Boolean}\n   */\n\n  _delimitersChanged: true,\n\n  /**\n   * List of asset types that a component can own.\n   *\n   * @type {Array}\n   */\n\n  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\n  /**\n   * prop binding modes\n   */\n\n  _propBindingModes: {\n    ONE_WAY: 0,\n    TWO_WAY: 1,\n    ONE_TIME: 2\n  },\n\n  /**\n   * Max circular updates allowed in a batcher flush cycle.\n   */\n\n  _maxUpdateCount: 100\n\n}, {\n  delimiters: { /**\n                 * Interpolation delimiters. Changing these would trigger\n                 * the text parser to re-compile the regular expressions.\n                 *\n                 * @type {Array<String>}\n                 */\n\n    get: function get() {\n      return delimiters;\n    },\n    set: function set(val) {\n      delimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  },\n  unsafeDelimiters: {\n    get: function get() {\n      return unsafeDelimiters;\n    },\n    set: function set(val) {\n      unsafeDelimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  }\n});\n\nvar warn = undefined;\nvar formatComponentName = undefined;\n\nif (process.env.NODE_ENV !== 'production') {\n  (function () {\n    var hasConsole = typeof console !== 'undefined';\n\n    warn = function (msg, vm) {\n      if (hasConsole && !config.silent) {\n        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n      }\n    };\n\n    formatComponentName = function (vm) {\n      var name = vm._isVue ? vm.$options.name : vm.name;\n      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n    };\n  })();\n}\n\n/**\n * Append with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction appendWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    target.appendChild(el);\n  }, vm, cb);\n}\n\n/**\n * InsertBefore with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction beforeWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    before(el, target);\n  }, vm, cb);\n}\n\n/**\n * Remove with transition.\n *\n * @param {Element} el\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction removeWithTransition(el, vm, cb) {\n  applyTransition(el, -1, function () {\n    remove(el);\n  }, vm, cb);\n}\n\n/**\n * Apply transitions with an operation callback.\n *\n * @param {Element} el\n * @param {Number} direction\n *                  1: enter\n *                 -1: leave\n * @param {Function} op - the actual DOM operation\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction applyTransition(el, direction, op, vm, cb) {\n  var transition = el.__v_trans;\n  if (!transition ||\n  // skip if there are no js hooks and CSS transition is\n  // not supported\n  !transition.hooks && !transitionEndEvent ||\n  // skip transitions for initial compile\n  !vm._isCompiled ||\n  // if the vm is being manipulated by a parent directive\n  // during the parent's compilation phase, skip the\n  // animation.\n  vm.$parent && !vm.$parent._isCompiled) {\n    op();\n    if (cb) cb();\n    return;\n  }\n  var action = direction > 0 ? 'enter' : 'leave';\n  transition[action](op, cb);\n}\n\nvar transition = Object.freeze({\n  appendWithTransition: appendWithTransition,\n  beforeWithTransition: beforeWithTransition,\n  removeWithTransition: removeWithTransition,\n  applyTransition: applyTransition\n});\n\n/**\n * Query an element selector if it's not an element already.\n *\n * @param {String|Element} el\n * @return {Element}\n */\n\nfunction query(el) {\n  if (typeof el === 'string') {\n    var selector = el;\n    el = document.querySelector(el);\n    if (!el) {\n      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + selector);\n    }\n  }\n  return el;\n}\n\n/**\n * Check if a node is in the document.\n * Note: document.documentElement.contains should work here\n * but always returns false for comment nodes in phantomjs,\n * making unit tests difficult. This is fixed by doing the\n * contains() check on the node's parentNode instead of\n * the node itself.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction inDoc(node) {\n  if (!node) return false;\n  var doc = node.ownerDocument.documentElement;\n  var parent = node.parentNode;\n  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n}\n\n/**\n * Get and remove an attribute from a node.\n *\n * @param {Node} node\n * @param {String} _attr\n */\n\nfunction getAttr(node, _attr) {\n  var val = node.getAttribute(_attr);\n  if (val !== null) {\n    node.removeAttribute(_attr);\n  }\n  return val;\n}\n\n/**\n * Get an attribute with colon or v-bind: prefix.\n *\n * @param {Node} node\n * @param {String} name\n * @return {String|null}\n */\n\nfunction getBindAttr(node, name) {\n  var val = getAttr(node, ':' + name);\n  if (val === null) {\n    val = getAttr(node, 'v-bind:' + name);\n  }\n  return val;\n}\n\n/**\n * Check the presence of a bind attribute.\n *\n * @param {Node} node\n * @param {String} name\n * @return {Boolean}\n */\n\nfunction hasBindAttr(node, name) {\n  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n}\n\n/**\n * Insert el before target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction before(el, target) {\n  target.parentNode.insertBefore(el, target);\n}\n\n/**\n * Insert el after target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction after(el, target) {\n  if (target.nextSibling) {\n    before(el, target.nextSibling);\n  } else {\n    target.parentNode.appendChild(el);\n  }\n}\n\n/**\n * Remove el from DOM\n *\n * @param {Element} el\n */\n\nfunction remove(el) {\n  el.parentNode.removeChild(el);\n}\n\n/**\n * Prepend el to target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction prepend(el, target) {\n  if (target.firstChild) {\n    before(el, target.firstChild);\n  } else {\n    target.appendChild(el);\n  }\n}\n\n/**\n * Replace target with el\n *\n * @param {Element} target\n * @param {Element} el\n */\n\nfunction replace(target, el) {\n  var parent = target.parentNode;\n  if (parent) {\n    parent.replaceChild(el, target);\n  }\n}\n\n/**\n * Add event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n * @param {Boolean} [useCapture]\n */\n\nfunction on(el, event, cb, useCapture) {\n  el.addEventListener(event, cb, useCapture);\n}\n\n/**\n * Remove event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n */\n\nfunction off(el, event, cb) {\n  el.removeEventListener(event, cb);\n}\n\n/**\n * For IE9 compat: when both class and :class are present\n * getAttribute('class') returns wrong value...\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getClass(el) {\n  var classname = el.className;\n  if (typeof classname === 'object') {\n    classname = classname.baseVal || '';\n  }\n  return classname;\n}\n\n/**\n * In IE9, setAttribute('class') will result in empty class\n * if the element also has the :class attribute; However in\n * PhantomJS, setting `className` does not work on SVG elements...\n * So we have to do a conditional check here.\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction setClass(el, cls) {\n  /* istanbul ignore if */\n  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n    el.className = cls;\n  } else {\n    el.setAttribute('class', cls);\n  }\n}\n\n/**\n * Add class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction addClass(el, cls) {\n  if (el.classList) {\n    el.classList.add(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      setClass(el, (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction removeClass(el, cls) {\n  if (el.classList) {\n    el.classList.remove(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    setClass(el, cur.trim());\n  }\n  if (!el.className) {\n    el.removeAttribute('class');\n  }\n}\n\n/**\n * Extract raw content inside an element into a temporary\n * container div\n *\n * @param {Element} el\n * @param {Boolean} asFragment\n * @return {Element|DocumentFragment}\n */\n\nfunction extractContent(el, asFragment) {\n  var child;\n  var rawContent;\n  /* istanbul ignore if */\n  if (isTemplate(el) && isFragment(el.content)) {\n    el = el.content;\n  }\n  if (el.hasChildNodes()) {\n    trimNode(el);\n    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n    /* eslint-disable no-cond-assign */\n    while (child = el.firstChild) {\n      /* eslint-enable no-cond-assign */\n      rawContent.appendChild(child);\n    }\n  }\n  return rawContent;\n}\n\n/**\n * Trim possible empty head/tail text and comment\n * nodes inside a parent.\n *\n * @param {Node} node\n */\n\nfunction trimNode(node) {\n  var child;\n  /* eslint-disable no-sequences */\n  while ((child = node.firstChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  while ((child = node.lastChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  /* eslint-enable no-sequences */\n}\n\nfunction isTrimmable(node) {\n  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n}\n\n/**\n * Check if an element is a template tag.\n * Note if the template appears inside an SVG its tagName\n * will be in lowercase.\n *\n * @param {Element} el\n */\n\nfunction isTemplate(el) {\n  return el.tagName && el.tagName.toLowerCase() === 'template';\n}\n\n/**\n * Create an \"anchor\" for performing dom insertion/removals.\n * This is used in a number of scenarios:\n * - fragment instance\n * - v-html\n * - v-if\n * - v-for\n * - component\n *\n * @param {String} content\n * @param {Boolean} persist - IE trashes empty textNodes on\n *                            cloneNode(true), so in certain\n *                            cases the anchor needs to be\n *                            non-empty to be persisted in\n *                            templates.\n * @return {Comment|Text}\n */\n\nfunction createAnchor(content, persist) {\n  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n  anchor.__v_anchor = true;\n  return anchor;\n}\n\n/**\n * Find a component ref attribute that starts with $.\n *\n * @param {Element} node\n * @return {String|undefined}\n */\n\nvar refRE = /^v-ref:/;\n\nfunction findRef(node) {\n  if (node.hasAttributes()) {\n    var attrs = node.attributes;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      var name = attrs[i].name;\n      if (refRE.test(name)) {\n        return camelize(name.replace(refRE, ''));\n      }\n    }\n  }\n}\n\n/**\n * Map a function to a range of nodes .\n *\n * @param {Node} node\n * @param {Node} end\n * @param {Function} op\n */\n\nfunction mapNodeRange(node, end, op) {\n  var next;\n  while (node !== end) {\n    next = node.nextSibling;\n    op(node);\n    node = next;\n  }\n  op(end);\n}\n\n/**\n * Remove a range of nodes with transition, store\n * the nodes in a fragment with correct ordering,\n * and call callback when done.\n *\n * @param {Node} start\n * @param {Node} end\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Function} cb\n */\n\nfunction removeNodeRange(start, end, vm, frag, cb) {\n  var done = false;\n  var removed = 0;\n  var nodes = [];\n  mapNodeRange(start, end, function (node) {\n    if (node === end) done = true;\n    nodes.push(node);\n    removeWithTransition(node, vm, onRemoved);\n  });\n  function onRemoved() {\n    removed++;\n    if (done && removed >= nodes.length) {\n      for (var i = 0; i < nodes.length; i++) {\n        frag.appendChild(nodes[i]);\n      }\n      cb && cb();\n    }\n  }\n}\n\n/**\n * Check if a node is a DocumentFragment.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isFragment(node) {\n  return node && node.nodeType === 11;\n}\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getOuterHTML(el) {\n  if (el.outerHTML) {\n    return el.outerHTML;\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML;\n  }\n}\n\nvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\nvar reservedTagRE = /^(slot|partial|component)$/i;\n\nvar isUnknownElement = undefined;\nif (process.env.NODE_ENV !== 'production') {\n  isUnknownElement = function (el, tag) {\n    if (tag.indexOf('-') > -1) {\n      // http://stackoverflow.com/a/28210364/1070244\n      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n    } else {\n      return (/HTMLUnknownElement/.test(el.toString()) &&\n        // Chrome returns unknown for several HTML5 elements.\n        // https://code.google.com/p/chromium/issues/detail?id=540526\n        // Firefox returns unknown for some \"Interactive elements.\"\n        !/^(data|time|rtc|rb|details|dialog|summary)$/.test(tag)\n      );\n    }\n  };\n}\n\n/**\n * Check if an element is a component, if yes return its\n * component id.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction checkComponentAttr(el, options) {\n  var tag = el.tagName.toLowerCase();\n  var hasAttrs = el.hasAttributes();\n  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n    if (resolveAsset(options, 'components', tag)) {\n      return { id: tag };\n    } else {\n      var is = hasAttrs && getIsBinding(el, options);\n      if (is) {\n        return is;\n      } else if (process.env.NODE_ENV !== 'production') {\n        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n        if (expectedTag) {\n          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n        } else if (isUnknownElement(el, tag)) {\n          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n        }\n      }\n    }\n  } else if (hasAttrs) {\n    return getIsBinding(el, options);\n  }\n}\n\n/**\n * Get \"is\" binding from an element.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction getIsBinding(el, options) {\n  // dynamic syntax\n  var exp = el.getAttribute('is');\n  if (exp != null) {\n    if (resolveAsset(options, 'components', exp)) {\n      el.removeAttribute('is');\n      return { id: exp };\n    }\n  } else {\n    exp = getBindAttr(el, 'is');\n    if (exp != null) {\n      return { id: exp, dynamic: true };\n    }\n  }\n}\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n *\n * All strategy functions follow the same signature:\n *\n * @param {*} parentVal\n * @param {*} childVal\n * @param {Vue} [vm]\n */\n\nvar strats = config.optionMergeStrategies = Object.create(null);\n\n/**\n * Helper that recursively merges two data objects together.\n */\n\nfunction mergeData(to, from) {\n  var key, toVal, fromVal;\n  for (key in from) {\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isObject(toVal) && isObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to;\n}\n\n/**\n * Data\n */\n\nstrats.data = function (parentVal, childVal, vm) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal;\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n      return parentVal;\n    }\n    if (!parentVal) {\n      return childVal;\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn() {\n      return mergeData(childVal.call(this), parentVal.call(this));\n    };\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn() {\n      // instance merge\n      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData);\n      } else {\n        return defaultData;\n      }\n    };\n  }\n};\n\n/**\n * El\n */\n\nstrats.el = function (parentVal, childVal, vm) {\n  if (!vm && childVal && typeof childVal !== 'function') {\n    process.env.NODE_ENV !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n    return;\n  }\n  var ret = childVal || parentVal;\n  // invoke the element factory if this is instance merge\n  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n};\n\n/**\n * Hooks and param attributes are merged as arrays.\n */\n\nstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n};\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\n\nfunction mergeAssets(parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Events & Watchers.\n *\n * Events & watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\n\nstrats.watch = strats.events = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent ? parent.concat(child) : [child];\n  }\n  return ret;\n};\n\n/**\n * Other object hashes.\n */\n\nstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret;\n};\n\n/**\n * Default strategy.\n */\n\nvar defaultStrat = function defaultStrat(parentVal, childVal) {\n  return childVal === undefined ? parentVal : childVal;\n};\n\n/**\n * Make sure component options get converted to actual\n * constructors.\n *\n * @param {Object} options\n */\n\nfunction guardComponents(options) {\n  if (options.components) {\n    var components = options.components = guardArrayAssets(options.components);\n    var ids = Object.keys(components);\n    var def;\n    if (process.env.NODE_ENV !== 'production') {\n      var map = options._componentNameMap = {};\n    }\n    for (var i = 0, l = ids.length; i < l; i++) {\n      var key = ids[i];\n      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n        continue;\n      }\n      // record a all lowercase <-> kebab-case mapping for\n      // possible custom element case error warning\n      if (process.env.NODE_ENV !== 'production') {\n        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n      }\n      def = components[key];\n      if (isPlainObject(def)) {\n        components[key] = Vue.extend(def);\n      }\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n *\n * @param {Object} options\n */\n\nfunction guardProps(options) {\n  var props = options.props;\n  var i, val;\n  if (isArray(props)) {\n    options.props = {};\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        options.props[val] = null;\n      } else if (val.name) {\n        options.props[val.name] = val;\n      }\n    }\n  } else if (isPlainObject(props)) {\n    var keys = Object.keys(props);\n    i = keys.length;\n    while (i--) {\n      val = props[keys[i]];\n      if (typeof val === 'function') {\n        props[keys[i]] = { type: val };\n      }\n    }\n  }\n}\n\n/**\n * Guard an Array-format assets option and converted it\n * into the key-value Object format.\n *\n * @param {Object|Array} assets\n * @return {Object}\n */\n\nfunction guardArrayAssets(assets) {\n  if (isArray(assets)) {\n    var res = {};\n    var i = assets.length;\n    var asset;\n    while (i--) {\n      asset = assets[i];\n      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n      if (!id) {\n        process.env.NODE_ENV !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n      } else {\n        res[id] = asset;\n      }\n    }\n    return res;\n  }\n  return assets;\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n *\n * @param {Object} parent\n * @param {Object} child\n * @param {Vue} [vm] - if vm is present, indicates this is\n *                     an instantiation merge.\n */\n\nfunction mergeOptions(parent, child, vm) {\n  guardComponents(child);\n  guardProps(child);\n  if (process.env.NODE_ENV !== 'production') {\n    if (child.propsData && !vm) {\n      warn('propsData can only be used as an instantiation option.');\n    }\n  }\n  var options = {};\n  var key;\n  if (child['extends']) {\n    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      var mixin = child.mixins[i];\n      var mixinOptions = mixin.prototype instanceof Vue ? mixin.options : mixin;\n      parent = mergeOptions(parent, mixinOptions, vm);\n    }\n  }\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField(key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options;\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n *\n * @param {Object} options\n * @param {String} type\n * @param {String} id\n * @param {Boolean} warnMissing\n * @return {Object|Function}\n */\n\nfunction resolveAsset(options, type, id, warnMissing) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return;\n  }\n  var assets = options[type];\n  var camelizedId;\n  var res = assets[id] ||\n  // camelCase ID\n  assets[camelizedId = camelize(id)] ||\n  // Pascal Case ID\n  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n  }\n  return res;\n}\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n *\n * @constructor\n */\nfunction Dep() {\n  this.id = uid$1++;\n  this.subs = [];\n}\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\n\n/**\n * Add a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.addSub = function (sub) {\n  this.subs.push(sub);\n};\n\n/**\n * Remove a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.removeSub = function (sub) {\n  this.subs.$remove(sub);\n};\n\n/**\n * Add self as a dependency to the target watcher.\n */\n\nDep.prototype.depend = function () {\n  Dep.target.addDep(this);\n};\n\n/**\n * Notify all subscribers of a new value.\n */\n\nDep.prototype.notify = function () {\n  // stablize the subscriber list first\n  var subs = toArray(this.subs);\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto)\n\n/**\n * Intercept mutating methods and emit events\n */\n\n;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator() {\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break;\n      case 'unshift':\n        inserted = args;\n        break;\n      case 'splice':\n        inserted = args.slice(2);\n        break;\n    }\n    if (inserted) ob.observeArray(inserted);\n    // notify change\n    ob.dep.notify();\n    return result;\n  });\n});\n\n/**\n * Swap the element at the given index with a new value\n * and emits corresponding event.\n *\n * @param {Number} index\n * @param {*} val\n * @return {*} - replaced element\n */\n\ndef(arrayProto, '$set', function $set(index, val) {\n  if (index >= this.length) {\n    this.length = Number(index) + 1;\n  }\n  return this.splice(index, 1, val)[0];\n});\n\n/**\n * Convenience method to remove the element at given index or target element reference.\n *\n * @param {*} item\n */\n\ndef(arrayProto, '$remove', function $remove(item) {\n  /* istanbul ignore if */\n  if (!this.length) return;\n  var index = indexOf(this, item);\n  if (index > -1) {\n    return this.splice(index, 1);\n  }\n});\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However in certain cases, e.g.\n * v-for scope alias and props, we don't want to force conversion\n * because the value may be a nested value under a frozen data structure.\n *\n * So whenever we want to set a reactive property without forcing\n * conversion on the new value, we wrap that call inside this function.\n */\n\nvar shouldConvert = true;\n\nfunction withoutConversion(fn) {\n  shouldConvert = false;\n  fn();\n  shouldConvert = true;\n}\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n *\n * @param {Array|Object} value\n * @constructor\n */\n\nfunction Observer(value) {\n  this.value = value;\n  this.dep = new Dep();\n  def(value, '__ob__', this);\n  if (isArray(value)) {\n    var augment = hasProto ? protoAugment : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n}\n\n// Instance methods\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n *\n * @param {Object} obj\n */\n\nObserver.prototype.walk = function (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    this.convert(keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n *\n * @param {Array} items\n */\n\nObserver.prototype.observeArray = function (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n/**\n * Convert a property into getter/setter so we can emit\n * the events when the property is accessed/changed.\n *\n * @param {String} key\n * @param {*} val\n */\n\nObserver.prototype.convert = function (key, val) {\n  defineReactive(this.value, key, val);\n};\n\n/**\n * Add an owner vm, so that when $set/$delete mutations\n * happen we can notify owner vms to proxy the keys and\n * digest the watchers. This is only called when the object\n * is observed as an instance's root $data.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.addVm = function (vm) {\n  (this.vms || (this.vms = [])).push(vm);\n};\n\n/**\n * Remove an owner vm. This is called when the object is\n * swapped out as an instance's $data object.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.removeVm = function (vm) {\n  this.vms.$remove(vm);\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n *\n * @param {Object|Array} target\n * @param {Object} src\n */\n\nfunction protoAugment(target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction copyAugment(target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n *\n * @param {*} value\n * @param {Vue} [vm]\n * @return {Observer|undefined}\n * @static\n */\n\nfunction observe(value, vm) {\n  if (!value || typeof value !== 'object') {\n    return;\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n    ob = new Observer(value);\n  }\n  if (ob && vm) {\n    ob.addVm(vm);\n  }\n  return ob;\n}\n\n/**\n * Define a reactive property on an Object.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n */\n\nfunction defineReactive(obj, key, val) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return;\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter() {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (isArray(value)) {\n          for (var e, i = 0, l = value.length; i < l; i++) {\n            e = value[i];\n            e && e.__ob__ && e.__ob__.dep.depend();\n          }\n        }\n      }\n      return value;\n    },\n    set: function reactiveSetter(newVal) {\n      var value = getter ? getter.call(obj) : val;\n      if (newVal === value) {\n        return;\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n\n\nvar util = Object.freeze({\n\tdefineReactive: defineReactive,\n\tset: set,\n\tdel: del,\n\thasOwn: hasOwn,\n\tisLiteral: isLiteral,\n\tisReserved: isReserved,\n\t_toString: _toString,\n\ttoNumber: toNumber,\n\ttoBoolean: toBoolean,\n\tstripQuotes: stripQuotes,\n\tcamelize: camelize,\n\thyphenate: hyphenate,\n\tclassify: classify,\n\tbind: bind,\n\ttoArray: toArray,\n\textend: extend,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\tdef: def,\n\tdebounce: _debounce,\n\tindexOf: indexOf,\n\tcancellable: cancellable,\n\tlooseEqual: looseEqual,\n\tisArray: isArray,\n\thasProto: hasProto,\n\tinBrowser: inBrowser,\n\tdevtools: devtools,\n\tisIE: isIE,\n\tisIE9: isIE9,\n\tisAndroid: isAndroid,\n\tisIos: isIos,\n\tiosVersionMatch: iosVersionMatch,\n\tiosVersion: iosVersion,\n\thasMutationObserverBug: hasMutationObserverBug,\n\tget transitionProp () { return transitionProp; },\n\tget transitionEndEvent () { return transitionEndEvent; },\n\tget animationProp () { return animationProp; },\n\tget animationEndEvent () { return animationEndEvent; },\n\tnextTick: nextTick,\n\tget _Set () { return _Set; },\n\tquery: query,\n\tinDoc: inDoc,\n\tgetAttr: getAttr,\n\tgetBindAttr: getBindAttr,\n\thasBindAttr: hasBindAttr,\n\tbefore: before,\n\tafter: after,\n\tremove: remove,\n\tprepend: prepend,\n\treplace: replace,\n\ton: on,\n\toff: off,\n\tsetClass: setClass,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\textractContent: extractContent,\n\ttrimNode: trimNode,\n\tisTemplate: isTemplate,\n\tcreateAnchor: createAnchor,\n\tfindRef: findRef,\n\tmapNodeRange: mapNodeRange,\n\tremoveNodeRange: removeNodeRange,\n\tisFragment: isFragment,\n\tgetOuterHTML: getOuterHTML,\n\tmergeOptions: mergeOptions,\n\tresolveAsset: resolveAsset,\n\tcheckComponentAttr: checkComponentAttr,\n\tcommonTagRE: commonTagRE,\n\treservedTagRE: reservedTagRE,\n\tget warn () { return warn; }\n});\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  /**\n   * The main init sequence. This is called for every\n   * instance, including ones that are created from extended\n   * constructors.\n   *\n   * @param {Object} options - this options object should be\n   *                           the result of merging class\n   *                           options and the options passed\n   *                           in to the constructor.\n   */\n\n  Vue.prototype._init = function (options) {\n    options = options || {};\n\n    this.$el = null;\n    this.$parent = options.parent;\n    this.$root = this.$parent ? this.$parent.$root : this;\n    this.$children = [];\n    this.$refs = {}; // child vm references\n    this.$els = {}; // element references\n    this._watchers = []; // all watchers as an array\n    this._directives = []; // all directives\n\n    // a uid\n    this._uid = uid++;\n\n    // a flag to avoid this being observed\n    this._isVue = true;\n\n    // events bookkeeping\n    this._events = {}; // registered callbacks\n    this._eventsCount = {}; // for $broadcast optimization\n\n    // fragment instance properties\n    this._isFragment = false;\n    this._fragment = // @type {DocumentFragment}\n    this._fragmentStart = // @type {Text|Comment}\n    this._fragmentEnd = null; // @type {Text|Comment}\n\n    // lifecycle state\n    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n    this._unlinkFn = null;\n\n    // context:\n    // if this is a transcluded component, context\n    // will be the common parent vm of this instance\n    // and its host.\n    this._context = options._context || this.$parent;\n\n    // scope:\n    // if this is inside an inline v-for, the scope\n    // will be the intermediate scope created for this\n    // repeat fragment. this is used for linking props\n    // and container directives.\n    this._scope = options._scope;\n\n    // fragment:\n    // if this instance is compiled inside a Fragment, it\n    // needs to reigster itself as a child of that fragment\n    // for attach/detach to work properly.\n    this._frag = options._frag;\n    if (this._frag) {\n      this._frag.children.push(this);\n    }\n\n    // push self into parent / transclusion host\n    if (this.$parent) {\n      this.$parent.$children.push(this);\n    }\n\n    // merge options.\n    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\n    // set ref\n    this._updateRef();\n\n    // initialize data as empty object.\n    // it will be filled up in _initData().\n    this._data = {};\n\n    // call init hook\n    this._callHook('init');\n\n    // initialize data observation and scope inheritance.\n    this._initState();\n\n    // setup event system and option events.\n    this._initEvents();\n\n    // call created hook\n    this._callHook('created');\n\n    // if `el` option is passed, start compilation.\n    if (options.el) {\n      this.$mount(options.el);\n    }\n  };\n}\n\nvar pathCache = new Cache(1000);\n\n// actions\nvar APPEND = 0;\nvar PUSH = 1;\nvar INC_SUB_PATH_DEPTH = 2;\nvar PUSH_SUB_PATH = 3;\n\n// states\nvar BEFORE_PATH = 0;\nvar IN_PATH = 1;\nvar BEFORE_IDENT = 2;\nvar IN_IDENT = 3;\nvar IN_SUB_PATH = 4;\nvar IN_SINGLE_QUOTE = 5;\nvar IN_DOUBLE_QUOTE = 6;\nvar AFTER_PATH = 7;\nvar ERROR = 8;\n\nvar pathStateMachine = [];\n\npathStateMachine[BEFORE_PATH] = {\n  'ws': [BEFORE_PATH],\n  'ident': [IN_IDENT, APPEND],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[IN_PATH] = {\n  'ws': [IN_PATH],\n  '.': [BEFORE_IDENT],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[BEFORE_IDENT] = {\n  'ws': [BEFORE_IDENT],\n  'ident': [IN_IDENT, APPEND]\n};\n\npathStateMachine[IN_IDENT] = {\n  'ident': [IN_IDENT, APPEND],\n  '0': [IN_IDENT, APPEND],\n  'number': [IN_IDENT, APPEND],\n  'ws': [IN_PATH, PUSH],\n  '.': [BEFORE_IDENT, PUSH],\n  '[': [IN_SUB_PATH, PUSH],\n  'eof': [AFTER_PATH, PUSH]\n};\n\npathStateMachine[IN_SUB_PATH] = {\n  \"'\": [IN_SINGLE_QUOTE, APPEND],\n  '\"': [IN_DOUBLE_QUOTE, APPEND],\n  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n  ']': [IN_PATH, PUSH_SUB_PATH],\n  'eof': ERROR,\n  'else': [IN_SUB_PATH, APPEND]\n};\n\npathStateMachine[IN_SINGLE_QUOTE] = {\n  \"'\": [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_SINGLE_QUOTE, APPEND]\n};\n\npathStateMachine[IN_DOUBLE_QUOTE] = {\n  '\"': [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_DOUBLE_QUOTE, APPEND]\n};\n\n/**\n * Determine the type of a character in a keypath.\n *\n * @param {Char} ch\n * @return {String} type\n */\n\nfunction getPathCharType(ch) {\n  if (ch === undefined) {\n    return 'eof';\n  }\n\n  var code = ch.charCodeAt(0);\n\n  switch (code) {\n    case 0x5B: // [\n    case 0x5D: // ]\n    case 0x2E: // .\n    case 0x22: // \"\n    case 0x27: // '\n    case 0x30:\n      // 0\n      return ch;\n\n    case 0x5F: // _\n    case 0x24:\n      // $\n      return 'ident';\n\n    case 0x20: // Space\n    case 0x09: // Tab\n    case 0x0A: // Newline\n    case 0x0D: // Return\n    case 0xA0: // No-break space\n    case 0xFEFF: // Byte Order Mark\n    case 0x2028: // Line Separator\n    case 0x2029:\n      // Paragraph Separator\n      return 'ws';\n  }\n\n  // a-z, A-Z\n  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n    return 'ident';\n  }\n\n  // 1-9\n  if (code >= 0x31 && code <= 0x39) {\n    return 'number';\n  }\n\n  return 'else';\n}\n\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n *\n * @param {String} path\n * @return {String}\n */\n\nfunction formatSubPath(path) {\n  var trimmed = path.trim();\n  // invalid leading 0\n  if (path.charAt(0) === '0' && isNaN(path)) {\n    return false;\n  }\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n}\n\n/**\n * Parse a string path into an array of segments\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parse(path) {\n  var keys = [];\n  var index = -1;\n  var mode = BEFORE_PATH;\n  var subPathDepth = 0;\n  var c, newChar, key, type, transition, action, typeMap;\n\n  var actions = [];\n\n  actions[PUSH] = function () {\n    if (key !== undefined) {\n      keys.push(key);\n      key = undefined;\n    }\n  };\n\n  actions[APPEND] = function () {\n    if (key === undefined) {\n      key = newChar;\n    } else {\n      key += newChar;\n    }\n  };\n\n  actions[INC_SUB_PATH_DEPTH] = function () {\n    actions[APPEND]();\n    subPathDepth++;\n  };\n\n  actions[PUSH_SUB_PATH] = function () {\n    if (subPathDepth > 0) {\n      subPathDepth--;\n      mode = IN_SUB_PATH;\n      actions[APPEND]();\n    } else {\n      subPathDepth = 0;\n      key = formatSubPath(key);\n      if (key === false) {\n        return false;\n      } else {\n        actions[PUSH]();\n      }\n    }\n  };\n\n  function maybeUnescapeQuote() {\n    var nextChar = path[index + 1];\n    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n      index++;\n      newChar = '\\\\' + nextChar;\n      actions[APPEND]();\n      return true;\n    }\n  }\n\n  while (mode != null) {\n    index++;\n    c = path[index];\n\n    if (c === '\\\\' && maybeUnescapeQuote()) {\n      continue;\n    }\n\n    type = getPathCharType(c);\n    typeMap = pathStateMachine[mode];\n    transition = typeMap[type] || typeMap['else'] || ERROR;\n\n    if (transition === ERROR) {\n      return; // parse error\n    }\n\n    mode = transition[0];\n    action = actions[transition[1]];\n    if (action) {\n      newChar = transition[2];\n      newChar = newChar === undefined ? c : newChar;\n      if (action() === false) {\n        return;\n      }\n    }\n\n    if (mode === AFTER_PATH) {\n      keys.raw = path;\n      return keys;\n    }\n  }\n}\n\n/**\n * External parse that check for a cache hit first\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parsePath(path) {\n  var hit = pathCache.get(path);\n  if (!hit) {\n    hit = parse(path);\n    if (hit) {\n      pathCache.put(path, hit);\n    }\n  }\n  return hit;\n}\n\n/**\n * Get from an object from a path string\n *\n * @param {Object} obj\n * @param {String} path\n */\n\nfunction getPath(obj, path) {\n  return parseExpression(path).get(obj);\n}\n\n/**\n * Warn against setting non-existent root path on a vm.\n */\n\nvar warnNonExistent;\nif (process.env.NODE_ENV !== 'production') {\n  warnNonExistent = function (path, vm) {\n    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n  };\n}\n\n/**\n * Set on an object from a path\n *\n * @param {Object} obj\n * @param {String | Array} path\n * @param {*} val\n */\n\nfunction setPath(obj, path, val) {\n  var original = obj;\n  if (typeof path === 'string') {\n    path = parse(path);\n  }\n  if (!path || !isObject(obj)) {\n    return false;\n  }\n  var last, key;\n  for (var i = 0, l = path.length; i < l; i++) {\n    last = obj;\n    key = path[i];\n    if (key.charAt(0) === '*') {\n      key = parseExpression(key.slice(1)).get.call(original, original);\n    }\n    if (i < l - 1) {\n      obj = obj[key];\n      if (!isObject(obj)) {\n        obj = {};\n        if (process.env.NODE_ENV !== 'production' && last._isVue) {\n          warnNonExistent(path, last);\n        }\n        set(last, key, obj);\n      }\n    } else {\n      if (isArray(obj)) {\n        obj.$set(key, val);\n      } else if (key in obj) {\n        obj[key] = val;\n      } else {\n        if (process.env.NODE_ENV !== 'production' && obj._isVue) {\n          warnNonExistent(path, obj);\n        }\n        set(obj, key, val);\n      }\n    }\n  }\n  return true;\n}\n\nvar path = Object.freeze({\n  parsePath: parsePath,\n  getPath: getPath,\n  setPath: setPath\n});\n\nvar expressionCache = new Cache(1000);\n\nvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\nvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n// keywords that don't make sense inside expressions\nvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\nvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\nvar wsRE = /\\s/g;\nvar newlineRE = /\\n/g;\nvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\nvar restoreRE = /\"(\\d+)\"/g;\nvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\nvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\nvar literalValueRE$1 = /^(?:true|false|null|undefined|Infinity|NaN)$/;\n\nfunction noop() {}\n\n/**\n * Save / Rewrite / Restore\n *\n * When rewriting paths found in an expression, it is\n * possible for the same letter sequences to be found in\n * strings and Object literal property keys. Therefore we\n * remove and store these parts in a temporary array, and\n * restore them after the path rewrite.\n */\n\nvar saved = [];\n\n/**\n * Save replacer\n *\n * The save regex can match two possible cases:\n * 1. An opening object literal\n * 2. A string\n * If matched as a plain string, we need to escape its\n * newlines, since the string needs to be preserved when\n * generating the function body.\n *\n * @param {String} str\n * @param {String} isString - str if matched as a string\n * @return {String} - placeholder with index\n */\n\nfunction save(str, isString) {\n  var i = saved.length;\n  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n  return '\"' + i + '\"';\n}\n\n/**\n * Path rewrite replacer\n *\n * @param {String} raw\n * @return {String}\n */\n\nfunction rewrite(raw) {\n  var c = raw.charAt(0);\n  var path = raw.slice(1);\n  if (allowedKeywordsRE.test(path)) {\n    return raw;\n  } else {\n    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n    return c + 'scope.' + path;\n  }\n}\n\n/**\n * Restore replacer\n *\n * @param {String} str\n * @param {String} i - matched save index\n * @return {String}\n */\n\nfunction restore(str, i) {\n  return saved[i];\n}\n\n/**\n * Rewrite an expression, prefixing all path accessors with\n * `scope.` and generate getter/setter functions.\n *\n * @param {String} exp\n * @return {Function}\n */\n\nfunction compileGetter(exp) {\n  if (improperKeywordsRE.test(exp)) {\n    process.env.NODE_ENV !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n  }\n  // reset state\n  saved.length = 0;\n  // save strings and object literal keys\n  var body = exp.replace(saveRE, save).replace(wsRE, '');\n  // rewrite all paths\n  // pad 1 space here because the regex matches 1 extra char\n  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n  return makeGetterFn(body);\n}\n\n/**\n * Build a getter function. Requires eval.\n *\n * We isolate the try/catch so it doesn't affect the\n * optimization of the parse function when it is not called.\n *\n * @param {String} body\n * @return {Function|undefined}\n */\n\nfunction makeGetterFn(body) {\n  try {\n    /* eslint-disable no-new-func */\n    return new Function('scope', 'return ' + body + ';');\n    /* eslint-enable no-new-func */\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if (e.toString().match(/unsafe-eval|CSP/)) {\n        warn('It seems you are using the default build of Vue.js in an environment ' + 'with Content Security Policy that prohibits unsafe-eval. ' + 'Use the CSP-compliant build instead: ' + 'http://vuejs.org/guide/installation.html#CSP-compliant-build');\n      } else {\n        warn('Invalid expression. ' + 'Generated function body: ' + body);\n      }\n    }\n    return noop;\n  }\n}\n\n/**\n * Compile a setter function for the expression.\n *\n * @param {String} exp\n * @return {Function|undefined}\n */\n\nfunction compileSetter(exp) {\n  var path = parsePath(exp);\n  if (path) {\n    return function (scope, val) {\n      setPath(scope, path, val);\n    };\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid setter expression: ' + exp);\n  }\n}\n\n/**\n * Parse an expression into re-written getter/setters.\n *\n * @param {String} exp\n * @param {Boolean} needSet\n * @return {Function}\n */\n\nfunction parseExpression(exp, needSet) {\n  exp = exp.trim();\n  // try cache\n  var hit = expressionCache.get(exp);\n  if (hit) {\n    if (needSet && !hit.set) {\n      hit.set = compileSetter(hit.exp);\n    }\n    return hit;\n  }\n  var res = { exp: exp };\n  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n  // optimized super simple getter\n  ? makeGetterFn('scope.' + exp)\n  // dynamic getter\n  : compileGetter(exp);\n  if (needSet) {\n    res.set = compileSetter(exp);\n  }\n  expressionCache.put(exp, res);\n  return res;\n}\n\n/**\n * Check if an expression is a simple path.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nfunction isSimplePath(exp) {\n  return pathTestRE.test(exp) &&\n  // don't treat literal values as paths\n  !literalValueRE$1.test(exp) &&\n  // Math constants e.g. Math.PI, Math.E etc.\n  exp.slice(0, 5) !== 'Math.';\n}\n\nvar expression = Object.freeze({\n  parseExpression: parseExpression,\n  isSimplePath: isSimplePath\n});\n\n// we have two separate queues: one for directive updates\n// and one for user watcher registered via $watch().\n// we want to guarantee directive updates to be called\n// before user watchers so that when user watchers are\n// triggered, the DOM would have already been in updated\n// state.\n\nvar queue = [];\nvar userQueue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\n\n/**\n * Reset the batcher's state.\n */\n\nfunction resetBatcherState() {\n  queue.length = 0;\n  userQueue.length = 0;\n  has = {};\n  circular = {};\n  waiting = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\n\nfunction flushBatcherQueue() {\n  var _again = true;\n\n  _function: while (_again) {\n    _again = false;\n\n    runBatcherQueue(queue);\n    runBatcherQueue(userQueue);\n    // user watchers triggered more watchers,\n    // keep flushing until it depletes\n    if (queue.length) {\n      _again = true;\n      continue _function;\n    }\n    // dev tool hook\n    /* istanbul ignore if */\n    if (devtools && config.devtools) {\n      devtools.emit('flush');\n    }\n    resetBatcherState();\n  }\n}\n\n/**\n * Run the watchers in a single queue.\n *\n * @param {Array} queue\n */\n\nfunction runBatcherQueue(queue) {\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (var i = 0; i < queue.length; i++) {\n    var watcher = queue[i];\n    var id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n        break;\n      }\n    }\n  }\n  queue.length = 0;\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n *\n * @param {Watcher} watcher\n *   properties:\n *   - {Number} id\n *   - {Function} run\n */\n\nfunction pushWatcher(watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    // push watcher into appropriate queue\n    var q = watcher.user ? userQueue : queue;\n    has[id] = q.length;\n    q.push(watcher);\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushBatcherQueue);\n    }\n  }\n}\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n *\n * @param {Vue} vm\n * @param {String|Function} expOrFn\n * @param {Function} cb\n * @param {Object} options\n *                 - {Array} filters\n *                 - {Boolean} twoWay\n *                 - {Boolean} deep\n *                 - {Boolean} user\n *                 - {Boolean} sync\n *                 - {Boolean} lazy\n *                 - {Function} [preProcess]\n *                 - {Function} [postProcess]\n * @constructor\n */\nfunction Watcher(vm, expOrFn, cb, options) {\n  // mix in options\n  if (options) {\n    extend(this, options);\n  }\n  var isFn = typeof expOrFn === 'function';\n  this.vm = vm;\n  vm._watchers.push(this);\n  this.expression = expOrFn;\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.prevError = null; // for async error stacks\n  // parse expression for getter/setter\n  if (isFn) {\n    this.getter = expOrFn;\n    this.setter = undefined;\n  } else {\n    var res = parseExpression(expOrFn, this.twoWay);\n    this.getter = res.get;\n    this.setter = res.set;\n  }\n  this.value = this.lazy ? undefined : this.get();\n  // state for avoiding false triggers for deep and Array\n  // watchers during vm._digest()\n  this.queued = this.shallow = false;\n}\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\n\nWatcher.prototype.get = function () {\n  this.beforeGet();\n  var scope = this.scope || this.vm;\n  var value;\n  try {\n    value = this.getter.call(scope, scope);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  if (this.preProcess) {\n    value = this.preProcess(value);\n  }\n  if (this.filters) {\n    value = scope._applyFilters(value, null, this.filters, false);\n  }\n  if (this.postProcess) {\n    value = this.postProcess(value);\n  }\n  this.afterGet();\n  return value;\n};\n\n/**\n * Set the corresponding value with the setter.\n *\n * @param {*} value\n */\n\nWatcher.prototype.set = function (value) {\n  var scope = this.scope || this.vm;\n  if (this.filters) {\n    value = scope._applyFilters(value, this.value, this.filters, true);\n  }\n  try {\n    this.setter.call(scope, scope, value);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // two-way sync for v-for alias\n  var forContext = scope.$forContext;\n  if (forContext && forContext.alias === this.expression) {\n    if (forContext.filters) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n      return;\n    }\n    forContext._withLock(function () {\n      if (scope.$key) {\n        // original is an object\n        forContext.rawValue[scope.$key] = value;\n      } else {\n        forContext.rawValue.$set(scope.$index, value);\n      }\n    });\n  }\n};\n\n/**\n * Prepare for dependency collection.\n */\n\nWatcher.prototype.beforeGet = function () {\n  Dep.target = this;\n};\n\n/**\n * Add a dependency to this directive.\n *\n * @param {Dep} dep\n */\n\nWatcher.prototype.addDep = function (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\n\nWatcher.prototype.afterGet = function () {\n  Dep.target = null;\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds.has(dep.id)) {\n      dep.removeSub(this);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n *\n * @param {Boolean} shallow\n */\n\nWatcher.prototype.update = function (shallow) {\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync || !config.async) {\n    this.run();\n  } else {\n    // if queued, only overwrite shallow with non-shallow,\n    // but not the other way around.\n    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n    this.queued = true;\n    // record before-push error stack in debug mode\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.debug) {\n      this.prevError = new Error('[vue] async stack trace');\n    }\n    pushWatcher(this);\n  }\n};\n\n/**\n * Batcher job interface.\n * Will be called by the batcher.\n */\n\nWatcher.prototype.run = function () {\n  if (this.active) {\n    var value = this.get();\n    if (value !== this.value ||\n    // Deep watchers and watchers on Object/Arrays should fire even\n    // when the value is the same, because the value may\n    // have mutated; but only do so if this is a\n    // non-shallow update (caused by a vm digest).\n    (isObject(value) || this.deep) && !this.shallow) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      // in debug + async mode, when a watcher callbacks\n      // throws, we also throw the saved before-push error\n      // so the full cross-tick stack trace is available.\n      var prevError = this.prevError;\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.debug && prevError) {\n        this.prevError = null;\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          nextTick(function () {\n            throw prevError;\n          }, 0);\n          throw e;\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n    this.queued = this.shallow = false;\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\n\nWatcher.prototype.evaluate = function () {\n  // avoid overwriting another watcher that is being\n  // collected.\n  var current = Dep.target;\n  this.value = this.get();\n  this.dirty = false;\n  Dep.target = current;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\n\nWatcher.prototype.depend = function () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subcriber list.\n */\n\nWatcher.prototype.teardown = function () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed or is performing a v-for\n    // re-render (the watcher list is then filtered by v-for).\n    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n      this.vm._watchers.$remove(this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n    this.vm = this.cb = this.value = null;\n  }\n};\n\n/**\n * Recrusively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n *\n * @param {*} val\n */\n\nvar seenObjects = new _Set();\nfunction traverse(val, seen) {\n  var i = undefined,\n      keys = undefined;\n  if (!seen) {\n    seen = seenObjects;\n    seen.clear();\n  }\n  var isA = isArray(val);\n  var isO = isObject(val);\n  if ((isA || isO) && Object.isExtensible(val)) {\n    if (val.__ob__) {\n      var depId = val.__ob__.dep.id;\n      if (seen.has(depId)) {\n        return;\n      } else {\n        seen.add(depId);\n      }\n    }\n    if (isA) {\n      i = val.length;\n      while (i--) traverse(val[i], seen);\n    } else if (isO) {\n      keys = Object.keys(val);\n      i = keys.length;\n      while (i--) traverse(val[keys[i]], seen);\n    }\n  }\n}\n\nvar text$1 = {\n\n  bind: function bind() {\n    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n  },\n\n  update: function update(value) {\n    this.el[this.attr] = _toString(value);\n  }\n};\n\nvar templateCache = new Cache(1000);\nvar idSelectorCache = new Cache(1000);\n\nvar map = {\n  efault: [0, '', ''],\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n};\n\nmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\nmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\n/**\n * Check if a node is a supported template node with a\n * DocumentFragment content.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isRealTemplate(node) {\n  return isTemplate(node) && isFragment(node.content);\n}\n\nvar tagRE$1 = /<([\\w:-]+)/;\nvar entityRE = /&#?\\w+?;/;\nvar commentRE = /<!--/;\n\n/**\n * Convert a string template to a DocumentFragment.\n * Determines correct wrapping by tag types. Wrapping\n * strategy found in jQuery & component/domify.\n *\n * @param {String} templateString\n * @param {Boolean} raw\n * @return {DocumentFragment}\n */\n\nfunction stringToFragment(templateString, raw) {\n  // try a cache hit first\n  var cacheKey = raw ? templateString : templateString.trim();\n  var hit = templateCache.get(cacheKey);\n  if (hit) {\n    return hit;\n  }\n\n  var frag = document.createDocumentFragment();\n  var tagMatch = templateString.match(tagRE$1);\n  var entityMatch = entityRE.test(templateString);\n  var commentMatch = commentRE.test(templateString);\n\n  if (!tagMatch && !entityMatch && !commentMatch) {\n    // text only, return a single text node.\n    frag.appendChild(document.createTextNode(templateString));\n  } else {\n    var tag = tagMatch && tagMatch[1];\n    var wrap = map[tag] || map.efault;\n    var depth = wrap[0];\n    var prefix = wrap[1];\n    var suffix = wrap[2];\n    var node = document.createElement('div');\n\n    node.innerHTML = prefix + templateString + suffix;\n    while (depth--) {\n      node = node.lastChild;\n    }\n\n    var child;\n    /* eslint-disable no-cond-assign */\n    while (child = node.firstChild) {\n      /* eslint-enable no-cond-assign */\n      frag.appendChild(child);\n    }\n  }\n  if (!raw) {\n    trimNode(frag);\n  }\n  templateCache.put(cacheKey, frag);\n  return frag;\n}\n\n/**\n * Convert a template node to a DocumentFragment.\n *\n * @param {Node} node\n * @return {DocumentFragment}\n */\n\nfunction nodeToFragment(node) {\n  // if its a template tag and the browser supports it,\n  // its content is already a document fragment. However, iOS Safari has\n  // bug when using directly cloned template content with touch\n  // events and can cause crashes when the nodes are removed from DOM, so we\n  // have to treat template elements as string templates. (#2805)\n  /* istanbul ignore if */\n  if (isRealTemplate(node)) {\n    return stringToFragment(node.innerHTML);\n  }\n  // script template\n  if (node.tagName === 'SCRIPT') {\n    return stringToFragment(node.textContent);\n  }\n  // normal node, clone it to avoid mutating the original\n  var clonedNode = cloneNode(node);\n  var frag = document.createDocumentFragment();\n  var child;\n  /* eslint-disable no-cond-assign */\n  while (child = clonedNode.firstChild) {\n    /* eslint-enable no-cond-assign */\n    frag.appendChild(child);\n  }\n  trimNode(frag);\n  return frag;\n}\n\n// Test for the presence of the Safari template cloning bug\n// https://bugs.webkit.org/showug.cgi?id=137755\nvar hasBrokenTemplate = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var a = document.createElement('div');\n    a.innerHTML = '<template>1</template>';\n    return !a.cloneNode(true).firstChild.innerHTML;\n  } else {\n    return false;\n  }\n})();\n\n// Test for IE10/11 textarea placeholder clone bug\nvar hasTextareaCloneBug = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var t = document.createElement('textarea');\n    t.placeholder = 't';\n    return t.cloneNode(true).value === 't';\n  } else {\n    return false;\n  }\n})();\n\n/**\n * 1. Deal with Safari cloning nested <template> bug by\n *    manually cloning all template instances.\n * 2. Deal with IE10/11 textarea placeholder bug by setting\n *    the correct value after cloning.\n *\n * @param {Element|DocumentFragment} node\n * @return {Element|DocumentFragment}\n */\n\nfunction cloneNode(node) {\n  /* istanbul ignore if */\n  if (!node.querySelectorAll) {\n    return node.cloneNode();\n  }\n  var res = node.cloneNode(true);\n  var i, original, cloned;\n  /* istanbul ignore if */\n  if (hasBrokenTemplate) {\n    var tempClone = res;\n    if (isRealTemplate(node)) {\n      node = node.content;\n      tempClone = res.content;\n    }\n    original = node.querySelectorAll('template');\n    if (original.length) {\n      cloned = tempClone.querySelectorAll('template');\n      i = cloned.length;\n      while (i--) {\n        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n      }\n    }\n  }\n  /* istanbul ignore if */\n  if (hasTextareaCloneBug) {\n    if (node.tagName === 'TEXTAREA') {\n      res.value = node.value;\n    } else {\n      original = node.querySelectorAll('textarea');\n      if (original.length) {\n        cloned = res.querySelectorAll('textarea');\n        i = cloned.length;\n        while (i--) {\n          cloned[i].value = original[i].value;\n        }\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Process the template option and normalizes it into a\n * a DocumentFragment that can be used as a partial or a\n * instance template.\n *\n * @param {*} template\n *        Possible values include:\n *        - DocumentFragment object\n *        - Node object of type Template\n *        - id selector: '#some-template-id'\n *        - template string: '<div><span>{{msg}}</span></div>'\n * @param {Boolean} shouldClone\n * @param {Boolean} raw\n *        inline HTML interpolation. Do not check for id\n *        selector and keep whitespace in the string.\n * @return {DocumentFragment|undefined}\n */\n\nfunction parseTemplate(template, shouldClone, raw) {\n  var node, frag;\n\n  // if the template is already a document fragment,\n  // do nothing\n  if (isFragment(template)) {\n    trimNode(template);\n    return shouldClone ? cloneNode(template) : template;\n  }\n\n  if (typeof template === 'string') {\n    // id selector\n    if (!raw && template.charAt(0) === '#') {\n      // id selector can be cached too\n      frag = idSelectorCache.get(template);\n      if (!frag) {\n        node = document.getElementById(template.slice(1));\n        if (node) {\n          frag = nodeToFragment(node);\n          // save selector to cache\n          idSelectorCache.put(template, frag);\n        }\n      }\n    } else {\n      // normal string template\n      frag = stringToFragment(template, raw);\n    }\n  } else if (template.nodeType) {\n    // a direct node\n    frag = nodeToFragment(template);\n  }\n\n  return frag && shouldClone ? cloneNode(frag) : frag;\n}\n\nvar template = Object.freeze({\n  cloneNode: cloneNode,\n  parseTemplate: parseTemplate\n});\n\nvar html = {\n\n  bind: function bind() {\n    // a comment node means this is a binding for\n    // {{{ inline unescaped html }}}\n    if (this.el.nodeType === 8) {\n      // hold nodes\n      this.nodes = [];\n      // replace the placeholder with proper anchor\n      this.anchor = createAnchor('v-html');\n      replace(this.el, this.anchor);\n    }\n  },\n\n  update: function update(value) {\n    value = _toString(value);\n    if (this.nodes) {\n      this.swap(value);\n    } else {\n      this.el.innerHTML = value;\n    }\n  },\n\n  swap: function swap(value) {\n    // remove old nodes\n    var i = this.nodes.length;\n    while (i--) {\n      remove(this.nodes[i]);\n    }\n    // convert new value to a fragment\n    // do not attempt to retrieve from id selector\n    var frag = parseTemplate(value, true, true);\n    // save a reference to these nodes so we can remove later\n    this.nodes = toArray(frag.childNodes);\n    before(frag, this.anchor);\n  }\n};\n\n/**\n * Abstraction for a partially-compiled fragment.\n * Can optionally compile content with a child scope.\n *\n * @param {Function} linker\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Vue} [host]\n * @param {Object} [scope]\n * @param {Fragment} [parentFrag]\n */\nfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n  this.children = [];\n  this.childFrags = [];\n  this.vm = vm;\n  this.scope = scope;\n  this.inserted = false;\n  this.parentFrag = parentFrag;\n  if (parentFrag) {\n    parentFrag.childFrags.push(this);\n  }\n  this.unlink = linker(vm, frag, host, scope, this);\n  var single = this.single = frag.childNodes.length === 1 &&\n  // do not go single mode if the only node is an anchor\n  !frag.childNodes[0].__v_anchor;\n  if (single) {\n    this.node = frag.childNodes[0];\n    this.before = singleBefore;\n    this.remove = singleRemove;\n  } else {\n    this.node = createAnchor('fragment-start');\n    this.end = createAnchor('fragment-end');\n    this.frag = frag;\n    prepend(this.node, frag);\n    frag.appendChild(this.end);\n    this.before = multiBefore;\n    this.remove = multiRemove;\n  }\n  this.node.__v_frag = this;\n}\n\n/**\n * Call attach/detach for all components contained within\n * this fragment. Also do so recursively for all child\n * fragments.\n *\n * @param {Function} hook\n */\n\nFragment.prototype.callHook = function (hook) {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    this.childFrags[i].callHook(hook);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    hook(this.children[i]);\n  }\n};\n\n/**\n * Insert fragment before target, single node version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction singleBefore(target, withTransition) {\n  this.inserted = true;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  method(this.node, target, this.vm);\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, single node version\n */\n\nfunction singleRemove() {\n  this.inserted = false;\n  var shouldCallRemove = inDoc(this.node);\n  var self = this;\n  this.beforeRemove();\n  removeWithTransition(this.node, this.vm, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Insert fragment before target, multi-nodes version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction multiBefore(target, withTransition) {\n  this.inserted = true;\n  var vm = this.vm;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  mapNodeRange(this.node, this.end, function (node) {\n    method(node, target, vm);\n  });\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, multi-nodes version\n */\n\nfunction multiRemove() {\n  this.inserted = false;\n  var self = this;\n  var shouldCallRemove = inDoc(this.node);\n  this.beforeRemove();\n  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Prepare the fragment for removal.\n */\n\nFragment.prototype.beforeRemove = function () {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    // call the same method recursively on child\n    // fragments, depth-first\n    this.childFrags[i].beforeRemove(false);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    // Call destroy for all contained instances,\n    // with remove:false and defer:true.\n    // Defer is necessary because we need to\n    // keep the children to call detach hooks\n    // on them.\n    this.children[i].$destroy(false, true);\n  }\n  var dirs = this.unlink.dirs;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    // disable the watchers on all the directives\n    // so that the rendered content stays the same\n    // during removal.\n    dirs[i]._watcher && dirs[i]._watcher.teardown();\n  }\n};\n\n/**\n * Destroy the fragment.\n */\n\nFragment.prototype.destroy = function () {\n  if (this.parentFrag) {\n    this.parentFrag.childFrags.$remove(this);\n  }\n  this.node.__v_frag = null;\n  this.unlink();\n};\n\n/**\n * Call attach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction attach(child) {\n  if (!child._isAttached && inDoc(child.$el)) {\n    child._callHook('attached');\n  }\n}\n\n/**\n * Call detach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction detach(child) {\n  if (child._isAttached && !inDoc(child.$el)) {\n    child._callHook('detached');\n  }\n}\n\nvar linkerCache = new Cache(5000);\n\n/**\n * A factory that can be used to create instances of a\n * fragment. Caches the compiled linker if possible.\n *\n * @param {Vue} vm\n * @param {Element|String} el\n */\nfunction FragmentFactory(vm, el) {\n  this.vm = vm;\n  var template;\n  var isString = typeof el === 'string';\n  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n    template = parseTemplate(el, true);\n  } else {\n    template = document.createDocumentFragment();\n    template.appendChild(el);\n  }\n  this.template = template;\n  // linker can be cached, but only for components\n  var linker;\n  var cid = vm.constructor.cid;\n  if (cid > 0) {\n    var cacheId = cid + (isString ? el : getOuterHTML(el));\n    linker = linkerCache.get(cacheId);\n    if (!linker) {\n      linker = compile(template, vm.$options, true);\n      linkerCache.put(cacheId, linker);\n    }\n  } else {\n    linker = compile(template, vm.$options, true);\n  }\n  this.linker = linker;\n}\n\n/**\n * Create a fragment instance with given host and scope.\n *\n * @param {Vue} host\n * @param {Object} scope\n * @param {Fragment} parentFrag\n */\n\nFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n  var frag = cloneNode(this.template);\n  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n};\n\nvar ON = 700;\nvar MODEL = 800;\nvar BIND = 850;\nvar TRANSITION = 1100;\nvar EL = 1500;\nvar COMPONENT = 1500;\nvar PARTIAL = 1750;\nvar IF = 2100;\nvar FOR = 2200;\nvar SLOT = 2300;\n\nvar uid$3 = 0;\n\nvar vFor = {\n\n  priority: FOR,\n  terminal: true,\n\n  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\n  bind: function bind() {\n    // support \"item in/of items\" syntax\n    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n    if (inMatch) {\n      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n      if (itMatch) {\n        this.iterator = itMatch[1].trim();\n        this.alias = itMatch[2].trim();\n      } else {\n        this.alias = inMatch[1].trim();\n      }\n      this.expression = inMatch[2];\n    }\n\n    if (!this.alias) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n      return;\n    }\n\n    // uid as a cache identifier\n    this.id = '__v-for__' + ++uid$3;\n\n    // check if this is an option list,\n    // so that we know if we need to update the <select>'s\n    // v-model when the option list has changed.\n    // because v-model has a lower priority than v-for,\n    // the v-model is not bound here yet, so we have to\n    // retrive it in the actual updateModel() function.\n    var tag = this.el.tagName;\n    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\n    // setup anchor nodes\n    this.start = createAnchor('v-for-start');\n    this.end = createAnchor('v-for-end');\n    replace(this.el, this.end);\n    before(this.start, this.end);\n\n    // cache\n    this.cache = Object.create(null);\n\n    // fragment factory\n    this.factory = new FragmentFactory(this.vm, this.el);\n  },\n\n  update: function update(data) {\n    this.diff(data);\n    this.updateRef();\n    this.updateModel();\n  },\n\n  /**\n   * Diff, based on new data and old data, determine the\n   * minimum amount of DOM manipulations needed to make the\n   * DOM reflect the new data Array.\n   *\n   * The algorithm diffs the new data Array by storing a\n   * hidden reference to an owner vm instance on previously\n   * seen data. This allows us to achieve O(n) which is\n   * better than a levenshtein distance based algorithm,\n   * which is O(m * n).\n   *\n   * @param {Array} data\n   */\n\n  diff: function diff(data) {\n    // check if the Array was converted from an Object\n    var item = data[0];\n    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\n    var trackByKey = this.params.trackBy;\n    var oldFrags = this.frags;\n    var frags = this.frags = new Array(data.length);\n    var alias = this.alias;\n    var iterator = this.iterator;\n    var start = this.start;\n    var end = this.end;\n    var inDocument = inDoc(start);\n    var init = !oldFrags;\n    var i, l, frag, key, value, primitive;\n\n    // First pass, go through the new Array and fill up\n    // the new frags array. If a piece of data has a cached\n    // instance for it, we reuse it. Otherwise build a new\n    // instance.\n    for (i = 0, l = data.length; i < l; i++) {\n      item = data[i];\n      key = convertedFromObject ? item.$key : null;\n      value = convertedFromObject ? item.$value : item;\n      primitive = !isObject(value);\n      frag = !init && this.getCachedFrag(value, i, key);\n      if (frag) {\n        // reusable fragment\n        frag.reused = true;\n        // update $index\n        frag.scope.$index = i;\n        // update $key\n        if (key) {\n          frag.scope.$key = key;\n        }\n        // update iterator\n        if (iterator) {\n          frag.scope[iterator] = key !== null ? key : i;\n        }\n        // update data for track-by, object repeat &\n        // primitive values.\n        if (trackByKey || convertedFromObject || primitive) {\n          withoutConversion(function () {\n            frag.scope[alias] = value;\n          });\n        }\n      } else {\n        // new isntance\n        frag = this.create(value, alias, i, key);\n        frag.fresh = !init;\n      }\n      frags[i] = frag;\n      if (init) {\n        frag.before(end);\n      }\n    }\n\n    // we're done for the initial render.\n    if (init) {\n      return;\n    }\n\n    // Second pass, go through the old fragments and\n    // destroy those who are not reused (and remove them\n    // from cache)\n    var removalIndex = 0;\n    var totalRemoved = oldFrags.length - frags.length;\n    // when removing a large number of fragments, watcher removal\n    // turns out to be a perf bottleneck, so we batch the watcher\n    // removals into a single filter call!\n    this.vm._vForRemoving = true;\n    for (i = 0, l = oldFrags.length; i < l; i++) {\n      frag = oldFrags[i];\n      if (!frag.reused) {\n        this.deleteCachedFrag(frag);\n        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n      }\n    }\n    this.vm._vForRemoving = false;\n    if (removalIndex) {\n      this.vm._watchers = this.vm._watchers.filter(function (w) {\n        return w.active;\n      });\n    }\n\n    // Final pass, move/insert new fragments into the\n    // right place.\n    var targetPrev, prevEl, currentPrev;\n    var insertionIndex = 0;\n    for (i = 0, l = frags.length; i < l; i++) {\n      frag = frags[i];\n      // this is the frag that we should be after\n      targetPrev = frags[i - 1];\n      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n      if (frag.reused && !frag.staggerCb) {\n        currentPrev = findPrevFrag(frag, start, this.id);\n        if (currentPrev !== targetPrev && (!currentPrev ||\n        // optimization for moving a single item.\n        // thanks to suggestions by @livoras in #1807\n        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n          this.move(frag, prevEl);\n        }\n      } else {\n        // new instance, or still in stagger.\n        // insert with updated stagger index.\n        this.insert(frag, insertionIndex++, prevEl, inDocument);\n      }\n      frag.reused = frag.fresh = false;\n    }\n  },\n\n  /**\n   * Create a new fragment instance.\n   *\n   * @param {*} value\n   * @param {String} alias\n   * @param {Number} index\n   * @param {String} [key]\n   * @return {Fragment}\n   */\n\n  create: function create(value, alias, index, key) {\n    var host = this._host;\n    // create iteration scope\n    var parentScope = this._scope || this.vm;\n    var scope = Object.create(parentScope);\n    // ref holder for the scope\n    scope.$refs = Object.create(parentScope.$refs);\n    scope.$els = Object.create(parentScope.$els);\n    // make sure point $parent to parent scope\n    scope.$parent = parentScope;\n    // for two-way binding on alias\n    scope.$forContext = this;\n    // define scope properties\n    // important: define the scope alias without forced conversion\n    // so that frozen data structures remain non-reactive.\n    withoutConversion(function () {\n      defineReactive(scope, alias, value);\n    });\n    defineReactive(scope, '$index', index);\n    if (key) {\n      defineReactive(scope, '$key', key);\n    } else if (scope.$key) {\n      // avoid accidental fallback\n      def(scope, '$key', null);\n    }\n    if (this.iterator) {\n      defineReactive(scope, this.iterator, key !== null ? key : index);\n    }\n    var frag = this.factory.create(host, scope, this._frag);\n    frag.forId = this.id;\n    this.cacheFrag(value, frag, index, key);\n    return frag;\n  },\n\n  /**\n   * Update the v-ref on owner vm.\n   */\n\n  updateRef: function updateRef() {\n    var ref = this.descriptor.ref;\n    if (!ref) return;\n    var hash = (this._scope || this.vm).$refs;\n    var refs;\n    if (!this.fromObject) {\n      refs = this.frags.map(findVmFromFrag);\n    } else {\n      refs = {};\n      this.frags.forEach(function (frag) {\n        refs[frag.scope.$key] = findVmFromFrag(frag);\n      });\n    }\n    hash[ref] = refs;\n  },\n\n  /**\n   * For option lists, update the containing v-model on\n   * parent <select>.\n   */\n\n  updateModel: function updateModel() {\n    if (this.isOption) {\n      var parent = this.start.parentNode;\n      var model = parent && parent.__v_model;\n      if (model) {\n        model.forceUpdate();\n      }\n    }\n  },\n\n  /**\n   * Insert a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Node} prevEl\n   * @param {Boolean} inDocument\n   */\n\n  insert: function insert(frag, index, prevEl, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n    }\n    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n    if (inDocument && staggerAmount) {\n      // create an anchor and insert it synchronously,\n      // so that we can resolve the correct order without\n      // worrying about some elements not inserted yet\n      var anchor = frag.staggerAnchor;\n      if (!anchor) {\n        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n        anchor.__v_frag = frag;\n      }\n      after(anchor, prevEl);\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.before(anchor);\n        remove(anchor);\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      var target = prevEl.nextSibling;\n      /* istanbul ignore if */\n      if (!target) {\n        // reset end anchor position in case the position was messed up\n        // by an external drag-n-drop library.\n        after(this.end, prevEl);\n        target = this.end;\n      }\n      frag.before(target);\n    }\n  },\n\n  /**\n   * Remove a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {Boolean} inDocument\n   */\n\n  remove: function remove(frag, index, total, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n      // it's not possible for the same frag to be removed\n      // twice, so if we have a pending stagger callback,\n      // it means this frag is queued for enter but removed\n      // before its transition started. Since it is already\n      // destroyed, we can just leave it in detached state.\n      return;\n    }\n    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n    if (inDocument && staggerAmount) {\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.remove();\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.remove();\n    }\n  },\n\n  /**\n   * Move a fragment to a new position.\n   * Force no transition.\n   *\n   * @param {Fragment} frag\n   * @param {Node} prevEl\n   */\n\n  move: function move(frag, prevEl) {\n    // fix a common issue with Sortable:\n    // if prevEl doesn't have nextSibling, this means it's\n    // been dragged after the end anchor. Just re-position\n    // the end anchor to the end of the container.\n    /* istanbul ignore if */\n    if (!prevEl.nextSibling) {\n      this.end.parentNode.appendChild(this.end);\n    }\n    frag.before(prevEl.nextSibling, false);\n  },\n\n  /**\n   * Cache a fragment using track-by or the object key.\n   *\n   * @param {*} value\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {String} [key]\n   */\n\n  cacheFrag: function cacheFrag(value, frag, index, key) {\n    var trackByKey = this.params.trackBy;\n    var cache = this.cache;\n    var primitive = !isObject(value);\n    var id;\n    if (key || trackByKey || primitive) {\n      id = getTrackByKey(index, key, value, trackByKey);\n      if (!cache[id]) {\n        cache[id] = frag;\n      } else if (trackByKey !== '$index') {\n        process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n      }\n    } else {\n      id = this.id;\n      if (hasOwn(value, id)) {\n        if (value[id] === null) {\n          value[id] = frag;\n        } else {\n          process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n        }\n      } else if (Object.isExtensible(value)) {\n        def(value, id, frag);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n      }\n    }\n    frag.raw = value;\n  },\n\n  /**\n   * Get a cached fragment from the value/index/key\n   *\n   * @param {*} value\n   * @param {Number} index\n   * @param {String} key\n   * @return {Fragment}\n   */\n\n  getCachedFrag: function getCachedFrag(value, index, key) {\n    var trackByKey = this.params.trackBy;\n    var primitive = !isObject(value);\n    var frag;\n    if (key || trackByKey || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      frag = this.cache[id];\n    } else {\n      frag = value[this.id];\n    }\n    if (frag && (frag.reused || frag.fresh)) {\n      process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n    }\n    return frag;\n  },\n\n  /**\n   * Delete a fragment from cache.\n   *\n   * @param {Fragment} frag\n   */\n\n  deleteCachedFrag: function deleteCachedFrag(frag) {\n    var value = frag.raw;\n    var trackByKey = this.params.trackBy;\n    var scope = frag.scope;\n    var index = scope.$index;\n    // fix #948: avoid accidentally fall through to\n    // a parent repeater which happens to have $key.\n    var key = hasOwn(scope, '$key') && scope.$key;\n    var primitive = !isObject(value);\n    if (trackByKey || key || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      this.cache[id] = null;\n    } else {\n      value[this.id] = null;\n      frag.raw = null;\n    }\n  },\n\n  /**\n   * Get the stagger amount for an insertion/removal.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {String} type\n   */\n\n  getStagger: function getStagger(frag, index, total, type) {\n    type = type + 'Stagger';\n    var trans = frag.node.__v_trans;\n    var hooks = trans && trans.hooks;\n    var hook = hooks && (hooks[type] || hooks.stagger);\n    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n  },\n\n  /**\n   * Pre-process the value before piping it through the\n   * filters. This is passed to and called by the watcher.\n   */\n\n  _preProcess: function _preProcess(value) {\n    // regardless of type, store the un-filtered raw value.\n    this.rawValue = value;\n    return value;\n  },\n\n  /**\n   * Post-process the value after it has been piped through\n   * the filters. This is passed to and called by the watcher.\n   *\n   * It is necessary for this to be called during the\n   * watcher's dependency collection phase because we want\n   * the v-for to update when the source Object is mutated.\n   */\n\n  _postProcess: function _postProcess(value) {\n    if (isArray(value)) {\n      return value;\n    } else if (isPlainObject(value)) {\n      // convert plain object to array.\n      var keys = Object.keys(value);\n      var i = keys.length;\n      var res = new Array(i);\n      var key;\n      while (i--) {\n        key = keys[i];\n        res[i] = {\n          $key: key,\n          $value: value[key]\n        };\n      }\n      return res;\n    } else {\n      if (typeof value === 'number' && !isNaN(value)) {\n        value = range(value);\n      }\n      return value || [];\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.descriptor.ref) {\n      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n    }\n    if (this.frags) {\n      var i = this.frags.length;\n      var frag;\n      while (i--) {\n        frag = this.frags[i];\n        this.deleteCachedFrag(frag);\n        frag.destroy();\n      }\n    }\n  }\n};\n\n/**\n * Helper to find the previous element that is a fragment\n * anchor. This is necessary because a destroyed frag's\n * element could still be lingering in the DOM before its\n * leaving transition finishes, but its inserted flag\n * should have been set to false so we can skip them.\n *\n * If this is a block repeat, we want to make sure we only\n * return frag that is bound to this v-for. (see #929)\n *\n * @param {Fragment} frag\n * @param {Comment|Text} anchor\n * @param {String} id\n * @return {Fragment}\n */\n\nfunction findPrevFrag(frag, anchor, id) {\n  var el = frag.node.previousSibling;\n  /* istanbul ignore if */\n  if (!el) return;\n  frag = el.__v_frag;\n  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n    el = el.previousSibling;\n    /* istanbul ignore if */\n    if (!el) return;\n    frag = el.__v_frag;\n  }\n  return frag;\n}\n\n/**\n * Find a vm from a fragment.\n *\n * @param {Fragment} frag\n * @return {Vue|undefined}\n */\n\nfunction findVmFromFrag(frag) {\n  var node = frag.node;\n  // handle multi-node frag\n  if (frag.end) {\n    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n      node = node.nextSibling;\n    }\n  }\n  return node.__vue__;\n}\n\n/**\n * Create a range array from given number.\n *\n * @param {Number} n\n * @return {Array}\n */\n\nfunction range(n) {\n  var i = -1;\n  var ret = new Array(Math.floor(n));\n  while (++i < n) {\n    ret[i] = i;\n  }\n  return ret;\n}\n\n/**\n * Get the track by key for an item.\n *\n * @param {Number} index\n * @param {String} key\n * @param {*} value\n * @param {String} [trackByKey]\n */\n\nfunction getTrackByKey(index, key, value, trackByKey) {\n  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  vFor.warnDuplicate = function (value) {\n    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n  };\n}\n\nvar vIf = {\n\n  priority: IF,\n  terminal: true,\n\n  bind: function bind() {\n    var el = this.el;\n    if (!el.__vue__) {\n      // check else block\n      var next = el.nextElementSibling;\n      if (next && getAttr(next, 'v-else') !== null) {\n        remove(next);\n        this.elseEl = next;\n      }\n      // check main block\n      this.anchor = createAnchor('v-if');\n      replace(el, this.anchor);\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n      this.invalid = true;\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) return;\n    if (value) {\n      if (!this.frag) {\n        this.insert();\n      }\n    } else {\n      this.remove();\n    }\n  },\n\n  insert: function insert() {\n    if (this.elseFrag) {\n      this.elseFrag.remove();\n      this.elseFrag = null;\n    }\n    // lazy init factory\n    if (!this.factory) {\n      this.factory = new FragmentFactory(this.vm, this.el);\n    }\n    this.frag = this.factory.create(this._host, this._scope, this._frag);\n    this.frag.before(this.anchor);\n  },\n\n  remove: function remove() {\n    if (this.frag) {\n      this.frag.remove();\n      this.frag = null;\n    }\n    if (this.elseEl && !this.elseFrag) {\n      if (!this.elseFactory) {\n        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n      }\n      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n      this.elseFrag.before(this.anchor);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n    if (this.elseFrag) {\n      this.elseFrag.destroy();\n    }\n  }\n};\n\nvar show = {\n\n  bind: function bind() {\n    // check else block\n    var next = this.el.nextElementSibling;\n    if (next && getAttr(next, 'v-else') !== null) {\n      this.elseEl = next;\n    }\n  },\n\n  update: function update(value) {\n    this.apply(this.el, value);\n    if (this.elseEl) {\n      this.apply(this.elseEl, !value);\n    }\n  },\n\n  apply: function apply(el, value) {\n    if (inDoc(el)) {\n      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n    } else {\n      toggle();\n    }\n    function toggle() {\n      el.style.display = value ? '' : 'none';\n    }\n  }\n};\n\nvar text$2 = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n    var isRange = el.type === 'range';\n    var lazy = this.params.lazy;\n    var number = this.params.number;\n    var debounce = this.params.debounce;\n\n    // handle composition events.\n    //   http://blog.evanyou.me/2014/01/03/composition-event/\n    // skip this for Android because it handles composition\n    // events quite differently. Android doesn't trigger\n    // composition events for language input methods e.g.\n    // Chinese, but instead triggers them for spelling\n    // suggestions... (see Discussion/#162)\n    var composing = false;\n    if (!isAndroid && !isRange) {\n      this.on('compositionstart', function () {\n        composing = true;\n      });\n      this.on('compositionend', function () {\n        composing = false;\n        // in IE11 the \"compositionend\" event fires AFTER\n        // the \"input\" event, so the input handler is blocked\n        // at the end... have to call it here.\n        //\n        // #1327: in lazy mode this is unecessary.\n        if (!lazy) {\n          self.listener();\n        }\n      });\n    }\n\n    // prevent messing with the input when user is typing,\n    // and force update on blur.\n    this.focused = false;\n    if (!isRange && !lazy) {\n      this.on('focus', function () {\n        self.focused = true;\n      });\n      this.on('blur', function () {\n        self.focused = false;\n        // do not sync value after fragment removal (#2017)\n        if (!self._frag || self._frag.inserted) {\n          self.rawListener();\n        }\n      });\n    }\n\n    // Now attach the main listener\n    this.listener = this.rawListener = function () {\n      if (composing || !self._bound) {\n        return;\n      }\n      var val = number || isRange ? toNumber(el.value) : el.value;\n      self.set(val);\n      // force update on next tick to avoid lock & same value\n      // also only update when user is not typing\n      nextTick(function () {\n        if (self._bound && !self.focused) {\n          self.update(self._watcher.value);\n        }\n      });\n    };\n\n    // apply debounce\n    if (debounce) {\n      this.listener = _debounce(this.listener, debounce);\n    }\n\n    // Support jQuery events, since jQuery.trigger() doesn't\n    // trigger native events in some cases and some plugins\n    // rely on $.trigger()\n    //\n    // We want to make sure if a listener is attached using\n    // jQuery, it is also removed with jQuery, that's why\n    // we do the check for each directive instance and\n    // store that check result on itself. This also allows\n    // easier test coverage control by unsetting the global\n    // jQuery variable in tests.\n    this.hasjQuery = typeof jQuery === 'function';\n    if (this.hasjQuery) {\n      var method = jQuery.fn.on ? 'on' : 'bind';\n      jQuery(el)[method]('change', this.rawListener);\n      if (!lazy) {\n        jQuery(el)[method]('input', this.listener);\n      }\n    } else {\n      this.on('change', this.rawListener);\n      if (!lazy) {\n        this.on('input', this.listener);\n      }\n    }\n\n    // IE9 doesn't fire input event on backspace/del/cut\n    if (!lazy && isIE9) {\n      this.on('cut', function () {\n        nextTick(self.listener);\n      });\n      this.on('keyup', function (e) {\n        if (e.keyCode === 46 || e.keyCode === 8) {\n          self.listener();\n        }\n      });\n    }\n\n    // set initial value if present\n    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    // #3029 only update when the value changes. This prevent\n    // browsers from overwriting values like selectionStart\n    value = _toString(value);\n    if (value !== this.el.value) this.el.value = value;\n  },\n\n  unbind: function unbind() {\n    var el = this.el;\n    if (this.hasjQuery) {\n      var method = jQuery.fn.off ? 'off' : 'unbind';\n      jQuery(el)[method]('change', this.listener);\n      jQuery(el)[method]('input', this.listener);\n    }\n  }\n};\n\nvar radio = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      // value overwrite via v-bind:value\n      if (el.hasOwnProperty('_value')) {\n        return el._value;\n      }\n      var val = el.value;\n      if (self.params.number) {\n        val = toNumber(val);\n      }\n      return val;\n    };\n\n    this.listener = function () {\n      self.set(self.getValue());\n    };\n    this.on('change', this.listener);\n\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.checked = looseEqual(value, this.getValue());\n  }\n};\n\nvar select = {\n\n  bind: function bind() {\n    var _this = this;\n\n    var self = this;\n    var el = this.el;\n\n    // method to force update DOM using latest value.\n    this.forceUpdate = function () {\n      if (self._watcher) {\n        self.update(self._watcher.get());\n      }\n    };\n\n    // check if this is a multiple select\n    var multiple = this.multiple = el.hasAttribute('multiple');\n\n    // attach listener\n    this.listener = function () {\n      var value = getValue(el, multiple);\n      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n      self.set(value);\n    };\n    this.on('change', this.listener);\n\n    // if has initial value, set afterBind\n    var initValue = getValue(el, multiple, true);\n    if (multiple && initValue.length || !multiple && initValue !== null) {\n      this.afterBind = this.listener;\n    }\n\n    // All major browsers except Firefox resets\n    // selectedIndex with value -1 to 0 when the element\n    // is appended to a new parent, therefore we have to\n    // force a DOM update whenever that happens...\n    this.vm.$on('hook:attached', function () {\n      nextTick(_this.forceUpdate);\n    });\n    if (!inDoc(el)) {\n      nextTick(this.forceUpdate);\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    el.selectedIndex = -1;\n    var multi = this.multiple && isArray(value);\n    var options = el.options;\n    var i = options.length;\n    var op, val;\n    while (i--) {\n      op = options[i];\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      /* eslint-disable eqeqeq */\n      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n      /* eslint-enable eqeqeq */\n    }\n  },\n\n  unbind: function unbind() {\n    /* istanbul ignore next */\n    this.vm.$off('hook:attached', this.forceUpdate);\n  }\n};\n\n/**\n * Get select value\n *\n * @param {SelectElement} el\n * @param {Boolean} multi\n * @param {Boolean} init\n * @return {Array|*}\n */\n\nfunction getValue(el, multi, init) {\n  var res = multi ? [] : null;\n  var op, val, selected;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    op = el.options[i];\n    selected = init ? op.hasAttribute('selected') : op.selected;\n    if (selected) {\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      if (multi) {\n        res.push(val);\n      } else {\n        return val;\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Native Array.indexOf uses strict equal, but in this\n * case we need to match string/numbers with custom equal.\n *\n * @param {Array} arr\n * @param {*} val\n */\n\nfunction indexOf$1(arr, val) {\n  var i = arr.length;\n  while (i--) {\n    if (looseEqual(arr[i], val)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nvar checkbox = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n    };\n\n    function getBooleanValue() {\n      var val = el.checked;\n      if (val && el.hasOwnProperty('_trueValue')) {\n        return el._trueValue;\n      }\n      if (!val && el.hasOwnProperty('_falseValue')) {\n        return el._falseValue;\n      }\n      return val;\n    }\n\n    this.listener = function () {\n      var model = self._watcher.value;\n      if (isArray(model)) {\n        var val = self.getValue();\n        if (el.checked) {\n          if (indexOf(model, val) < 0) {\n            model.push(val);\n          }\n        } else {\n          model.$remove(val);\n        }\n      } else {\n        self.set(getBooleanValue());\n      }\n    };\n\n    this.on('change', this.listener);\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    if (isArray(value)) {\n      el.checked = indexOf(value, this.getValue()) > -1;\n    } else {\n      if (el.hasOwnProperty('_trueValue')) {\n        el.checked = looseEqual(value, el._trueValue);\n      } else {\n        el.checked = !!value;\n      }\n    }\n  }\n};\n\nvar handlers = {\n  text: text$2,\n  radio: radio,\n  select: select,\n  checkbox: checkbox\n};\n\nvar model = {\n\n  priority: MODEL,\n  twoWay: true,\n  handlers: handlers,\n  params: ['lazy', 'number', 'debounce'],\n\n  /**\n   * Possible elements:\n   *   <select>\n   *   <textarea>\n   *   <input type=\"*\">\n   *     - text\n   *     - checkbox\n   *     - radio\n   *     - number\n   */\n\n  bind: function bind() {\n    // friendly warning...\n    this.checkFilters();\n    if (this.hasRead && !this.hasWrite) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n    }\n    var el = this.el;\n    var tag = el.tagName;\n    var handler;\n    if (tag === 'INPUT') {\n      handler = handlers[el.type] || handlers.text;\n    } else if (tag === 'SELECT') {\n      handler = handlers.select;\n    } else if (tag === 'TEXTAREA') {\n      handler = handlers.text;\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n      return;\n    }\n    el.__v_model = this;\n    handler.bind.call(this);\n    this.update = handler.update;\n    this._unbind = handler.unbind;\n  },\n\n  /**\n   * Check read/write filter stats.\n   */\n\n  checkFilters: function checkFilters() {\n    var filters = this.filters;\n    if (!filters) return;\n    var i = filters.length;\n    while (i--) {\n      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n      if (typeof filter === 'function' || filter.read) {\n        this.hasRead = true;\n      }\n      if (filter.write) {\n        this.hasWrite = true;\n      }\n    }\n  },\n\n  unbind: function unbind() {\n    this.el.__v_model = null;\n    this._unbind && this._unbind();\n  }\n};\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  'delete': [8, 46],\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40\n};\n\nfunction keyFilter(handler, keys) {\n  var codes = keys.map(function (key) {\n    var charCode = key.charCodeAt(0);\n    if (charCode > 47 && charCode < 58) {\n      return parseInt(key, 10);\n    }\n    if (key.length === 1) {\n      charCode = key.toUpperCase().charCodeAt(0);\n      if (charCode > 64 && charCode < 91) {\n        return charCode;\n      }\n    }\n    return keyCodes[key];\n  });\n  codes = [].concat.apply([], codes);\n  return function keyHandler(e) {\n    if (codes.indexOf(e.keyCode) > -1) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nfunction stopFilter(handler) {\n  return function stopHandler(e) {\n    e.stopPropagation();\n    return handler.call(this, e);\n  };\n}\n\nfunction preventFilter(handler) {\n  return function preventHandler(e) {\n    e.preventDefault();\n    return handler.call(this, e);\n  };\n}\n\nfunction selfFilter(handler) {\n  return function selfHandler(e) {\n    if (e.target === e.currentTarget) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nvar on$1 = {\n\n  priority: ON,\n  acceptStatement: true,\n  keyCodes: keyCodes,\n\n  bind: function bind() {\n    // deal with iframes\n    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n      var self = this;\n      this.iframeBind = function () {\n        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n      };\n      this.on('load', this.iframeBind);\n    }\n  },\n\n  update: function update(handler) {\n    // stub a noop for v-on with no value,\n    // e.g. @mousedown.prevent\n    if (!this.descriptor.raw) {\n      handler = function () {};\n    }\n\n    if (typeof handler !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n      return;\n    }\n\n    // apply modifiers\n    if (this.modifiers.stop) {\n      handler = stopFilter(handler);\n    }\n    if (this.modifiers.prevent) {\n      handler = preventFilter(handler);\n    }\n    if (this.modifiers.self) {\n      handler = selfFilter(handler);\n    }\n    // key filter\n    var keys = Object.keys(this.modifiers).filter(function (key) {\n      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n    });\n    if (keys.length) {\n      handler = keyFilter(handler, keys);\n    }\n\n    this.reset();\n    this.handler = handler;\n\n    if (this.iframeBind) {\n      this.iframeBind();\n    } else {\n      on(this.el, this.arg, this.handler, this.modifiers.capture);\n    }\n  },\n\n  reset: function reset() {\n    var el = this.iframeBind ? this.el.contentWindow : this.el;\n    if (this.handler) {\n      off(el, this.arg, this.handler);\n    }\n  },\n\n  unbind: function unbind() {\n    this.reset();\n  }\n};\n\nvar prefixes = ['-webkit-', '-moz-', '-ms-'];\nvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\nvar importantRE = /!important;?$/;\nvar propCache = Object.create(null);\n\nvar testEl = null;\n\nvar style = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (typeof value === 'string') {\n      this.el.style.cssText = value;\n    } else if (isArray(value)) {\n      this.handleObject(value.reduce(extend, {}));\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    // cache object styles so that only changed props\n    // are actually updated.\n    var cache = this.cache || (this.cache = {});\n    var name, val;\n    for (name in cache) {\n      if (!(name in value)) {\n        this.handleSingle(name, null);\n        delete cache[name];\n      }\n    }\n    for (name in value) {\n      val = value[name];\n      if (val !== cache[name]) {\n        cache[name] = val;\n        this.handleSingle(name, val);\n      }\n    }\n  },\n\n  handleSingle: function handleSingle(prop, value) {\n    prop = normalize(prop);\n    if (!prop) return; // unsupported prop\n    // cast possible numbers/booleans into strings\n    if (value != null) value += '';\n    if (value) {\n      var isImportant = importantRE.test(value) ? 'important' : '';\n      if (isImportant) {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n        }\n        value = value.replace(importantRE, '').trim();\n        this.el.style.setProperty(prop.kebab, value, isImportant);\n      } else {\n        this.el.style[prop.camel] = value;\n      }\n    } else {\n      this.el.style[prop.camel] = '';\n    }\n  }\n\n};\n\n/**\n * Normalize a CSS property name.\n * - cache result\n * - auto prefix\n * - camelCase -> dash-case\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction normalize(prop) {\n  if (propCache[prop]) {\n    return propCache[prop];\n  }\n  var res = prefix(prop);\n  propCache[prop] = propCache[res] = res;\n  return res;\n}\n\n/**\n * Auto detect the appropriate prefix for a CSS property.\n * https://gist.github.com/paulirish/523692\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction prefix(prop) {\n  prop = hyphenate(prop);\n  var camel = camelize(prop);\n  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n  if (!testEl) {\n    testEl = document.createElement('div');\n  }\n  var i = prefixes.length;\n  var prefixed;\n  if (camel !== 'filter' && camel in testEl.style) {\n    return {\n      kebab: prop,\n      camel: camel\n    };\n  }\n  while (i--) {\n    prefixed = camelPrefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return {\n        kebab: prefixes[i] + prop,\n        camel: prefixed\n      };\n    }\n  }\n}\n\n// xlink\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\nvar xlinkRE = /^xlink:/;\n\n// check for attributes that prohibit interpolations\nvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n// these attributes should also set their corresponding properties\n// because they only affect the initial state of the element\nvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n// these attributes expect enumrated values of \"true\" or \"false\"\n// but are not boolean attributes\nvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\n// these attributes should set a hidden property for\n// binding v-model to object values\nvar modelProps = {\n  value: '_value',\n  'true-value': '_trueValue',\n  'false-value': '_falseValue'\n};\n\nvar bind$1 = {\n\n  priority: BIND,\n\n  bind: function bind() {\n    var attr = this.arg;\n    var tag = this.el.tagName;\n    // should be deep watch on object mode\n    if (!attr) {\n      this.deep = true;\n    }\n    // handle interpolation bindings\n    var descriptor = this.descriptor;\n    var tokens = descriptor.interp;\n    if (tokens) {\n      // handle interpolations with one-time tokens\n      if (descriptor.hasOneTime) {\n        this.expression = tokensToExp(tokens, this._scope || this.vm);\n      }\n\n      // only allow binding on native attributes\n      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n        process.env.NODE_ENV !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n        this.el.removeAttribute(attr);\n        this.invalid = true;\n      }\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production') {\n        var raw = attr + '=\"' + descriptor.raw + '\": ';\n        // warn src\n        if (attr === 'src') {\n          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n        }\n\n        // warn style\n        if (attr === 'style') {\n          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n        }\n      }\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) {\n      return;\n    }\n    var attr = this.arg;\n    if (this.arg) {\n      this.handleSingle(attr, value);\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  // share object handler with v-bind:class\n  handleObject: style.handleObject,\n\n  handleSingle: function handleSingle(attr, value) {\n    var el = this.el;\n    var interp = this.descriptor.interp;\n    if (this.modifiers.camel) {\n      attr = camelize(attr);\n    }\n    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n      ? '' : value : value;\n\n      if (el[attr] !== attrValue) {\n        el[attr] = attrValue;\n      }\n    }\n    // set model props\n    var modelProp = modelProps[attr];\n    if (!interp && modelProp) {\n      el[modelProp] = value;\n      // update v-model if present\n      var model = el.__v_model;\n      if (model) {\n        model.listener();\n      }\n    }\n    // do not set value attribute for textarea\n    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n      el.removeAttribute(attr);\n      return;\n    }\n    // update attribute\n    if (enumeratedAttrRE.test(attr)) {\n      el.setAttribute(attr, value ? 'true' : 'false');\n    } else if (value != null && value !== false) {\n      if (attr === 'class') {\n        // handle edge case #1960:\n        // class interpolation should not overwrite Vue transition class\n        if (el.__v_trans) {\n          value += ' ' + el.__v_trans.id + '-transition';\n        }\n        setClass(el, value);\n      } else if (xlinkRE.test(attr)) {\n        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n      } else {\n        el.setAttribute(attr, value === true ? '' : value);\n      }\n    } else {\n      el.removeAttribute(attr);\n    }\n  }\n};\n\nvar el = {\n\n  priority: EL,\n\n  bind: function bind() {\n    /* istanbul ignore if */\n    if (!this.arg) {\n      return;\n    }\n    var id = this.id = camelize(this.arg);\n    var refs = (this._scope || this.vm).$els;\n    if (hasOwn(refs, id)) {\n      refs[id] = this.el;\n    } else {\n      defineReactive(refs, id, this.el);\n    }\n  },\n\n  unbind: function unbind() {\n    var refs = (this._scope || this.vm).$els;\n    if (refs[this.id] === this.el) {\n      refs[this.id] = null;\n    }\n  }\n};\n\nvar ref = {\n  bind: function bind() {\n    process.env.NODE_ENV !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n  }\n};\n\nvar cloak = {\n  bind: function bind() {\n    var el = this.el;\n    this.vm.$once('pre-hook:compiled', function () {\n      el.removeAttribute('v-cloak');\n    });\n  }\n};\n\n// must export plain object\nvar directives = {\n  text: text$1,\n  html: html,\n  'for': vFor,\n  'if': vIf,\n  show: show,\n  model: model,\n  on: on$1,\n  bind: bind$1,\n  el: el,\n  ref: ref,\n  cloak: cloak\n};\n\nvar vClass = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (!value) {\n      this.cleanup();\n    } else if (typeof value === 'string') {\n      this.setClass(value.trim().split(/\\s+/));\n    } else {\n      this.setClass(normalize$1(value));\n    }\n  },\n\n  setClass: function setClass(value) {\n    this.cleanup(value);\n    for (var i = 0, l = value.length; i < l; i++) {\n      var val = value[i];\n      if (val) {\n        apply(this.el, val, addClass);\n      }\n    }\n    this.prevKeys = value;\n  },\n\n  cleanup: function cleanup(value) {\n    var prevKeys = this.prevKeys;\n    if (!prevKeys) return;\n    var i = prevKeys.length;\n    while (i--) {\n      var key = prevKeys[i];\n      if (!value || value.indexOf(key) < 0) {\n        apply(this.el, key, removeClass);\n      }\n    }\n  }\n};\n\n/**\n * Normalize objects and arrays (potentially containing objects)\n * into array of strings.\n *\n * @param {Object|Array<String|Object>} value\n * @return {Array<String>}\n */\n\nfunction normalize$1(value) {\n  var res = [];\n  if (isArray(value)) {\n    for (var i = 0, l = value.length; i < l; i++) {\n      var _key = value[i];\n      if (_key) {\n        if (typeof _key === 'string') {\n          res.push(_key);\n        } else {\n          for (var k in _key) {\n            if (_key[k]) res.push(k);\n          }\n        }\n      }\n    }\n  } else if (isObject(value)) {\n    for (var key in value) {\n      if (value[key]) res.push(key);\n    }\n  }\n  return res;\n}\n\n/**\n * Add or remove a class/classes on an element\n *\n * @param {Element} el\n * @param {String} key The class name. This may or may not\n *                     contain a space character, in such a\n *                     case we'll deal with multiple class\n *                     names at once.\n * @param {Function} fn\n */\n\nfunction apply(el, key, fn) {\n  key = key.trim();\n  if (key.indexOf(' ') === -1) {\n    fn(el, key);\n    return;\n  }\n  // The key contains one or more space characters.\n  // Since a class name doesn't accept such characters, we\n  // treat it as multiple classes.\n  var keys = key.split(/\\s+/);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    fn(el, keys[i]);\n  }\n}\n\nvar component = {\n\n  priority: COMPONENT,\n\n  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\n  /**\n   * Setup. Two possible usages:\n   *\n   * - static:\n   *   <comp> or <div v-component=\"comp\">\n   *\n   * - dynamic:\n   *   <component :is=\"view\">\n   */\n\n  bind: function bind() {\n    if (!this.el.__vue__) {\n      // keep-alive cache\n      this.keepAlive = this.params.keepAlive;\n      if (this.keepAlive) {\n        this.cache = {};\n      }\n      // check inline-template\n      if (this.params.inlineTemplate) {\n        // extract inline template as a DocumentFragment\n        this.inlineTemplate = extractContent(this.el, true);\n      }\n      // component resolution related state\n      this.pendingComponentCb = this.Component = null;\n      // transition related state\n      this.pendingRemovals = 0;\n      this.pendingRemovalCb = null;\n      // create a ref anchor\n      this.anchor = createAnchor('v-component');\n      replace(this.el, this.anchor);\n      // remove is attribute.\n      // this is removed during compilation, but because compilation is\n      // cached, when the component is used elsewhere this attribute\n      // will remain at link time.\n      this.el.removeAttribute('is');\n      this.el.removeAttribute(':is');\n      // remove ref, same as above\n      if (this.descriptor.ref) {\n        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n      }\n      // if static, build right now.\n      if (this.literal) {\n        this.setComponent(this.expression);\n      }\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n    }\n  },\n\n  /**\n   * Public update, called by the watcher in the dynamic\n   * literal scenario, e.g. <component :is=\"view\">\n   */\n\n  update: function update(value) {\n    if (!this.literal) {\n      this.setComponent(value);\n    }\n  },\n\n  /**\n   * Switch dynamic components. May resolve the component\n   * asynchronously, and perform transition based on\n   * specified transition mode. Accepts a few additional\n   * arguments specifically for vue-router.\n   *\n   * The callback is called when the full transition is\n   * finished.\n   *\n   * @param {String} value\n   * @param {Function} [cb]\n   */\n\n  setComponent: function setComponent(value, cb) {\n    this.invalidatePending();\n    if (!value) {\n      // just remove current\n      this.unbuild(true);\n      this.remove(this.childVM, cb);\n      this.childVM = null;\n    } else {\n      var self = this;\n      this.resolveComponent(value, function () {\n        self.mountComponent(cb);\n      });\n    }\n  },\n\n  /**\n   * Resolve the component constructor to use when creating\n   * the child vm.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  resolveComponent: function resolveComponent(value, cb) {\n    var self = this;\n    this.pendingComponentCb = cancellable(function (Component) {\n      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n      self.Component = Component;\n      cb();\n    });\n    this.vm._resolveComponent(value, this.pendingComponentCb);\n  },\n\n  /**\n   * Create a new instance using the current constructor and\n   * replace the existing instance. This method doesn't care\n   * whether the new component and the old one are actually\n   * the same.\n   *\n   * @param {Function} [cb]\n   */\n\n  mountComponent: function mountComponent(cb) {\n    // actual mount\n    this.unbuild(true);\n    var self = this;\n    var activateHooks = this.Component.options.activate;\n    var cached = this.getCached();\n    var newComponent = this.build();\n    if (activateHooks && !cached) {\n      this.waitingFor = newComponent;\n      callActivateHooks(activateHooks, newComponent, function () {\n        if (self.waitingFor !== newComponent) {\n          return;\n        }\n        self.waitingFor = null;\n        self.transition(newComponent, cb);\n      });\n    } else {\n      // update ref for kept-alive component\n      if (cached) {\n        newComponent._updateRef();\n      }\n      this.transition(newComponent, cb);\n    }\n  },\n\n  /**\n   * When the component changes or unbinds before an async\n   * constructor is resolved, we need to invalidate its\n   * pending callback.\n   */\n\n  invalidatePending: function invalidatePending() {\n    if (this.pendingComponentCb) {\n      this.pendingComponentCb.cancel();\n      this.pendingComponentCb = null;\n    }\n  },\n\n  /**\n   * Instantiate/insert a new child vm.\n   * If keep alive and has cached instance, insert that\n   * instance; otherwise build a new one and cache it.\n   *\n   * @param {Object} [extraOptions]\n   * @return {Vue} - the created instance\n   */\n\n  build: function build(extraOptions) {\n    var cached = this.getCached();\n    if (cached) {\n      return cached;\n    }\n    if (this.Component) {\n      // default options\n      var options = {\n        name: this.ComponentName,\n        el: cloneNode(this.el),\n        template: this.inlineTemplate,\n        // make sure to add the child with correct parent\n        // if this is a transcluded component, its parent\n        // should be the transclusion host.\n        parent: this._host || this.vm,\n        // if no inline-template, then the compiled\n        // linker can be cached for better performance.\n        _linkerCachable: !this.inlineTemplate,\n        _ref: this.descriptor.ref,\n        _asComponent: true,\n        _isRouterView: this._isRouterView,\n        // if this is a transcluded component, context\n        // will be the common parent vm of this instance\n        // and its host.\n        _context: this.vm,\n        // if this is inside an inline v-for, the scope\n        // will be the intermediate scope created for this\n        // repeat fragment. this is used for linking props\n        // and container directives.\n        _scope: this._scope,\n        // pass in the owner fragment of this component.\n        // this is necessary so that the fragment can keep\n        // track of its contained components in order to\n        // call attach/detach hooks for them.\n        _frag: this._frag\n      };\n      // extra options\n      // in 1.0.0 this is used by vue-router only\n      /* istanbul ignore if */\n      if (extraOptions) {\n        extend(options, extraOptions);\n      }\n      var child = new this.Component(options);\n      if (this.keepAlive) {\n        this.cache[this.Component.cid] = child;\n      }\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n      }\n      return child;\n    }\n  },\n\n  /**\n   * Try to get a cached instance of the current component.\n   *\n   * @return {Vue|undefined}\n   */\n\n  getCached: function getCached() {\n    return this.keepAlive && this.cache[this.Component.cid];\n  },\n\n  /**\n   * Teardown the current child, but defers cleanup so\n   * that we can separate the destroy and removal steps.\n   *\n   * @param {Boolean} defer\n   */\n\n  unbuild: function unbuild(defer) {\n    if (this.waitingFor) {\n      if (!this.keepAlive) {\n        this.waitingFor.$destroy();\n      }\n      this.waitingFor = null;\n    }\n    var child = this.childVM;\n    if (!child || this.keepAlive) {\n      if (child) {\n        // remove ref\n        child._inactive = true;\n        child._updateRef(true);\n      }\n      return;\n    }\n    // the sole purpose of `deferCleanup` is so that we can\n    // \"deactivate\" the vm right now and perform DOM removal\n    // later.\n    child.$destroy(false, defer);\n  },\n\n  /**\n   * Remove current destroyed child and manually do\n   * the cleanup after removal.\n   *\n   * @param {Function} cb\n   */\n\n  remove: function remove(child, cb) {\n    var keepAlive = this.keepAlive;\n    if (child) {\n      // we may have a component switch when a previous\n      // component is still being transitioned out.\n      // we want to trigger only one lastest insertion cb\n      // when the existing transition finishes. (#1119)\n      this.pendingRemovals++;\n      this.pendingRemovalCb = cb;\n      var self = this;\n      child.$remove(function () {\n        self.pendingRemovals--;\n        if (!keepAlive) child._cleanup();\n        if (!self.pendingRemovals && self.pendingRemovalCb) {\n          self.pendingRemovalCb();\n          self.pendingRemovalCb = null;\n        }\n      });\n    } else if (cb) {\n      cb();\n    }\n  },\n\n  /**\n   * Actually swap the components, depending on the\n   * transition mode. Defaults to simultaneous.\n   *\n   * @param {Vue} target\n   * @param {Function} [cb]\n   */\n\n  transition: function transition(target, cb) {\n    var self = this;\n    var current = this.childVM;\n    // for devtool inspection\n    if (current) current._inactive = true;\n    target._inactive = false;\n    this.childVM = target;\n    switch (self.params.transitionMode) {\n      case 'in-out':\n        target.$before(self.anchor, function () {\n          self.remove(current, cb);\n        });\n        break;\n      case 'out-in':\n        self.remove(current, function () {\n          target.$before(self.anchor, cb);\n        });\n        break;\n      default:\n        self.remove(current);\n        target.$before(self.anchor, cb);\n    }\n  },\n\n  /**\n   * Unbind.\n   */\n\n  unbind: function unbind() {\n    this.invalidatePending();\n    // Do not defer cleanup when unbinding\n    this.unbuild();\n    // destroy all keep-alive cached instances\n    if (this.cache) {\n      for (var key in this.cache) {\n        this.cache[key].$destroy();\n      }\n      this.cache = null;\n    }\n  }\n};\n\n/**\n * Call activate hooks in order (asynchronous)\n *\n * @param {Array} hooks\n * @param {Vue} vm\n * @param {Function} cb\n */\n\nfunction callActivateHooks(hooks, vm, cb) {\n  var total = hooks.length;\n  var called = 0;\n  hooks[0].call(vm, next);\n  function next() {\n    if (++called >= total) {\n      cb();\n    } else {\n      hooks[called].call(vm, next);\n    }\n  }\n}\n\nvar propBindingModes = config._propBindingModes;\nvar empty = {};\n\n// regexes\nvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\nvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\n/**\n * Compile props on a root element and return\n * a props link function.\n *\n * @param {Element|DocumentFragment} el\n * @param {Array} propOptions\n * @param {Vue} vm\n * @return {Function} propsLinkFn\n */\n\nfunction compileProps(el, propOptions, vm) {\n  var props = [];\n  var names = Object.keys(propOptions);\n  var i = names.length;\n  var options, name, attr, value, path, parsed, prop;\n  while (i--) {\n    name = names[i];\n    options = propOptions[name] || empty;\n\n    if (process.env.NODE_ENV !== 'production' && name === '$data') {\n      warn('Do not use $data as prop.', vm);\n      continue;\n    }\n\n    // props could contain dashes, which will be\n    // interpreted as minus calculations by the parser\n    // so we need to camelize the path here\n    path = camelize(name);\n    if (!identRE$1.test(path)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n      continue;\n    }\n\n    prop = {\n      name: name,\n      path: path,\n      options: options,\n      mode: propBindingModes.ONE_WAY,\n      raw: null\n    };\n\n    attr = hyphenate(name);\n    // first check dynamic version\n    if ((value = getBindAttr(el, attr)) === null) {\n      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n        prop.mode = propBindingModes.TWO_WAY;\n      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n        prop.mode = propBindingModes.ONE_TIME;\n      }\n    }\n    if (value !== null) {\n      // has dynamic binding!\n      prop.raw = value;\n      parsed = parseDirective(value);\n      value = parsed.expression;\n      prop.filters = parsed.filters;\n      // check binding type\n      if (isLiteral(value) && !parsed.filters) {\n        // for expressions containing literal numbers and\n        // booleans, there's no need to setup a prop binding,\n        // so we can optimize them as a one-time set.\n        prop.optimizedLiteral = true;\n      } else {\n        prop.dynamic = true;\n        // check non-settable path for two-way bindings\n        if (process.env.NODE_ENV !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n          prop.mode = propBindingModes.ONE_WAY;\n          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n        }\n      }\n      prop.parentPath = value;\n\n      // warn required two-way\n      if (process.env.NODE_ENV !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n      }\n    } else if ((value = getAttr(el, attr)) !== null) {\n      // has literal binding!\n      prop.raw = value;\n    } else if (process.env.NODE_ENV !== 'production') {\n      // check possible camelCase prop usage\n      var lowerCaseName = path.toLowerCase();\n      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n      if (value) {\n        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n      } else if (options.required) {\n        // warn missing required\n        warn('Missing required prop: ' + name, vm);\n      }\n    }\n    // push prop\n    props.push(prop);\n  }\n  return makePropsLinkFn(props);\n}\n\n/**\n * Build a function that applies props to a vm.\n *\n * @param {Array} props\n * @return {Function} propsLinkFn\n */\n\nfunction makePropsLinkFn(props) {\n  return function propsLinkFn(vm, scope) {\n    // store resolved props info\n    vm._props = {};\n    var inlineProps = vm.$options.propsData;\n    var i = props.length;\n    var prop, path, options, value, raw;\n    while (i--) {\n      prop = props[i];\n      raw = prop.raw;\n      path = prop.path;\n      options = prop.options;\n      vm._props[path] = prop;\n      if (inlineProps && hasOwn(inlineProps, path)) {\n        initProp(vm, prop, inlineProps[path]);\n      }if (raw === null) {\n        // initialize absent prop\n        initProp(vm, prop, undefined);\n      } else if (prop.dynamic) {\n        // dynamic prop\n        if (prop.mode === propBindingModes.ONE_TIME) {\n          // one time binding\n          value = (scope || vm._context || vm).$get(prop.parentPath);\n          initProp(vm, prop, value);\n        } else {\n          if (vm._context) {\n            // dynamic binding\n            vm._bindDir({\n              name: 'prop',\n              def: propDef,\n              prop: prop\n            }, null, null, scope); // el, host, scope\n          } else {\n              // root instance\n              initProp(vm, prop, vm.$get(prop.parentPath));\n            }\n        }\n      } else if (prop.optimizedLiteral) {\n        // optimized literal, cast it and just set once\n        var stripped = stripQuotes(raw);\n        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n        initProp(vm, prop, value);\n      } else {\n        // string literal, but we need to cater for\n        // Boolean props with no value, or with same\n        // literal value (e.g. disabled=\"disabled\")\n        // see https://github.com/vuejs/vue-loader/issues/182\n        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n        initProp(vm, prop, value);\n      }\n    }\n  };\n}\n\n/**\n * Process a prop with a rawValue, applying necessary coersions,\n * default values & assertions and call the given callback with\n * processed value.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} rawValue\n * @param {Function} fn\n */\n\nfunction processPropValue(vm, prop, rawValue, fn) {\n  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n  var value = rawValue;\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop);\n  }\n  value = coerceProp(prop, value, vm);\n  var coerced = value !== rawValue;\n  if (!assertProp(prop, value, vm)) {\n    value = undefined;\n  }\n  if (isSimple && !coerced) {\n    withoutConversion(function () {\n      fn(value);\n    });\n  } else {\n    fn(value);\n  }\n}\n\n/**\n * Set a prop's initial value on a vm and its data object.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction initProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    defineReactive(vm, prop.path, value);\n  });\n}\n\n/**\n * Update a prop's value on a vm.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction updateProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    vm[prop.path] = value;\n  });\n}\n\n/**\n * Get the default value of a prop.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @return {*}\n */\n\nfunction getPropDefaultValue(vm, prop) {\n  // no default, return undefined\n  var options = prop.options;\n  if (!hasOwn(options, 'default')) {\n    // absent boolean value defaults to false\n    return options.type === Boolean ? false : undefined;\n  }\n  var def = options['default'];\n  // warn against non-factory defaults for Object & Array\n  if (isObject(def)) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n  }\n  // call factory function for non-Function types\n  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n}\n\n/**\n * Assert whether a prop is valid.\n *\n * @param {Object} prop\n * @param {*} value\n * @param {Vue} vm\n */\n\nfunction assertProp(prop, value, vm) {\n  if (!prop.options.required && ( // non-required\n  prop.raw === null || // abscent\n  value == null) // null or undefined\n  ) {\n      return true;\n    }\n  var options = prop.options;\n  var type = options.type;\n  var valid = !type;\n  var expectedTypes = [];\n  if (type) {\n    if (!isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType);\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n    }\n    return false;\n  }\n  var validator = options.validator;\n  if (validator) {\n    if (!validator(value)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Force parsing value with coerce option.\n *\n * @param {*} value\n * @param {Object} options\n * @return {*}\n */\n\nfunction coerceProp(prop, value, vm) {\n  var coerce = prop.options.coerce;\n  if (!coerce) {\n    return value;\n  }\n  if (typeof coerce === 'function') {\n    return coerce(value);\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid coerce for prop \"' + prop.name + '\": expected function, got ' + typeof coerce + '.', vm);\n    return value;\n  }\n}\n\n/**\n * Assert the type of a value\n *\n * @param {*} value\n * @param {Function} type\n * @return {Object}\n */\n\nfunction assertType(value, type) {\n  var valid;\n  var expectedType;\n  if (type === String) {\n    expectedType = 'string';\n    valid = typeof value === expectedType;\n  } else if (type === Number) {\n    expectedType = 'number';\n    valid = typeof value === expectedType;\n  } else if (type === Boolean) {\n    expectedType = 'boolean';\n    valid = typeof value === expectedType;\n  } else if (type === Function) {\n    expectedType = 'function';\n    valid = typeof value === expectedType;\n  } else if (type === Object) {\n    expectedType = 'object';\n    valid = isPlainObject(value);\n  } else if (type === Array) {\n    expectedType = 'array';\n    valid = isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  };\n}\n\n/**\n * Format type for output\n *\n * @param {String} type\n * @return {String}\n */\n\nfunction formatType(type) {\n  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n}\n\n/**\n * Format value\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction formatValue(val) {\n  return Object.prototype.toString.call(val).slice(8, -1);\n}\n\nvar bindingModes = config._propBindingModes;\n\nvar propDef = {\n\n  bind: function bind() {\n    var child = this.vm;\n    var parent = child._context;\n    // passed in from compiler directly\n    var prop = this.descriptor.prop;\n    var childKey = prop.path;\n    var parentKey = prop.parentPath;\n    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\n    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n      updateProp(child, prop, val);\n    }, {\n      twoWay: twoWay,\n      filters: prop.filters,\n      // important: props need to be observed on the\n      // v-for scope if present\n      scope: this._scope\n    });\n\n    // set the child initial value.\n    initProp(child, prop, parentWatcher.value);\n\n    // setup two-way binding\n    if (twoWay) {\n      // important: defer the child watcher creation until\n      // the created hook (after data observation)\n      var self = this;\n      child.$once('pre-hook:created', function () {\n        self.childWatcher = new Watcher(child, childKey, function (val) {\n          parentWatcher.set(val);\n        }, {\n          // ensure sync upward before parent sync down.\n          // this is necessary in cases e.g. the child\n          // mutates a prop array, then replaces it. (#1683)\n          sync: true\n        });\n      });\n    }\n  },\n\n  unbind: function unbind() {\n    this.parentWatcher.teardown();\n    if (this.childWatcher) {\n      this.childWatcher.teardown();\n    }\n  }\n};\n\nvar queue$1 = [];\nvar queued = false;\n\n/**\n * Push a job into the queue.\n *\n * @param {Function} job\n */\n\nfunction pushJob(job) {\n  queue$1.push(job);\n  if (!queued) {\n    queued = true;\n    nextTick(flush);\n  }\n}\n\n/**\n * Flush the queue, and do one forced reflow before\n * triggering transitions.\n */\n\nfunction flush() {\n  // Force layout\n  var f = document.documentElement.offsetHeight;\n  for (var i = 0; i < queue$1.length; i++) {\n    queue$1[i]();\n  }\n  queue$1 = [];\n  queued = false;\n  // dummy return, so js linters don't complain about\n  // unused variable f\n  return f;\n}\n\nvar TYPE_TRANSITION = 'transition';\nvar TYPE_ANIMATION = 'animation';\nvar transDurationProp = transitionProp + 'Duration';\nvar animDurationProp = animationProp + 'Duration';\n\n/**\n * If a just-entered element is applied the\n * leave class while its enter transition hasn't started yet,\n * and the transitioned property has the same value for both\n * enter/leave, then the leave transition will be skipped and\n * the transitionend event never fires. This function ensures\n * its callback to be called after a transition has started\n * by waiting for double raf.\n *\n * It falls back to setTimeout on devices that support CSS\n * transitions but not raf (e.g. Android 4.2 browser) - since\n * these environments are usually slow, we are giving it a\n * relatively large timeout.\n */\n\nvar raf = inBrowser && window.requestAnimationFrame;\nvar waitForTransitionStart = raf\n/* istanbul ignore next */\n? function (fn) {\n  raf(function () {\n    raf(fn);\n  });\n} : function (fn) {\n  setTimeout(fn, 50);\n};\n\n/**\n * A Transition object that encapsulates the state and logic\n * of the transition.\n *\n * @param {Element} el\n * @param {String} id\n * @param {Object} hooks\n * @param {Vue} vm\n */\nfunction Transition(el, id, hooks, vm) {\n  this.id = id;\n  this.el = el;\n  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n  this.hooks = hooks;\n  this.vm = vm;\n  // async state\n  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n  this.justEntered = false;\n  this.entered = this.left = false;\n  this.typeCache = {};\n  // check css transition type\n  this.type = hooks && hooks.type;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production') {\n    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n    }\n  }\n  // bind\n  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n    self[m] = bind(self[m], self);\n  });\n}\n\nvar p$1 = Transition.prototype;\n\n/**\n * Start an entering transition.\n *\n * 1. enter transition triggered\n * 2. call beforeEnter hook\n * 3. add enter class\n * 4. insert/show element\n * 5. call enter hook (with possible explicit js callback)\n * 6. reflow\n * 7. based on transition type:\n *    - transition:\n *        remove class now, wait for transitionend,\n *        then done if there's no explicit js callback.\n *    - animation:\n *        wait for animationend, remove class,\n *        then done if there's no explicit js callback.\n *    - no css transition:\n *        done now if there's no explicit js callback.\n * 8. wait for either done or js callback, then call\n *    afterEnter hook.\n *\n * @param {Function} op - insert/show the element\n * @param {Function} [cb]\n */\n\np$1.enter = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeEnter');\n  this.cb = cb;\n  addClass(this.el, this.enterClass);\n  op();\n  this.entered = false;\n  this.callHookWithCb('enter');\n  if (this.entered) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.enterCancelled;\n  pushJob(this.enterNextTick);\n};\n\n/**\n * The \"nextTick\" phase of an entering transition, which is\n * to be pushed into a queue and executed after a reflow so\n * that removing the class can trigger a CSS transition.\n */\n\np$1.enterNextTick = function () {\n  var _this = this;\n\n  // prevent transition skipping\n  this.justEntered = true;\n  waitForTransitionStart(function () {\n    _this.justEntered = false;\n  });\n  var enterDone = this.enterDone;\n  var type = this.getCssTransitionType(this.enterClass);\n  if (!this.pendingJsCb) {\n    if (type === TYPE_TRANSITION) {\n      // trigger transition by removing enter class now\n      removeClass(this.el, this.enterClass);\n      this.setupCssCb(transitionEndEvent, enterDone);\n    } else if (type === TYPE_ANIMATION) {\n      this.setupCssCb(animationEndEvent, enterDone);\n    } else {\n      enterDone();\n    }\n  } else if (type === TYPE_TRANSITION) {\n    removeClass(this.el, this.enterClass);\n  }\n};\n\n/**\n * The \"cleanup\" phase of an entering transition.\n */\n\np$1.enterDone = function () {\n  this.entered = true;\n  this.cancel = this.pendingJsCb = null;\n  removeClass(this.el, this.enterClass);\n  this.callHook('afterEnter');\n  if (this.cb) this.cb();\n};\n\n/**\n * Start a leaving transition.\n *\n * 1. leave transition triggered.\n * 2. call beforeLeave hook\n * 3. add leave class (trigger css transition)\n * 4. call leave hook (with possible explicit js callback)\n * 5. reflow if no explicit js callback is provided\n * 6. based on transition type:\n *    - transition or animation:\n *        wait for end event, remove class, then done if\n *        there's no explicit js callback.\n *    - no css transition:\n *        done if there's no explicit js callback.\n * 7. wait for either done or js callback, then call\n *    afterLeave hook.\n *\n * @param {Function} op - remove/hide the element\n * @param {Function} [cb]\n */\n\np$1.leave = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeLeave');\n  this.op = op;\n  this.cb = cb;\n  addClass(this.el, this.leaveClass);\n  this.left = false;\n  this.callHookWithCb('leave');\n  if (this.left) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.leaveCancelled;\n  // only need to handle leaveDone if\n  // 1. the transition is already done (synchronously called\n  //    by the user, which causes this.op set to null)\n  // 2. there's no explicit js callback\n  if (this.op && !this.pendingJsCb) {\n    // if a CSS transition leaves immediately after enter,\n    // the transitionend event never fires. therefore we\n    // detect such cases and end the leave immediately.\n    if (this.justEntered) {\n      this.leaveDone();\n    } else {\n      pushJob(this.leaveNextTick);\n    }\n  }\n};\n\n/**\n * The \"nextTick\" phase of a leaving transition.\n */\n\np$1.leaveNextTick = function () {\n  var type = this.getCssTransitionType(this.leaveClass);\n  if (type) {\n    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n    this.setupCssCb(event, this.leaveDone);\n  } else {\n    this.leaveDone();\n  }\n};\n\n/**\n * The \"cleanup\" phase of a leaving transition.\n */\n\np$1.leaveDone = function () {\n  this.left = true;\n  this.cancel = this.pendingJsCb = null;\n  this.op();\n  removeClass(this.el, this.leaveClass);\n  this.callHook('afterLeave');\n  if (this.cb) this.cb();\n  this.op = null;\n};\n\n/**\n * Cancel any pending callbacks from a previously running\n * but not finished transition.\n */\n\np$1.cancelPending = function () {\n  this.op = this.cb = null;\n  var hasPending = false;\n  if (this.pendingCssCb) {\n    hasPending = true;\n    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n    this.pendingCssEvent = this.pendingCssCb = null;\n  }\n  if (this.pendingJsCb) {\n    hasPending = true;\n    this.pendingJsCb.cancel();\n    this.pendingJsCb = null;\n  }\n  if (hasPending) {\n    removeClass(this.el, this.enterClass);\n    removeClass(this.el, this.leaveClass);\n  }\n  if (this.cancel) {\n    this.cancel.call(this.vm, this.el);\n    this.cancel = null;\n  }\n};\n\n/**\n * Call a user-provided synchronous hook function.\n *\n * @param {String} type\n */\n\np$1.callHook = function (type) {\n  if (this.hooks && this.hooks[type]) {\n    this.hooks[type].call(this.vm, this.el);\n  }\n};\n\n/**\n * Call a user-provided, potentially-async hook function.\n * We check for the length of arguments to see if the hook\n * expects a `done` callback. If true, the transition's end\n * will be determined by when the user calls that callback;\n * otherwise, the end is determined by the CSS transition or\n * animation.\n *\n * @param {String} type\n */\n\np$1.callHookWithCb = function (type) {\n  var hook = this.hooks && this.hooks[type];\n  if (hook) {\n    if (hook.length > 1) {\n      this.pendingJsCb = cancellable(this[type + 'Done']);\n    }\n    hook.call(this.vm, this.el, this.pendingJsCb);\n  }\n};\n\n/**\n * Get an element's transition type based on the\n * calculated styles.\n *\n * @param {String} className\n * @return {Number}\n */\n\np$1.getCssTransitionType = function (className) {\n  /* istanbul ignore if */\n  if (!transitionEndEvent ||\n  // skip CSS transitions if page is not visible -\n  // this solves the issue of transitionend events not\n  // firing until the page is visible again.\n  // pageVisibility API is supported in IE10+, same as\n  // CSS transitions.\n  document.hidden ||\n  // explicit js-only transition\n  this.hooks && this.hooks.css === false ||\n  // element is hidden\n  isHidden(this.el)) {\n    return;\n  }\n  var type = this.type || this.typeCache[className];\n  if (type) return type;\n  var inlineStyles = this.el.style;\n  var computedStyles = window.getComputedStyle(this.el);\n  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n  if (transDuration && transDuration !== '0s') {\n    type = TYPE_TRANSITION;\n  } else {\n    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n    if (animDuration && animDuration !== '0s') {\n      type = TYPE_ANIMATION;\n    }\n  }\n  if (type) {\n    this.typeCache[className] = type;\n  }\n  return type;\n};\n\n/**\n * Setup a CSS transitionend/animationend callback.\n *\n * @param {String} event\n * @param {Function} cb\n */\n\np$1.setupCssCb = function (event, cb) {\n  this.pendingCssEvent = event;\n  var self = this;\n  var el = this.el;\n  var onEnd = this.pendingCssCb = function (e) {\n    if (e.target === el) {\n      off(el, event, onEnd);\n      self.pendingCssEvent = self.pendingCssCb = null;\n      if (!self.pendingJsCb && cb) {\n        cb();\n      }\n    }\n  };\n  on(el, event, onEnd);\n};\n\n/**\n * Check if an element is hidden - in that case we can just\n * skip the transition alltogether.\n *\n * @param {Element} el\n * @return {Boolean}\n */\n\nfunction isHidden(el) {\n  if (/svg$/.test(el.namespaceURI)) {\n    // SVG elements do not have offset(Width|Height)\n    // so we need to check the client rect\n    var rect = el.getBoundingClientRect();\n    return !(rect.width || rect.height);\n  } else {\n    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n  }\n}\n\nvar transition$1 = {\n\n  priority: TRANSITION,\n\n  update: function update(id, oldId) {\n    var el = this.el;\n    // resolve on owner vm\n    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n    id = id || 'v';\n    oldId = oldId || 'v';\n    el.__v_trans = new Transition(el, id, hooks, this.vm);\n    removeClass(el, oldId + '-transition');\n    addClass(el, id + '-transition');\n  }\n};\n\nvar internalDirectives = {\n  style: style,\n  'class': vClass,\n  component: component,\n  prop: propDef,\n  transition: transition$1\n};\n\n// special binding prefixes\nvar bindRE = /^v-bind:|^:/;\nvar onRE = /^v-on:|^@/;\nvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\nvar modifierRE = /\\.[^\\.]+/g;\nvar transitionRE = /^(v-bind:|:)?transition$/;\n\n// default directive priority\nvar DEFAULT_PRIORITY = 1000;\nvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\n/**\n * Compile a template and return a reusable composite link\n * function, which recursively contains more link functions\n * inside. This top level compile function would normally\n * be called on instance root nodes, but can also be used\n * for partial compilation if the partial argument is true.\n *\n * The returned composite link function, when called, will\n * return an unlink function that tearsdown all directives\n * created during the linking phase.\n *\n * @param {Element|DocumentFragment} el\n * @param {Object} options\n * @param {Boolean} partial\n * @return {Function}\n */\n\nfunction compile(el, options, partial) {\n  // link function for the node itself.\n  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n  // link function for the childNodes\n  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\n  /**\n   * A composite linker function to be called on a already\n   * compiled piece of DOM, which instantiates all directive\n   * instances.\n   *\n   * @param {Vue} vm\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host] - host vm of transcluded content\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - link context fragment\n   * @return {Function|undefined}\n   */\n\n  return function compositeLinkFn(vm, el, host, scope, frag) {\n    // cache childNodes before linking parent, fix #657\n    var childNodes = toArray(el.childNodes);\n    // link\n    var dirs = linkAndCapture(function compositeLinkCapturer() {\n      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n    }, vm);\n    return makeUnlinkFn(vm, dirs);\n  };\n}\n\n/**\n * Apply a linker to a vm/element pair and capture the\n * directives created during the process.\n *\n * @param {Function} linker\n * @param {Vue} vm\n */\n\nfunction linkAndCapture(linker, vm) {\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV === 'production') {\n    // reset directives before every capture in production\n    // mode, so that when unlinking we don't need to splice\n    // them out (which turns out to be a perf hit).\n    // they are kept in development mode because they are\n    // useful for Vue's own tests.\n    vm._directives = [];\n  }\n  var originalDirCount = vm._directives.length;\n  linker();\n  var dirs = vm._directives.slice(originalDirCount);\n  dirs.sort(directiveComparator);\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dirs[i]._bind();\n  }\n  return dirs;\n}\n\n/**\n * Directive priority sort comparator\n *\n * @param {Object} a\n * @param {Object} b\n */\n\nfunction directiveComparator(a, b) {\n  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n  return a > b ? -1 : a === b ? 0 : 1;\n}\n\n/**\n * Linker functions return an unlink function that\n * tearsdown all directives instances generated during\n * the process.\n *\n * We create unlink functions with only the necessary\n * information to avoid retaining additional closures.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Vue} [context]\n * @param {Array} [contextDirs]\n * @return {Function}\n */\n\nfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n  function unlink(destroying) {\n    teardownDirs(vm, dirs, destroying);\n    if (context && contextDirs) {\n      teardownDirs(context, contextDirs);\n    }\n  }\n  // expose linked directives\n  unlink.dirs = dirs;\n  return unlink;\n}\n\n/**\n * Teardown partial linked directives.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Boolean} destroying\n */\n\nfunction teardownDirs(vm, dirs, destroying) {\n  var i = dirs.length;\n  while (i--) {\n    dirs[i]._teardown();\n    if (process.env.NODE_ENV !== 'production' && !destroying) {\n      vm._directives.$remove(dirs[i]);\n    }\n  }\n}\n\n/**\n * Compile link props on an instance.\n *\n * @param {Vue} vm\n * @param {Element} el\n * @param {Object} props\n * @param {Object} [scope]\n * @return {Function}\n */\n\nfunction compileAndLinkProps(vm, el, props, scope) {\n  var propsLinkFn = compileProps(el, props, vm);\n  var propDirs = linkAndCapture(function () {\n    propsLinkFn(vm, scope);\n  }, vm);\n  return makeUnlinkFn(vm, propDirs);\n}\n\n/**\n * Compile the root element of an instance.\n *\n * 1. attrs on context container (context scope)\n * 2. attrs on the component template root node, if\n *    replace:true (child scope)\n *\n * If this is a fragment instance, we only need to compile 1.\n *\n * @param {Element} el\n * @param {Object} options\n * @param {Object} contextOptions\n * @return {Function}\n */\n\nfunction compileRoot(el, options, contextOptions) {\n  var containerAttrs = options._containerAttrs;\n  var replacerAttrs = options._replacerAttrs;\n  var contextLinkFn, replacerLinkFn;\n\n  // only need to compile other attributes for\n  // non-fragment instances\n  if (el.nodeType !== 11) {\n    // for components, container and replacer need to be\n    // compiled separately and linked in different scopes.\n    if (options._asComponent) {\n      // 2. container attributes\n      if (containerAttrs && contextOptions) {\n        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n      }\n      if (replacerAttrs) {\n        // 3. replacer attributes\n        replacerLinkFn = compileDirectives(replacerAttrs, options);\n      }\n    } else {\n      // non-component, just compile as a normal element.\n      replacerLinkFn = compileDirectives(el.attributes, options);\n    }\n  } else if (process.env.NODE_ENV !== 'production' && containerAttrs) {\n    // warn container directives for fragment instances\n    var names = containerAttrs.filter(function (attr) {\n      // allow vue-loader/vueify scoped css attributes\n      return attr.name.indexOf('_v-') < 0 &&\n      // allow event listeners\n      !onRE.test(attr.name) &&\n      // allow slots\n      attr.name !== 'slot';\n    }).map(function (attr) {\n      return '\"' + attr.name + '\"';\n    });\n    if (names.length) {\n      var plural = names.length > 1;\n      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n    }\n  }\n\n  options._containerAttrs = options._replacerAttrs = null;\n  return function rootLinkFn(vm, el, scope) {\n    // link context scope dirs\n    var context = vm._context;\n    var contextDirs;\n    if (context && contextLinkFn) {\n      contextDirs = linkAndCapture(function () {\n        contextLinkFn(context, el, null, scope);\n      }, context);\n    }\n\n    // link self\n    var selfDirs = linkAndCapture(function () {\n      if (replacerLinkFn) replacerLinkFn(vm, el);\n    }, vm);\n\n    // return the unlink function that tearsdown context\n    // container directives.\n    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n  };\n}\n\n/**\n * Compile a node and return a nodeLinkFn based on the\n * node type.\n *\n * @param {Node} node\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileNode(node, options) {\n  var type = node.nodeType;\n  if (type === 1 && !isScript(node)) {\n    return compileElement(node, options);\n  } else if (type === 3 && node.data.trim()) {\n    return compileTextNode(node, options);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Compile an element and return a nodeLinkFn.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileElement(el, options) {\n  // preprocess textareas.\n  // textarea treats its text content as the initial value.\n  // just bind it as an attr directive for value.\n  if (el.tagName === 'TEXTAREA') {\n    var tokens = parseText(el.value);\n    if (tokens) {\n      el.setAttribute(':value', tokensToExp(tokens));\n      el.value = '';\n    }\n  }\n  var linkFn;\n  var hasAttrs = el.hasAttributes();\n  var attrs = hasAttrs && toArray(el.attributes);\n  // check terminal directives (for & if)\n  if (hasAttrs) {\n    linkFn = checkTerminalDirectives(el, attrs, options);\n  }\n  // check element directives\n  if (!linkFn) {\n    linkFn = checkElementDirectives(el, options);\n  }\n  // check component\n  if (!linkFn) {\n    linkFn = checkComponent(el, options);\n  }\n  // normal directives\n  if (!linkFn && hasAttrs) {\n    linkFn = compileDirectives(attrs, options);\n  }\n  return linkFn;\n}\n\n/**\n * Compile a textNode and return a nodeLinkFn.\n *\n * @param {TextNode} node\n * @param {Object} options\n * @return {Function|null} textNodeLinkFn\n */\n\nfunction compileTextNode(node, options) {\n  // skip marked text nodes\n  if (node._skip) {\n    return removeText;\n  }\n\n  var tokens = parseText(node.wholeText);\n  if (!tokens) {\n    return null;\n  }\n\n  // mark adjacent text nodes as skipped,\n  // because we are using node.wholeText to compile\n  // all adjacent text nodes together. This fixes\n  // issues in IE where sometimes it splits up a single\n  // text node into multiple ones.\n  var next = node.nextSibling;\n  while (next && next.nodeType === 3) {\n    next._skip = true;\n    next = next.nextSibling;\n  }\n\n  var frag = document.createDocumentFragment();\n  var el, token;\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n    frag.appendChild(el);\n  }\n  return makeTextNodeLinkFn(tokens, frag, options);\n}\n\n/**\n * Linker for an skipped text node.\n *\n * @param {Vue} vm\n * @param {Text} node\n */\n\nfunction removeText(vm, node) {\n  remove(node);\n}\n\n/**\n * Process a single text token.\n *\n * @param {Object} token\n * @param {Object} options\n * @return {Node}\n */\n\nfunction processTextToken(token, options) {\n  var el;\n  if (token.oneTime) {\n    el = document.createTextNode(token.value);\n  } else {\n    if (token.html) {\n      el = document.createComment('v-html');\n      setTokenType('html');\n    } else {\n      // IE will clean up empty textNodes during\n      // frag.cloneNode(true), so we have to give it\n      // something here...\n      el = document.createTextNode(' ');\n      setTokenType('text');\n    }\n  }\n  function setTokenType(type) {\n    if (token.descriptor) return;\n    var parsed = parseDirective(token.value);\n    token.descriptor = {\n      name: type,\n      def: directives[type],\n      expression: parsed.expression,\n      filters: parsed.filters\n    };\n  }\n  return el;\n}\n\n/**\n * Build a function that processes a textNode.\n *\n * @param {Array<Object>} tokens\n * @param {DocumentFragment} frag\n */\n\nfunction makeTextNodeLinkFn(tokens, frag) {\n  return function textNodeLinkFn(vm, el, host, scope) {\n    var fragClone = frag.cloneNode(true);\n    var childNodes = toArray(fragClone.childNodes);\n    var token, value, node;\n    for (var i = 0, l = tokens.length; i < l; i++) {\n      token = tokens[i];\n      value = token.value;\n      if (token.tag) {\n        node = childNodes[i];\n        if (token.oneTime) {\n          value = (scope || vm).$eval(value);\n          if (token.html) {\n            replace(node, parseTemplate(value, true));\n          } else {\n            node.data = _toString(value);\n          }\n        } else {\n          vm._bindDir(token.descriptor, node, host, scope);\n        }\n      }\n    }\n    replace(el, fragClone);\n  };\n}\n\n/**\n * Compile a node list and return a childLinkFn.\n *\n * @param {NodeList} nodeList\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction compileNodeList(nodeList, options) {\n  var linkFns = [];\n  var nodeLinkFn, childLinkFn, node;\n  for (var i = 0, l = nodeList.length; i < l; i++) {\n    node = nodeList[i];\n    nodeLinkFn = compileNode(node, options);\n    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n    linkFns.push(nodeLinkFn, childLinkFn);\n  }\n  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n}\n\n/**\n * Make a child link function for a node's childNodes.\n *\n * @param {Array<Function>} linkFns\n * @return {Function} childLinkFn\n */\n\nfunction makeChildLinkFn(linkFns) {\n  return function childLinkFn(vm, nodes, host, scope, frag) {\n    var node, nodeLinkFn, childrenLinkFn;\n    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n      node = nodes[n];\n      nodeLinkFn = linkFns[i++];\n      childrenLinkFn = linkFns[i++];\n      // cache childNodes before linking parent, fix #657\n      var childNodes = toArray(node.childNodes);\n      if (nodeLinkFn) {\n        nodeLinkFn(vm, node, host, scope, frag);\n      }\n      if (childrenLinkFn) {\n        childrenLinkFn(vm, childNodes, host, scope, frag);\n      }\n    }\n  };\n}\n\n/**\n * Check for element directives (custom elements that should\n * be resovled as terminal directives).\n *\n * @param {Element} el\n * @param {Object} options\n */\n\nfunction checkElementDirectives(el, options) {\n  var tag = el.tagName.toLowerCase();\n  if (commonTagRE.test(tag)) {\n    return;\n  }\n  var def = resolveAsset(options, 'elementDirectives', tag);\n  if (def) {\n    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n  }\n}\n\n/**\n * Check if an element is a component. If yes, return\n * a component link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction checkComponent(el, options) {\n  var component = checkComponentAttr(el, options);\n  if (component) {\n    var ref = findRef(el);\n    var descriptor = {\n      name: 'component',\n      ref: ref,\n      expression: component.id,\n      def: internalDirectives.component,\n      modifiers: {\n        literal: !component.dynamic\n      }\n    };\n    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n      if (ref) {\n        defineReactive((scope || vm).$refs, ref, null);\n      }\n      vm._bindDir(descriptor, el, host, scope, frag);\n    };\n    componentLinkFn.terminal = true;\n    return componentLinkFn;\n  }\n}\n\n/**\n * Check an element for terminal directives in fixed order.\n * If it finds one, return a terminal link function.\n *\n * @param {Element} el\n * @param {Array} attrs\n * @param {Object} options\n * @return {Function} terminalLinkFn\n */\n\nfunction checkTerminalDirectives(el, attrs, options) {\n  // skip v-pre\n  if (getAttr(el, 'v-pre') !== null) {\n    return skip;\n  }\n  // skip v-else block, but only if following v-if\n  if (el.hasAttribute('v-else')) {\n    var prev = el.previousElementSibling;\n    if (prev && prev.hasAttribute('v-if')) {\n      return skip;\n    }\n  }\n\n  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n  for (var i = 0, j = attrs.length; i < j; i++) {\n    attr = attrs[i];\n    name = attr.name.replace(modifierRE, '');\n    if (matched = name.match(dirAttrRE)) {\n      def = resolveAsset(options, 'directives', matched[1]);\n      if (def && def.terminal) {\n        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n          termDef = def;\n          rawName = attr.name;\n          modifiers = parseModifiers(attr.name);\n          value = attr.value;\n          dirName = matched[1];\n          arg = matched[2];\n        }\n      }\n    }\n  }\n\n  if (termDef) {\n    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n  }\n}\n\nfunction skip() {}\nskip.terminal = true;\n\n/**\n * Build a node link function for a terminal directive.\n * A terminal link function terminates the current\n * compilation recursion and handles compilation of the\n * subtree in the directive.\n *\n * @param {Element} el\n * @param {String} dirName\n * @param {String} value\n * @param {Object} options\n * @param {Object} def\n * @param {String} [rawName]\n * @param {String} [arg]\n * @param {Object} [modifiers]\n * @return {Function} terminalLinkFn\n */\n\nfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n  var parsed = parseDirective(value);\n  var descriptor = {\n    name: dirName,\n    arg: arg,\n    expression: parsed.expression,\n    filters: parsed.filters,\n    raw: value,\n    attr: rawName,\n    modifiers: modifiers,\n    def: def\n  };\n  // check ref for v-for and router-view\n  if (dirName === 'for' || dirName === 'router-view') {\n    descriptor.ref = findRef(el);\n  }\n  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n    if (descriptor.ref) {\n      defineReactive((scope || vm).$refs, descriptor.ref, null);\n    }\n    vm._bindDir(descriptor, el, host, scope, frag);\n  };\n  fn.terminal = true;\n  return fn;\n}\n\n/**\n * Compile the directives on an element and return a linker.\n *\n * @param {Array|NamedNodeMap} attrs\n * @param {Object} options\n * @return {Function}\n */\n\nfunction compileDirectives(attrs, options) {\n  var i = attrs.length;\n  var dirs = [];\n  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n  while (i--) {\n    attr = attrs[i];\n    name = rawName = attr.name;\n    value = rawValue = attr.value;\n    tokens = parseText(value);\n    // reset arg\n    arg = null;\n    // check modifiers\n    modifiers = parseModifiers(name);\n    name = name.replace(modifierRE, '');\n\n    // attribute interpolations\n    if (tokens) {\n      value = tokensToExp(tokens);\n      arg = name;\n      pushDir('bind', directives.bind, tokens);\n      // warn against mixing mustaches with v-bind\n      if (process.env.NODE_ENV !== 'production') {\n        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n          return attr.name === ':class' || attr.name === 'v-bind:class';\n        })) {\n          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n        }\n      }\n    } else\n\n      // special attribute: transition\n      if (transitionRE.test(name)) {\n        modifiers.literal = !bindRE.test(name);\n        pushDir('transition', internalDirectives.transition);\n      } else\n\n        // event handlers\n        if (onRE.test(name)) {\n          arg = name.replace(onRE, '');\n          pushDir('on', directives.on);\n        } else\n\n          // attribute bindings\n          if (bindRE.test(name)) {\n            dirName = name.replace(bindRE, '');\n            if (dirName === 'style' || dirName === 'class') {\n              pushDir(dirName, internalDirectives[dirName]);\n            } else {\n              arg = dirName;\n              pushDir('bind', directives.bind);\n            }\n          } else\n\n            // normal directives\n            if (matched = name.match(dirAttrRE)) {\n              dirName = matched[1];\n              arg = matched[2];\n\n              // skip v-else (when used with v-show)\n              if (dirName === 'else') {\n                continue;\n              }\n\n              dirDef = resolveAsset(options, 'directives', dirName, true);\n              if (dirDef) {\n                pushDir(dirName, dirDef);\n              }\n            }\n  }\n\n  /**\n   * Push a directive.\n   *\n   * @param {String} dirName\n   * @param {Object|Function} def\n   * @param {Array} [interpTokens]\n   */\n\n  function pushDir(dirName, def, interpTokens) {\n    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n    var parsed = !hasOneTimeToken && parseDirective(value);\n    dirs.push({\n      name: dirName,\n      attr: rawName,\n      raw: rawValue,\n      def: def,\n      arg: arg,\n      modifiers: modifiers,\n      // conversion from interpolation strings with one-time token\n      // to expression is differed until directive bind time so that we\n      // have access to the actual vm context for one-time bindings.\n      expression: parsed && parsed.expression,\n      filters: parsed && parsed.filters,\n      interp: interpTokens,\n      hasOneTime: hasOneTimeToken\n    });\n  }\n\n  if (dirs.length) {\n    return makeNodeLinkFn(dirs);\n  }\n}\n\n/**\n * Parse modifiers from directive attribute name.\n *\n * @param {String} name\n * @return {Object}\n */\n\nfunction parseModifiers(name) {\n  var res = Object.create(null);\n  var match = name.match(modifierRE);\n  if (match) {\n    var i = match.length;\n    while (i--) {\n      res[match[i].slice(1)] = true;\n    }\n  }\n  return res;\n}\n\n/**\n * Build a link function for all directives on a single node.\n *\n * @param {Array} directives\n * @return {Function} directivesLinkFn\n */\n\nfunction makeNodeLinkFn(directives) {\n  return function nodeLinkFn(vm, el, host, scope, frag) {\n    // reverse apply because it's sorted low to high\n    var i = directives.length;\n    while (i--) {\n      vm._bindDir(directives[i], el, host, scope, frag);\n    }\n  };\n}\n\n/**\n * Check if an interpolation string contains one-time tokens.\n *\n * @param {Array} tokens\n * @return {Boolean}\n */\n\nfunction hasOneTime(tokens) {\n  var i = tokens.length;\n  while (i--) {\n    if (tokens[i].oneTime) return true;\n  }\n}\n\nfunction isScript(el) {\n  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n}\n\nvar specialCharRE = /[^\\w\\-:\\.]/;\n\n/**\n * Process an element or a DocumentFragment based on a\n * instance option object. This allows us to transclude\n * a template node/fragment before the instance is created,\n * so the processed fragment can then be cloned and reused\n * in v-for.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transclude(el, options) {\n  // extract container attributes to pass them down\n  // to compiler, because they need to be compiled in\n  // parent scope. we are mutating the options object here\n  // assuming the same object will be used for compile\n  // right after this.\n  if (options) {\n    options._containerAttrs = extractAttrs(el);\n  }\n  // for template tags, what we want is its content as\n  // a documentFragment (for fragment instances)\n  if (isTemplate(el)) {\n    el = parseTemplate(el);\n  }\n  if (options) {\n    if (options._asComponent && !options.template) {\n      options.template = '<slot></slot>';\n    }\n    if (options.template) {\n      options._content = extractContent(el);\n      el = transcludeTemplate(el, options);\n    }\n  }\n  if (isFragment(el)) {\n    // anchors for fragment instance\n    // passing in `persist: true` to avoid them being\n    // discarded by IE during template cloning\n    prepend(createAnchor('v-start', true), el);\n    el.appendChild(createAnchor('v-end', true));\n  }\n  return el;\n}\n\n/**\n * Process the template option.\n * If the replace option is true this will swap the $el.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transcludeTemplate(el, options) {\n  var template = options.template;\n  var frag = parseTemplate(template, true);\n  if (frag) {\n    var replacer = frag.firstChild;\n    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n    if (options.replace) {\n      /* istanbul ignore if */\n      if (el === document.body) {\n        process.env.NODE_ENV !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n      }\n      // there are many cases where the instance must\n      // become a fragment instance: basically anything that\n      // can create more than 1 root nodes.\n      if (\n      // multi-children template\n      frag.childNodes.length > 1 ||\n      // non-element template\n      replacer.nodeType !== 1 ||\n      // single nested component\n      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n      // element directive\n      resolveAsset(options, 'elementDirectives', tag) ||\n      // for block\n      replacer.hasAttribute('v-for') ||\n      // if block\n      replacer.hasAttribute('v-if')) {\n        return frag;\n      } else {\n        options._replacerAttrs = extractAttrs(replacer);\n        mergeAttrs(el, replacer);\n        return replacer;\n      }\n    } else {\n      el.appendChild(frag);\n      return el;\n    }\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid template option: ' + template);\n  }\n}\n\n/**\n * Helper to extract a component container's attributes\n * into a plain object array.\n *\n * @param {Element} el\n * @return {Array}\n */\n\nfunction extractAttrs(el) {\n  if (el.nodeType === 1 && el.hasAttributes()) {\n    return toArray(el.attributes);\n  }\n}\n\n/**\n * Merge the attributes of two elements, and make sure\n * the class names are merged properly.\n *\n * @param {Element} from\n * @param {Element} to\n */\n\nfunction mergeAttrs(from, to) {\n  var attrs = from.attributes;\n  var i = attrs.length;\n  var name, value;\n  while (i--) {\n    name = attrs[i].name;\n    value = attrs[i].value;\n    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n      to.setAttribute(name, value);\n    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n      value.split(/\\s+/).forEach(function (cls) {\n        addClass(to, cls);\n      });\n    }\n  }\n}\n\n/**\n * Scan and determine slot content distribution.\n * We do this during transclusion instead at compile time so that\n * the distribution is decoupled from the compilation order of\n * the slots.\n *\n * @param {Element|DocumentFragment} template\n * @param {Element} content\n * @param {Vue} vm\n */\n\nfunction resolveSlots(vm, content) {\n  if (!content) {\n    return;\n  }\n  var contents = vm._slotContents = Object.create(null);\n  var el, name;\n  for (var i = 0, l = content.children.length; i < l; i++) {\n    el = content.children[i];\n    /* eslint-disable no-cond-assign */\n    if (name = el.getAttribute('slot')) {\n      (contents[name] || (contents[name] = [])).push(el);\n    }\n    /* eslint-enable no-cond-assign */\n    if (process.env.NODE_ENV !== 'production' && getBindAttr(el, 'slot')) {\n      warn('The \"slot\" attribute must be static.', vm.$parent);\n    }\n  }\n  for (name in contents) {\n    contents[name] = extractFragment(contents[name], content);\n  }\n  if (content.hasChildNodes()) {\n    var nodes = content.childNodes;\n    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n      return;\n    }\n    contents['default'] = extractFragment(content.childNodes, content);\n  }\n}\n\n/**\n * Extract qualified content nodes from a node list.\n *\n * @param {NodeList} nodes\n * @return {DocumentFragment}\n */\n\nfunction extractFragment(nodes, parent) {\n  var frag = document.createDocumentFragment();\n  nodes = toArray(nodes);\n  for (var i = 0, l = nodes.length; i < l; i++) {\n    var node = nodes[i];\n    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n      parent.removeChild(node);\n      node = parseTemplate(node, true);\n    }\n    frag.appendChild(node);\n  }\n  return frag;\n}\n\n\n\nvar compiler = Object.freeze({\n\tcompile: compile,\n\tcompileAndLinkProps: compileAndLinkProps,\n\tcompileRoot: compileRoot,\n\ttransclude: transclude,\n\tresolveSlots: resolveSlots\n});\n\nfunction stateMixin (Vue) {\n  /**\n   * Accessor for `$data` property, since setting $data\n   * requires observing the new object and updating\n   * proxied properties.\n   */\n\n  Object.defineProperty(Vue.prototype, '$data', {\n    get: function get() {\n      return this._data;\n    },\n    set: function set(newData) {\n      if (newData !== this._data) {\n        this._setData(newData);\n      }\n    }\n  });\n\n  /**\n   * Setup the scope of an instance, which contains:\n   * - observed data\n   * - computed properties\n   * - user methods\n   * - meta properties\n   */\n\n  Vue.prototype._initState = function () {\n    this._initProps();\n    this._initMeta();\n    this._initMethods();\n    this._initData();\n    this._initComputed();\n  };\n\n  /**\n   * Initialize props.\n   */\n\n  Vue.prototype._initProps = function () {\n    var options = this.$options;\n    var el = options.el;\n    var props = options.props;\n    if (props && !el) {\n      process.env.NODE_ENV !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n    }\n    // make sure to convert string selectors into element now\n    el = options.el = query(el);\n    this._propsUnlinkFn = el && el.nodeType === 1 && props\n    // props must be linked in proper scope if inside v-for\n    ? compileAndLinkProps(this, el, props, this._scope) : null;\n  };\n\n  /**\n   * Initialize the data.\n   */\n\n  Vue.prototype._initData = function () {\n    var dataFn = this.$options.data;\n    var data = this._data = dataFn ? dataFn() : {};\n    if (!isPlainObject(data)) {\n      data = {};\n      process.env.NODE_ENV !== 'production' && warn('data functions should return an object.', this);\n    }\n    var props = this._props;\n    // proxy data on instance\n    var keys = Object.keys(data);\n    var i, key;\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      // there are two scenarios where we can proxy a data key:\n      // 1. it's not already defined as a prop\n      // 2. it's provided via a instantiation option AND there are no\n      //    template prop present\n      if (!props || !hasOwn(props, key)) {\n        this._proxy(key);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n      }\n    }\n    // observe data\n    observe(data, this);\n  };\n\n  /**\n   * Swap the instance's $data. Called in $data's setter.\n   *\n   * @param {Object} newData\n   */\n\n  Vue.prototype._setData = function (newData) {\n    newData = newData || {};\n    var oldData = this._data;\n    this._data = newData;\n    var keys, key, i;\n    // unproxy keys not present in new data\n    keys = Object.keys(oldData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!(key in newData)) {\n        this._unproxy(key);\n      }\n    }\n    // proxy keys not already proxied,\n    // and trigger change for changed values\n    keys = Object.keys(newData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!hasOwn(this, key)) {\n        // new property\n        this._proxy(key);\n      }\n    }\n    oldData.__ob__.removeVm(this);\n    observe(newData, this);\n    this._digest();\n  };\n\n  /**\n   * Proxy a property, so that\n   * vm.prop === vm._data.prop\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._proxy = function (key) {\n    if (!isReserved(key)) {\n      // need to store ref to self here\n      // because these getter/setters might\n      // be called by child scopes via\n      // prototype inheritance.\n      var self = this;\n      Object.defineProperty(self, key, {\n        configurable: true,\n        enumerable: true,\n        get: function proxyGetter() {\n          return self._data[key];\n        },\n        set: function proxySetter(val) {\n          self._data[key] = val;\n        }\n      });\n    }\n  };\n\n  /**\n   * Unproxy a property.\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._unproxy = function (key) {\n    if (!isReserved(key)) {\n      delete this[key];\n    }\n  };\n\n  /**\n   * Force update on every watcher in scope.\n   */\n\n  Vue.prototype._digest = function () {\n    for (var i = 0, l = this._watchers.length; i < l; i++) {\n      this._watchers[i].update(true); // shallow updates\n    }\n  };\n\n  /**\n   * Setup computed properties. They are essentially\n   * special getter/setters\n   */\n\n  function noop() {}\n  Vue.prototype._initComputed = function () {\n    var computed = this.$options.computed;\n    if (computed) {\n      for (var key in computed) {\n        var userDef = computed[key];\n        var def = {\n          enumerable: true,\n          configurable: true\n        };\n        if (typeof userDef === 'function') {\n          def.get = makeComputedGetter(userDef, this);\n          def.set = noop;\n        } else {\n          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n          def.set = userDef.set ? bind(userDef.set, this) : noop;\n        }\n        Object.defineProperty(this, key, def);\n      }\n    }\n  };\n\n  function makeComputedGetter(getter, owner) {\n    var watcher = new Watcher(owner, getter, null, {\n      lazy: true\n    });\n    return function computedGetter() {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value;\n    };\n  }\n\n  /**\n   * Setup instance methods. Methods must be bound to the\n   * instance since they might be passed down as a prop to\n   * child components.\n   */\n\n  Vue.prototype._initMethods = function () {\n    var methods = this.$options.methods;\n    if (methods) {\n      for (var key in methods) {\n        this[key] = bind(methods[key], this);\n      }\n    }\n  };\n\n  /**\n   * Initialize meta information like $index, $key & $value.\n   */\n\n  Vue.prototype._initMeta = function () {\n    var metas = this.$options._meta;\n    if (metas) {\n      for (var key in metas) {\n        defineReactive(this, key, metas[key]);\n      }\n    }\n  };\n}\n\nvar eventRE = /^v-on:|^@/;\n\nfunction eventsMixin (Vue) {\n  /**\n   * Setup the instance's option events & watchers.\n   * If the value is a string, we pull it from the\n   * instance's methods by name.\n   */\n\n  Vue.prototype._initEvents = function () {\n    var options = this.$options;\n    if (options._asComponent) {\n      registerComponentEvents(this, options.el);\n    }\n    registerCallbacks(this, '$on', options.events);\n    registerCallbacks(this, '$watch', options.watch);\n  };\n\n  /**\n   * Register v-on events on a child component\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   */\n\n  function registerComponentEvents(vm, el) {\n    var attrs = el.attributes;\n    var name, value, handler;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      name = attrs[i].name;\n      if (eventRE.test(name)) {\n        name = name.replace(eventRE, '');\n        // force the expression into a statement so that\n        // it always dynamically resolves the method to call (#2670)\n        // kinda ugly hack, but does the job.\n        value = attrs[i].value;\n        if (isSimplePath(value)) {\n          value += '.apply(this, $arguments)';\n        }\n        handler = (vm._scope || vm._context).$eval(value, true);\n        handler._fromParent = true;\n        vm.$on(name.replace(eventRE), handler);\n      }\n    }\n  }\n\n  /**\n   * Register callbacks for option events and watchers.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {Object} hash\n   */\n\n  function registerCallbacks(vm, action, hash) {\n    if (!hash) return;\n    var handlers, key, i, j;\n    for (key in hash) {\n      handlers = hash[key];\n      if (isArray(handlers)) {\n        for (i = 0, j = handlers.length; i < j; i++) {\n          register(vm, action, key, handlers[i]);\n        }\n      } else {\n        register(vm, action, key, handlers);\n      }\n    }\n  }\n\n  /**\n   * Helper to register an event/watch callback.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {String} key\n   * @param {Function|String|Object} handler\n   * @param {Object} [options]\n   */\n\n  function register(vm, action, key, handler, options) {\n    var type = typeof handler;\n    if (type === 'function') {\n      vm[action](key, handler, options);\n    } else if (type === 'string') {\n      var methods = vm.$options.methods;\n      var method = methods && methods[handler];\n      if (method) {\n        vm[action](key, method, options);\n      } else {\n        process.env.NODE_ENV !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n      }\n    } else if (handler && type === 'object') {\n      register(vm, action, key, handler.handler, handler);\n    }\n  }\n\n  /**\n   * Setup recursive attached/detached calls\n   */\n\n  Vue.prototype._initDOMHooks = function () {\n    this.$on('hook:attached', onAttached);\n    this.$on('hook:detached', onDetached);\n  };\n\n  /**\n   * Callback to recursively call attached hook on children\n   */\n\n  function onAttached() {\n    if (!this._isAttached) {\n      this._isAttached = true;\n      this.$children.forEach(callAttach);\n    }\n  }\n\n  /**\n   * Iterator to call attached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callAttach(child) {\n    if (!child._isAttached && inDoc(child.$el)) {\n      child._callHook('attached');\n    }\n  }\n\n  /**\n   * Callback to recursively call detached hook on children\n   */\n\n  function onDetached() {\n    if (this._isAttached) {\n      this._isAttached = false;\n      this.$children.forEach(callDetach);\n    }\n  }\n\n  /**\n   * Iterator to call detached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callDetach(child) {\n    if (child._isAttached && !inDoc(child.$el)) {\n      child._callHook('detached');\n    }\n  }\n\n  /**\n   * Trigger all handlers for a hook\n   *\n   * @param {String} hook\n   */\n\n  Vue.prototype._callHook = function (hook) {\n    this.$emit('pre-hook:' + hook);\n    var handlers = this.$options[hook];\n    if (handlers) {\n      for (var i = 0, j = handlers.length; i < j; i++) {\n        handlers[i].call(this);\n      }\n    }\n    this.$emit('hook:' + hook);\n  };\n}\n\nfunction noop$1() {}\n\n/**\n * A directive links a DOM element with a piece of data,\n * which is the result of evaluating an expression.\n * It registers a watcher with the expression and calls\n * the DOM update function when a change is triggered.\n *\n * @param {Object} descriptor\n *                 - {String} name\n *                 - {Object} def\n *                 - {String} expression\n *                 - {Array<Object>} [filters]\n *                 - {Object} [modifiers]\n *                 - {Boolean} literal\n *                 - {String} attr\n *                 - {String} arg\n *                 - {String} raw\n *                 - {String} [ref]\n *                 - {Array<Object>} [interp]\n *                 - {Boolean} [hasOneTime]\n * @param {Vue} vm\n * @param {Node} el\n * @param {Vue} [host] - transclusion host component\n * @param {Object} [scope] - v-for scope\n * @param {Fragment} [frag] - owner fragment\n * @constructor\n */\nfunction Directive(descriptor, vm, el, host, scope, frag) {\n  this.vm = vm;\n  this.el = el;\n  // copy descriptor properties\n  this.descriptor = descriptor;\n  this.name = descriptor.name;\n  this.expression = descriptor.expression;\n  this.arg = descriptor.arg;\n  this.modifiers = descriptor.modifiers;\n  this.filters = descriptor.filters;\n  this.literal = this.modifiers && this.modifiers.literal;\n  // private\n  this._locked = false;\n  this._bound = false;\n  this._listeners = null;\n  // link context\n  this._host = host;\n  this._scope = scope;\n  this._frag = frag;\n  // store directives on node in dev mode\n  if (process.env.NODE_ENV !== 'production' && this.el) {\n    this.el._vue_directives = this.el._vue_directives || [];\n    this.el._vue_directives.push(this);\n  }\n}\n\n/**\n * Initialize the directive, mixin definition properties,\n * setup the watcher, call definition bind() and update()\n * if present.\n */\n\nDirective.prototype._bind = function () {\n  var name = this.name;\n  var descriptor = this.descriptor;\n\n  // remove attribute\n  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n    var attr = descriptor.attr || 'v-' + name;\n    this.el.removeAttribute(attr);\n  }\n\n  // copy def properties\n  var def = descriptor.def;\n  if (typeof def === 'function') {\n    this.update = def;\n  } else {\n    extend(this, def);\n  }\n\n  // setup directive params\n  this._setupParams();\n\n  // initial bind\n  if (this.bind) {\n    this.bind();\n  }\n  this._bound = true;\n\n  if (this.literal) {\n    this.update && this.update(descriptor.raw);\n  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n    // wrapped updater for context\n    var dir = this;\n    if (this.update) {\n      this._update = function (val, oldVal) {\n        if (!dir._locked) {\n          dir.update(val, oldVal);\n        }\n      };\n    } else {\n      this._update = noop$1;\n    }\n    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n    {\n      filters: this.filters,\n      twoWay: this.twoWay,\n      deep: this.deep,\n      preProcess: preProcess,\n      postProcess: postProcess,\n      scope: this._scope\n    });\n    // v-model with inital inline value need to sync back to\n    // model instead of update to DOM on init. They would\n    // set the afterBind hook to indicate that.\n    if (this.afterBind) {\n      this.afterBind();\n    } else if (this.update) {\n      this.update(watcher.value);\n    }\n  }\n};\n\n/**\n * Setup all param attributes, e.g. track-by,\n * transition-mode, etc...\n */\n\nDirective.prototype._setupParams = function () {\n  if (!this.params) {\n    return;\n  }\n  var params = this.params;\n  // swap the params array with a fresh object.\n  this.params = Object.create(null);\n  var i = params.length;\n  var key, val, mappedKey;\n  while (i--) {\n    key = hyphenate(params[i]);\n    mappedKey = camelize(key);\n    val = getBindAttr(this.el, key);\n    if (val != null) {\n      // dynamic\n      this._setupParamWatcher(mappedKey, val);\n    } else {\n      // static\n      val = getAttr(this.el, key);\n      if (val != null) {\n        this.params[mappedKey] = val === '' ? true : val;\n      }\n    }\n  }\n};\n\n/**\n * Setup a watcher for a dynamic param.\n *\n * @param {String} key\n * @param {String} expression\n */\n\nDirective.prototype._setupParamWatcher = function (key, expression) {\n  var self = this;\n  var called = false;\n  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n    self.params[key] = val;\n    // since we are in immediate mode,\n    // only call the param change callbacks if this is not the first update.\n    if (called) {\n      var cb = self.paramWatchers && self.paramWatchers[key];\n      if (cb) {\n        cb.call(self, val, oldVal);\n      }\n    } else {\n      called = true;\n    }\n  }, {\n    immediate: true,\n    user: false\n  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n};\n\n/**\n * Check if the directive is a function caller\n * and if the expression is a callable one. If both true,\n * we wrap up the expression and use it as the event\n * handler.\n *\n * e.g. on-click=\"a++\"\n *\n * @return {Boolean}\n */\n\nDirective.prototype._checkStatement = function () {\n  var expression = this.expression;\n  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n    var fn = parseExpression(expression).get;\n    var scope = this._scope || this.vm;\n    var handler = function handler(e) {\n      scope.$event = e;\n      fn.call(scope, scope);\n      scope.$event = null;\n    };\n    if (this.filters) {\n      handler = scope._applyFilters(handler, null, this.filters);\n    }\n    this.update(handler);\n    return true;\n  }\n};\n\n/**\n * Set the corresponding value with the setter.\n * This should only be used in two-way directives\n * e.g. v-model.\n *\n * @param {*} value\n * @public\n */\n\nDirective.prototype.set = function (value) {\n  /* istanbul ignore else */\n  if (this.twoWay) {\n    this._withLock(function () {\n      this._watcher.set(value);\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n  }\n};\n\n/**\n * Execute a function while preventing that function from\n * triggering updates on this directive instance.\n *\n * @param {Function} fn\n */\n\nDirective.prototype._withLock = function (fn) {\n  var self = this;\n  self._locked = true;\n  fn.call(self);\n  nextTick(function () {\n    self._locked = false;\n  });\n};\n\n/**\n * Convenience method that attaches a DOM event listener\n * to the directive element and autometically tears it down\n * during unbind.\n *\n * @param {String} event\n * @param {Function} handler\n * @param {Boolean} [useCapture]\n */\n\nDirective.prototype.on = function (event, handler, useCapture) {\n  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n};\n\n/**\n * Teardown the watcher and call unbind.\n */\n\nDirective.prototype._teardown = function () {\n  if (this._bound) {\n    this._bound = false;\n    if (this.unbind) {\n      this.unbind();\n    }\n    if (this._watcher) {\n      this._watcher.teardown();\n    }\n    var listeners = this._listeners;\n    var i;\n    if (listeners) {\n      i = listeners.length;\n      while (i--) {\n        off(this.el, listeners[i][0], listeners[i][1]);\n      }\n    }\n    var unwatchFns = this._paramUnwatchFns;\n    if (unwatchFns) {\n      i = unwatchFns.length;\n      while (i--) {\n        unwatchFns[i]();\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' && this.el) {\n      this.el._vue_directives.$remove(this);\n    }\n    this.vm = this.el = this._watcher = this._listeners = null;\n  }\n};\n\nfunction lifecycleMixin (Vue) {\n  /**\n   * Update v-ref for component.\n   *\n   * @param {Boolean} remove\n   */\n\n  Vue.prototype._updateRef = function (remove) {\n    var ref = this.$options._ref;\n    if (ref) {\n      var refs = (this._scope || this._context).$refs;\n      if (remove) {\n        if (refs[ref] === this) {\n          refs[ref] = null;\n        }\n      } else {\n        refs[ref] = this;\n      }\n    }\n  };\n\n  /**\n   * Transclude, compile and link element.\n   *\n   * If a pre-compiled linker is available, that means the\n   * passed in element will be pre-transcluded and compiled\n   * as well - all we need to do is to call the linker.\n   *\n   * Otherwise we need to call transclude/compile/link here.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._compile = function (el) {\n    var options = this.$options;\n\n    // transclude and init element\n    // transclude can potentially replace original\n    // so we need to keep reference; this step also injects\n    // the template and caches the original attributes\n    // on the container node and replacer node.\n    var original = el;\n    el = transclude(el, options);\n    this._initElement(el);\n\n    // handle v-pre on root node (#2026)\n    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n      return;\n    }\n\n    // root is always compiled per-instance, because\n    // container attrs and props can be different every time.\n    var contextOptions = this._context && this._context.$options;\n    var rootLinker = compileRoot(el, options, contextOptions);\n\n    // resolve slot distribution\n    resolveSlots(this, options._content);\n\n    // compile and link the rest\n    var contentLinkFn;\n    var ctor = this.constructor;\n    // component compilation can be cached\n    // as long as it's not using inline-template\n    if (options._linkerCachable) {\n      contentLinkFn = ctor.linker;\n      if (!contentLinkFn) {\n        contentLinkFn = ctor.linker = compile(el, options);\n      }\n    }\n\n    // link phase\n    // make sure to link root with prop scope!\n    var rootUnlinkFn = rootLinker(this, el, this._scope);\n    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\n    // register composite unlink function\n    // to be called during instance destruction\n    this._unlinkFn = function () {\n      rootUnlinkFn();\n      // passing destroying: true to avoid searching and\n      // splicing the directives\n      contentUnlinkFn(true);\n    };\n\n    // finally replace original\n    if (options.replace) {\n      replace(original, el);\n    }\n\n    this._isCompiled = true;\n    this._callHook('compiled');\n  };\n\n  /**\n   * Initialize instance element. Called in the public\n   * $mount() method.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._initElement = function (el) {\n    if (isFragment(el)) {\n      this._isFragment = true;\n      this.$el = this._fragmentStart = el.firstChild;\n      this._fragmentEnd = el.lastChild;\n      // set persisted text anchors to empty\n      if (this._fragmentStart.nodeType === 3) {\n        this._fragmentStart.data = this._fragmentEnd.data = '';\n      }\n      this._fragment = el;\n    } else {\n      this.$el = el;\n    }\n    this.$el.__vue__ = this;\n    this._callHook('beforeCompile');\n  };\n\n  /**\n   * Create and bind a directive to an element.\n   *\n   * @param {Object} descriptor - parsed directive descriptor\n   * @param {Node} node   - target node\n   * @param {Vue} [host] - transclusion host component\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - owner fragment\n   */\n\n  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n  };\n\n  /**\n   * Teardown an instance, unobserves the data, unbind all the\n   * directives, turn off all the event listeners, etc.\n   *\n   * @param {Boolean} remove - whether to remove the DOM node.\n   * @param {Boolean} deferCleanup - if true, defer cleanup to\n   *                                 be called later\n   */\n\n  Vue.prototype._destroy = function (remove, deferCleanup) {\n    if (this._isBeingDestroyed) {\n      if (!deferCleanup) {\n        this._cleanup();\n      }\n      return;\n    }\n\n    var destroyReady;\n    var pendingRemoval;\n\n    var self = this;\n    // Cleanup should be called either synchronously or asynchronoysly as\n    // callback of this.$remove(), or if remove and deferCleanup are false.\n    // In any case it should be called after all other removing, unbinding and\n    // turning of is done\n    var cleanupIfPossible = function cleanupIfPossible() {\n      if (destroyReady && !pendingRemoval && !deferCleanup) {\n        self._cleanup();\n      }\n    };\n\n    // remove DOM element\n    if (remove && this.$el) {\n      pendingRemoval = true;\n      this.$remove(function () {\n        pendingRemoval = false;\n        cleanupIfPossible();\n      });\n    }\n\n    this._callHook('beforeDestroy');\n    this._isBeingDestroyed = true;\n    var i;\n    // remove self from parent. only necessary\n    // if parent is not being destroyed as well.\n    var parent = this.$parent;\n    if (parent && !parent._isBeingDestroyed) {\n      parent.$children.$remove(this);\n      // unregister ref (remove: true)\n      this._updateRef(true);\n    }\n    // destroy all children.\n    i = this.$children.length;\n    while (i--) {\n      this.$children[i].$destroy();\n    }\n    // teardown props\n    if (this._propsUnlinkFn) {\n      this._propsUnlinkFn();\n    }\n    // teardown all directives. this also tearsdown all\n    // directive-owned watchers.\n    if (this._unlinkFn) {\n      this._unlinkFn();\n    }\n    i = this._watchers.length;\n    while (i--) {\n      this._watchers[i].teardown();\n    }\n    // remove reference to self on $el\n    if (this.$el) {\n      this.$el.__vue__ = null;\n    }\n\n    destroyReady = true;\n    cleanupIfPossible();\n  };\n\n  /**\n   * Clean up to ensure garbage collection.\n   * This is called after the leave transition if there\n   * is any.\n   */\n\n  Vue.prototype._cleanup = function () {\n    if (this._isDestroyed) {\n      return;\n    }\n    // remove self from owner fragment\n    // do it in cleanup so that we can call $destroy with\n    // defer right when a fragment is about to be removed.\n    if (this._frag) {\n      this._frag.children.$remove(this);\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (this._data && this._data.__ob__) {\n      this._data.__ob__.removeVm(this);\n    }\n    // Clean up references to private properties and other\n    // instances. preserve reference to _data so that proxy\n    // accessors still work. The only potential side effect\n    // here is that mutating the instance after it's destroyed\n    // may affect the state of other components that are still\n    // observing the same object, but that seems to be a\n    // reasonable responsibility for the user rather than\n    // always throwing an error on them.\n    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n    // call the last hook...\n    this._isDestroyed = true;\n    this._callHook('destroyed');\n    // turn off all instance listeners.\n    this.$off();\n  };\n}\n\nfunction miscMixin (Vue) {\n  /**\n   * Apply a list of filter (descriptors) to a value.\n   * Using plain for loops here because this will be called in\n   * the getter of any watcher with filters so it is very\n   * performance sensitive.\n   *\n   * @param {*} value\n   * @param {*} [oldValue]\n   * @param {Array} filters\n   * @param {Boolean} write\n   * @return {*}\n   */\n\n  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n    var filter, fn, args, arg, offset, i, l, j, k;\n    for (i = 0, l = filters.length; i < l; i++) {\n      filter = filters[write ? l - i - 1 : i];\n      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n      if (!fn) continue;\n      fn = write ? fn.write : fn.read || fn;\n      if (typeof fn !== 'function') continue;\n      args = write ? [value, oldValue] : [value];\n      offset = write ? 2 : 1;\n      if (filter.args) {\n        for (j = 0, k = filter.args.length; j < k; j++) {\n          arg = filter.args[j];\n          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n        }\n      }\n      value = fn.apply(this, args);\n    }\n    return value;\n  };\n\n  /**\n   * Resolve a component, depending on whether the component\n   * is defined normally or using an async factory function.\n   * Resolves synchronously if already resolved, otherwise\n   * resolves asynchronously and caches the resolved\n   * constructor on the factory.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  Vue.prototype._resolveComponent = function (value, cb) {\n    var factory;\n    if (typeof value === 'function') {\n      factory = value;\n    } else {\n      factory = resolveAsset(this.$options, 'components', value, true);\n    }\n    /* istanbul ignore if */\n    if (!factory) {\n      return;\n    }\n    // async component factory\n    if (!factory.options) {\n      if (factory.resolved) {\n        // cached\n        cb(factory.resolved);\n      } else if (factory.requested) {\n        // pool callbacks\n        factory.pendingCallbacks.push(cb);\n      } else {\n        factory.requested = true;\n        var cbs = factory.pendingCallbacks = [cb];\n        factory.call(this, function resolve(res) {\n          if (isPlainObject(res)) {\n            res = Vue.extend(res);\n          }\n          // cache resolved\n          factory.resolved = res;\n          // invoke callbacks\n          for (var i = 0, l = cbs.length; i < l; i++) {\n            cbs[i](res);\n          }\n        }, function reject(reason) {\n          process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n        });\n      }\n    } else {\n      // normal component\n      cb(factory);\n    }\n  };\n}\n\nvar filterRE$1 = /[^|]\\|[^|]/;\n\nfunction dataAPI (Vue) {\n  /**\n   * Get the value from an expression on this vm.\n   *\n   * @param {String} exp\n   * @param {Boolean} [asStatement]\n   * @return {*}\n   */\n\n  Vue.prototype.$get = function (exp, asStatement) {\n    var res = parseExpression(exp);\n    if (res) {\n      if (asStatement) {\n        var self = this;\n        return function statementHandler() {\n          self.$arguments = toArray(arguments);\n          var result = res.get.call(self, self);\n          self.$arguments = null;\n          return result;\n        };\n      } else {\n        try {\n          return res.get.call(this, this);\n        } catch (e) {}\n      }\n    }\n  };\n\n  /**\n   * Set the value from an expression on this vm.\n   * The expression must be a valid left-hand\n   * expression in an assignment.\n   *\n   * @param {String} exp\n   * @param {*} val\n   */\n\n  Vue.prototype.$set = function (exp, val) {\n    var res = parseExpression(exp, true);\n    if (res && res.set) {\n      res.set.call(this, this, val);\n    }\n  };\n\n  /**\n   * Delete a property on the VM\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype.$delete = function (key) {\n    del(this._data, key);\n  };\n\n  /**\n   * Watch an expression, trigger callback when its\n   * value changes.\n   *\n   * @param {String|Function} expOrFn\n   * @param {Function} cb\n   * @param {Object} [options]\n   *                 - {Boolean} deep\n   *                 - {Boolean} immediate\n   * @return {Function} - unwatchFn\n   */\n\n  Vue.prototype.$watch = function (expOrFn, cb, options) {\n    var vm = this;\n    var parsed;\n    if (typeof expOrFn === 'string') {\n      parsed = parseDirective(expOrFn);\n      expOrFn = parsed.expression;\n    }\n    var watcher = new Watcher(vm, expOrFn, cb, {\n      deep: options && options.deep,\n      sync: options && options.sync,\n      filters: parsed && parsed.filters,\n      user: !options || options.user !== false\n    });\n    if (options && options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn() {\n      watcher.teardown();\n    };\n  };\n\n  /**\n   * Evaluate a text directive, including filters.\n   *\n   * @param {String} text\n   * @param {Boolean} [asStatement]\n   * @return {String}\n   */\n\n  Vue.prototype.$eval = function (text, asStatement) {\n    // check for filters.\n    if (filterRE$1.test(text)) {\n      var dir = parseDirective(text);\n      // the filter regex check might give false positive\n      // for pipes inside strings, so it's possible that\n      // we don't get any filters here\n      var val = this.$get(dir.expression, asStatement);\n      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n    } else {\n      // no filter\n      return this.$get(text, asStatement);\n    }\n  };\n\n  /**\n   * Interpolate a piece of template text.\n   *\n   * @param {String} text\n   * @return {String}\n   */\n\n  Vue.prototype.$interpolate = function (text) {\n    var tokens = parseText(text);\n    var vm = this;\n    if (tokens) {\n      if (tokens.length === 1) {\n        return vm.$eval(tokens[0].value) + '';\n      } else {\n        return tokens.map(function (token) {\n          return token.tag ? vm.$eval(token.value) : token.value;\n        }).join('');\n      }\n    } else {\n      return text;\n    }\n  };\n\n  /**\n   * Log instance data as a plain JS object\n   * so that it is easier to inspect in console.\n   * This method assumes console is available.\n   *\n   * @param {String} [path]\n   */\n\n  Vue.prototype.$log = function (path) {\n    var data = path ? getPath(this._data, path) : this._data;\n    if (data) {\n      data = clean(data);\n    }\n    // include computed fields\n    if (!path) {\n      var key;\n      for (key in this.$options.computed) {\n        data[key] = clean(this[key]);\n      }\n      if (this._props) {\n        for (key in this._props) {\n          data[key] = clean(this[key]);\n        }\n      }\n    }\n    console.log(data);\n  };\n\n  /**\n   * \"clean\" a getter/setter converted object into a plain\n   * object copy.\n   *\n   * @param {Object} - obj\n   * @return {Object}\n   */\n\n  function clean(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n}\n\nfunction domAPI (Vue) {\n  /**\n   * Convenience on-instance nextTick. The callback is\n   * auto-bound to the instance, and this avoids component\n   * modules having to rely on the global Vue.\n   *\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$nextTick = function (fn) {\n    nextTick(fn, this);\n  };\n\n  /**\n   * Append instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, append, appendWithTransition);\n  };\n\n  /**\n   * Prepend instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.hasChildNodes()) {\n      this.$before(target.firstChild, cb, withTransition);\n    } else {\n      this.$appendTo(target, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Insert instance before target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$before = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n  };\n\n  /**\n   * Insert instance after target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$after = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.nextSibling) {\n      this.$before(target.nextSibling, cb, withTransition);\n    } else {\n      this.$appendTo(target.parentNode, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Remove instance from DOM\n   *\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$remove = function (cb, withTransition) {\n    if (!this.$el.parentNode) {\n      return cb && cb();\n    }\n    var inDocument = this._isAttached && inDoc(this.$el);\n    // if we are not in document, no need to check\n    // for transitions\n    if (!inDocument) withTransition = false;\n    var self = this;\n    var realCb = function realCb() {\n      if (inDocument) self._callHook('detached');\n      if (cb) cb();\n    };\n    if (this._isFragment) {\n      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n    } else {\n      var op = withTransition === false ? removeWithCb : removeWithTransition;\n      op(this.$el, this, realCb);\n    }\n    return this;\n  };\n\n  /**\n   * Shared DOM insertion function.\n   *\n   * @param {Vue} vm\n   * @param {Element} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition]\n   * @param {Function} op1 - op for non-transition insert\n   * @param {Function} op2 - op for transition insert\n   * @return vm\n   */\n\n  function insert(vm, target, cb, withTransition, op1, op2) {\n    target = query(target);\n    var targetIsDetached = !inDoc(target);\n    var op = withTransition === false || targetIsDetached ? op1 : op2;\n    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n    if (vm._isFragment) {\n      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n        op(node, target, vm);\n      });\n      cb && cb();\n    } else {\n      op(vm.$el, target, vm, cb);\n    }\n    if (shouldCallHook) {\n      vm._callHook('attached');\n    }\n    return vm;\n  }\n\n  /**\n   * Check for selectors\n   *\n   * @param {String|Element} el\n   */\n\n  function query(el) {\n    return typeof el === 'string' ? document.querySelector(el) : el;\n  }\n\n  /**\n   * Append operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function append(el, target, vm, cb) {\n    target.appendChild(el);\n    if (cb) cb();\n  }\n\n  /**\n   * InsertBefore operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function beforeWithCb(el, target, vm, cb) {\n    before(el, target);\n    if (cb) cb();\n  }\n\n  /**\n   * Remove operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function removeWithCb(el, vm, cb) {\n    remove(el);\n    if (cb) cb();\n  }\n}\n\nfunction eventsAPI (Vue) {\n  /**\n   * Listen on the given `event` with `fn`.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$on = function (event, fn) {\n    (this._events[event] || (this._events[event] = [])).push(fn);\n    modifyListenerCount(this, event, 1);\n    return this;\n  };\n\n  /**\n   * Adds an `event` listener that will be invoked a single\n   * time then automatically removed.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$once = function (event, fn) {\n    var self = this;\n    function on() {\n      self.$off(event, on);\n      fn.apply(this, arguments);\n    }\n    on.fn = fn;\n    this.$on(event, on);\n    return this;\n  };\n\n  /**\n   * Remove the given callback for `event` or all\n   * registered callbacks.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$off = function (event, fn) {\n    var cbs;\n    // all\n    if (!arguments.length) {\n      if (this.$parent) {\n        for (event in this._events) {\n          cbs = this._events[event];\n          if (cbs) {\n            modifyListenerCount(this, event, -cbs.length);\n          }\n        }\n      }\n      this._events = {};\n      return this;\n    }\n    // specific event\n    cbs = this._events[event];\n    if (!cbs) {\n      return this;\n    }\n    if (arguments.length === 1) {\n      modifyListenerCount(this, event, -cbs.length);\n      this._events[event] = null;\n      return this;\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        modifyListenerCount(this, event, -1);\n        cbs.splice(i, 1);\n        break;\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Trigger an event on self.\n   *\n   * @param {String|Object} event\n   * @return {Boolean} shouldPropagate\n   */\n\n  Vue.prototype.$emit = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    var cbs = this._events[event];\n    var shouldPropagate = isSource || !cbs;\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      // this is a somewhat hacky solution to the question raised\n      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n      // the propagation handling is somewhat broken. Therefore we\n      // need to treat these inline callbacks differently.\n      var hasParentCbs = isSource && cbs.some(function (cb) {\n        return cb._fromParent;\n      });\n      if (hasParentCbs) {\n        shouldPropagate = false;\n      }\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        var cb = cbs[i];\n        var res = cb.apply(this, args);\n        if (res === true && (!hasParentCbs || cb._fromParent)) {\n          shouldPropagate = true;\n        }\n      }\n    }\n    return shouldPropagate;\n  };\n\n  /**\n   * Recursively broadcast an event to all children instances.\n   *\n   * @param {String|Object} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$broadcast = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    // if no child has registered for this event,\n    // then there's no need to broadcast.\n    if (!this._eventsCount[event]) return;\n    var children = this.$children;\n    var args = toArray(arguments);\n    if (isSource) {\n      // use object event to indicate non-source emit\n      // on children\n      args[0] = { name: event, source: this };\n    }\n    for (var i = 0, l = children.length; i < l; i++) {\n      var child = children[i];\n      var shouldPropagate = child.$emit.apply(child, args);\n      if (shouldPropagate) {\n        child.$broadcast.apply(child, args);\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Recursively propagate an event up the parent chain.\n   *\n   * @param {String} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$dispatch = function (event) {\n    var shouldPropagate = this.$emit.apply(this, arguments);\n    if (!shouldPropagate) return;\n    var parent = this.$parent;\n    var args = toArray(arguments);\n    // use object event to indicate non-source emit\n    // on parents\n    args[0] = { name: event, source: this };\n    while (parent) {\n      shouldPropagate = parent.$emit.apply(parent, args);\n      parent = shouldPropagate ? parent.$parent : null;\n    }\n    return this;\n  };\n\n  /**\n   * Modify the listener counts on all parents.\n   * This bookkeeping allows $broadcast to return early when\n   * no child has listened to a certain event.\n   *\n   * @param {Vue} vm\n   * @param {String} event\n   * @param {Number} count\n   */\n\n  var hookRE = /^hook:/;\n  function modifyListenerCount(vm, event, count) {\n    var parent = vm.$parent;\n    // hooks do not get broadcasted so no need\n    // to do bookkeeping for them\n    if (!parent || !count || hookRE.test(event)) return;\n    while (parent) {\n      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n      parent = parent.$parent;\n    }\n  }\n}\n\nfunction lifecycleAPI (Vue) {\n  /**\n   * Set instance target element and kick off the compilation\n   * process. The passed in `el` can be a selector string, an\n   * existing Element, or a DocumentFragment (for block\n   * instances).\n   *\n   * @param {Element|DocumentFragment|string} el\n   * @public\n   */\n\n  Vue.prototype.$mount = function (el) {\n    if (this._isCompiled) {\n      process.env.NODE_ENV !== 'production' && warn('$mount() should be called only once.', this);\n      return;\n    }\n    el = query(el);\n    if (!el) {\n      el = document.createElement('div');\n    }\n    this._compile(el);\n    this._initDOMHooks();\n    if (inDoc(this.$el)) {\n      this._callHook('attached');\n      ready.call(this);\n    } else {\n      this.$once('hook:attached', ready);\n    }\n    return this;\n  };\n\n  /**\n   * Mark an instance as ready.\n   */\n\n  function ready() {\n    this._isAttached = true;\n    this._isReady = true;\n    this._callHook('ready');\n  }\n\n  /**\n   * Teardown the instance, simply delegate to the internal\n   * _destroy.\n   *\n   * @param {Boolean} remove\n   * @param {Boolean} deferCleanup\n   */\n\n  Vue.prototype.$destroy = function (remove, deferCleanup) {\n    this._destroy(remove, deferCleanup);\n  };\n\n  /**\n   * Partially compile a piece of DOM and return a\n   * decompile function.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host]\n   * @param {Object} [scope]\n   * @param {Fragment} [frag]\n   * @return {Function}\n   */\n\n  Vue.prototype.$compile = function (el, host, scope, frag) {\n    return compile(el, this.$options, true)(this, el, host, scope, frag);\n  };\n}\n\n/**\n * The exposed Vue constructor.\n *\n * API conventions:\n * - public API methods/properties are prefixed with `$`\n * - internal methods/properties are prefixed with `_`\n * - non-prefixed properties are assumed to be proxied user\n *   data.\n *\n * @constructor\n * @param {Object} [options]\n * @public\n */\n\nfunction Vue(options) {\n  this._init(options);\n}\n\n// install internals\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nmiscMixin(Vue);\n\n// install instance APIs\ndataAPI(Vue);\ndomAPI(Vue);\neventsAPI(Vue);\nlifecycleAPI(Vue);\n\nvar slot = {\n\n  priority: SLOT,\n  params: ['name'],\n\n  bind: function bind() {\n    // this was resolved during component transclusion\n    var name = this.params.name || 'default';\n    var content = this.vm._slotContents && this.vm._slotContents[name];\n    if (!content || !content.hasChildNodes()) {\n      this.fallback();\n    } else {\n      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n    }\n  },\n\n  compile: function compile(content, context, host) {\n    if (content && context) {\n      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n        // if the inserted slot has v-if\n        // inject fallback content as the v-else\n        var elseBlock = document.createElement('template');\n        elseBlock.setAttribute('v-else', '');\n        elseBlock.innerHTML = this.el.innerHTML;\n        // the else block should be compiled in child scope\n        elseBlock._context = this.vm;\n        content.appendChild(elseBlock);\n      }\n      var scope = host ? host._scope : this._scope;\n      this.unlink = context.$compile(content, host, scope, this._frag);\n    }\n    if (content) {\n      replace(this.el, content);\n    } else {\n      remove(this.el);\n    }\n  },\n\n  fallback: function fallback() {\n    this.compile(extractContent(this.el, true), this.vm);\n  },\n\n  unbind: function unbind() {\n    if (this.unlink) {\n      this.unlink();\n    }\n  }\n};\n\nvar partial = {\n\n  priority: PARTIAL,\n\n  params: ['name'],\n\n  // watch changes to name for dynamic partials\n  paramWatchers: {\n    name: function name(value) {\n      vIf.remove.call(this);\n      if (value) {\n        this.insert(value);\n      }\n    }\n  },\n\n  bind: function bind() {\n    this.anchor = createAnchor('v-partial');\n    replace(this.el, this.anchor);\n    this.insert(this.params.name);\n  },\n\n  insert: function insert(id) {\n    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n    if (partial) {\n      this.factory = new FragmentFactory(this.vm, partial);\n      vIf.insert.call(this);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n  }\n};\n\nvar elementDirectives = {\n  slot: slot,\n  partial: partial\n};\n\nvar convertArray = vFor._postProcess;\n\n/**\n * Limit filter for arrays\n *\n * @param {Number} n\n * @param {Number} offset (Decimal expected)\n */\n\nfunction limitBy(arr, n, offset) {\n  offset = offset ? parseInt(offset, 10) : 0;\n  n = toNumber(n);\n  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} search\n * @param {String} [delimiter]\n * @param {String} ...dataKeys\n */\n\nfunction filterBy(arr, search, delimiter) {\n  arr = convertArray(arr);\n  if (search == null) {\n    return arr;\n  }\n  if (typeof search === 'function') {\n    return arr.filter(search);\n  }\n  // cast to lowercase string\n  search = ('' + search).toLowerCase();\n  // allow optional `in` delimiter\n  // because why not\n  var n = delimiter === 'in' ? 3 : 2;\n  // extract and flatten keys\n  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n  var res = [];\n  var item, key, val, j;\n  for (var i = 0, l = arr.length; i < l; i++) {\n    item = arr[i];\n    val = item && item.$value || item;\n    j = keys.length;\n    if (j) {\n      while (j--) {\n        key = keys[j];\n        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n          res.push(item);\n          break;\n        }\n      }\n    } else if (contains(item, search)) {\n      res.push(item);\n    }\n  }\n  return res;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String|Array<String>|Function} ...sortKeys\n * @param {Number} [order]\n */\n\nfunction orderBy(arr) {\n  var comparator = null;\n  var sortKeys = undefined;\n  arr = convertArray(arr);\n\n  // determine order (last argument)\n  var args = toArray(arguments, 1);\n  var order = args[args.length - 1];\n  if (typeof order === 'number') {\n    order = order < 0 ? -1 : 1;\n    args = args.length > 1 ? args.slice(0, -1) : args;\n  } else {\n    order = 1;\n  }\n\n  // determine sortKeys & comparator\n  var firstArg = args[0];\n  if (!firstArg) {\n    return arr;\n  } else if (typeof firstArg === 'function') {\n    // custom comparator\n    comparator = function (a, b) {\n      return firstArg(a, b) * order;\n    };\n  } else {\n    // string keys. flatten first\n    sortKeys = Array.prototype.concat.apply([], args);\n    comparator = function (a, b, i) {\n      i = i || 0;\n      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n    };\n  }\n\n  function baseCompare(a, b, sortKeyIndex) {\n    var sortKey = sortKeys[sortKeyIndex];\n    if (sortKey) {\n      if (sortKey !== '$key') {\n        if (isObject(a) && '$value' in a) a = a.$value;\n        if (isObject(b) && '$value' in b) b = b.$value;\n      }\n      a = isObject(a) ? getPath(a, sortKey) : a;\n      b = isObject(b) ? getPath(b, sortKey) : b;\n    }\n    return a === b ? 0 : a > b ? order : -order;\n  }\n\n  // sort on a copy to avoid mutating original array\n  return arr.slice().sort(comparator);\n}\n\n/**\n * String contain helper\n *\n * @param {*} val\n * @param {String} search\n */\n\nfunction contains(val, search) {\n  var i;\n  if (isPlainObject(val)) {\n    var keys = Object.keys(val);\n    i = keys.length;\n    while (i--) {\n      if (contains(val[keys[i]], search)) {\n        return true;\n      }\n    }\n  } else if (isArray(val)) {\n    i = val.length;\n    while (i--) {\n      if (contains(val[i], search)) {\n        return true;\n      }\n    }\n  } else if (val != null) {\n    return val.toString().toLowerCase().indexOf(search) > -1;\n  }\n}\n\nvar digitsRE = /(\\d{3})(?=\\d)/g;\n\n// asset collections must be a plain object.\nvar filters = {\n\n  orderBy: orderBy,\n  filterBy: filterBy,\n  limitBy: limitBy,\n\n  /**\n   * Stringify value.\n   *\n   * @param {Number} indent\n   */\n\n  json: {\n    read: function read(value, indent) {\n      return typeof value === 'string' ? value : JSON.stringify(value, null, arguments.length > 1 ? indent : 2);\n    },\n    write: function write(value) {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return value;\n      }\n    }\n  },\n\n  /**\n   * 'abc' => 'Abc'\n   */\n\n  capitalize: function capitalize(value) {\n    if (!value && value !== 0) return '';\n    value = value.toString();\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  },\n\n  /**\n   * 'abc' => 'ABC'\n   */\n\n  uppercase: function uppercase(value) {\n    return value || value === 0 ? value.toString().toUpperCase() : '';\n  },\n\n  /**\n   * 'AbC' => 'abc'\n   */\n\n  lowercase: function lowercase(value) {\n    return value || value === 0 ? value.toString().toLowerCase() : '';\n  },\n\n  /**\n   * 12345 => $12,345.00\n   *\n   * @param {String} sign\n   * @param {Number} decimals Decimal places\n   */\n\n  currency: function currency(value, _currency, decimals) {\n    value = parseFloat(value);\n    if (!isFinite(value) || !value && value !== 0) return '';\n    _currency = _currency != null ? _currency : '$';\n    decimals = decimals != null ? decimals : 2;\n    var stringified = Math.abs(value).toFixed(decimals);\n    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n    var i = _int.length % 3;\n    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n    var _float = decimals ? stringified.slice(-1 - decimals) : '';\n    var sign = value < 0 ? '-' : '';\n    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n  },\n\n  /**\n   * 'item' => 'items'\n   *\n   * @params\n   *  an array of strings corresponding to\n   *  the single, double, triple ... forms of the word to\n   *  be pluralized. When the number to be pluralized\n   *  exceeds the length of the args, it will use the last\n   *  entry in the array.\n   *\n   *  e.g. ['single', 'double', 'triple', 'multiple']\n   */\n\n  pluralize: function pluralize(value) {\n    var args = toArray(arguments, 1);\n    var length = args.length;\n    if (length > 1) {\n      var index = value % 10 - 1;\n      return index in args ? args[index] : args[length - 1];\n    } else {\n      return args[0] + (value === 1 ? '' : 's');\n    }\n  },\n\n  /**\n   * Debounce a handler function.\n   *\n   * @param {Function} handler\n   * @param {Number} delay = 300\n   * @return {Function}\n   */\n\n  debounce: function debounce(handler, delay) {\n    if (!handler) return;\n    if (!delay) {\n      delay = 300;\n    }\n    return _debounce(handler, delay);\n  }\n};\n\nfunction installGlobalAPI (Vue) {\n  /**\n   * Vue and every constructor that extends Vue has an\n   * associated options object, which can be accessed during\n   * compilation steps as `this.constructor.options`.\n   *\n   * These can be seen as the default options of every\n   * Vue instance.\n   */\n\n  Vue.options = {\n    directives: directives,\n    elementDirectives: elementDirectives,\n    filters: filters,\n    transitions: {},\n    components: {},\n    partials: {},\n    replace: true\n  };\n\n  /**\n   * Expose useful internals\n   */\n\n  Vue.util = util;\n  Vue.config = config;\n  Vue.set = set;\n  Vue['delete'] = del;\n  Vue.nextTick = nextTick;\n\n  /**\n   * The following are exposed for advanced usage / plugins\n   */\n\n  Vue.compiler = compiler;\n  Vue.FragmentFactory = FragmentFactory;\n  Vue.internalDirectives = internalDirectives;\n  Vue.parsers = {\n    path: path,\n    text: text,\n    template: template,\n    directive: directive,\n    expression: expression\n  };\n\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   *\n   * @param {Object} extendOptions\n   */\n\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var isFirstExtend = Super.cid === 0;\n    if (isFirstExtend && extendOptions._Ctor) {\n      return extendOptions._Ctor;\n    }\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n        name = null;\n      }\n    }\n    var Sub = createClass(name || 'VueComponent');\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(Super.options, extendOptions);\n    Sub['super'] = Super;\n    // allow further extension\n    Sub.extend = Super.extend;\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n    // cache constructor\n    if (isFirstExtend) {\n      extendOptions._Ctor = Sub;\n    }\n    return Sub;\n  };\n\n  /**\n   * A function that returns a sub-class constructor with the\n   * given name. This gives us much nicer output when\n   * logging instances in the console.\n   *\n   * @param {String} name\n   * @return {Function}\n   */\n\n  function createClass(name) {\n    /* eslint-disable no-new-func */\n    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n    /* eslint-enable no-new-func */\n  }\n\n  /**\n   * Plugin system\n   *\n   * @param {Object} plugin\n   */\n\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return;\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this;\n  };\n\n  /**\n   * Apply a global mixin by merging it into the default\n   * options.\n   */\n\n  Vue.mixin = function (mixin) {\n    Vue.options = mergeOptions(Vue.options, mixin);\n  };\n\n  /**\n   * Create asset registration methods with the following\n   * signature:\n   *\n   * @param {String} id\n   * @param {*} definition\n   */\n\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (id, definition) {\n      if (!definition) {\n        return this.options[type + 's'][id];\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          if (!definition.name) {\n            definition.name = id;\n          }\n          definition = Vue.extend(definition);\n        }\n        this.options[type + 's'][id] = definition;\n        return definition;\n      }\n    };\n  });\n\n  // expose internal transition API\n  extend(Vue.transition, transition);\n}\n\ninstallGlobalAPI(Vue);\n\nVue.version = '1.0.26';\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue);\n    } else if (process.env.NODE_ENV !== 'production' && inBrowser && /Chrome\\/\\d+/.test(window.navigator.userAgent)) {\n      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n    }\n  }\n}, 0);\n\nmodule.exports = Vue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue/dist/vue.common.js\n ** module id = 8\n ** module chunks = 2\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader/lib/css-base.js\n ** module id = 9\n ** module chunks = 2\n **/","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nvar stylesInDom = {},\n\tmemoize = function(fn) {\n\t\tvar memo;\n\t\treturn function () {\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\t\treturn memo;\n\t\t};\n\t},\n\tisOldIE = memoize(function() {\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\n\t}),\n\tgetHeadElement = memoize(function () {\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\n\t}),\n\tsingletonElement = null,\n\tsingletonCounter = 0,\n\tstyleElementsInsertedAtTop = [];\n\nmodule.exports = function(list, options) {\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the bottom of <head>.\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list);\n\taddStylesToDom(styles, options);\n\n\treturn function update(newList) {\n\t\tvar mayRemove = [];\n\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\n\t\t\t\t\tdomStyle.parts[j]();\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction addStylesToDom(styles, options) {\n\tfor(var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles(list) {\n\tvar styles = [];\n\tvar newStyles = {};\n\tfor(var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\t\tif(!newStyles[id])\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse\n\t\t\tnewStyles[id].parts.push(part);\n\t}\n\treturn styles;\n}\n\nfunction insertStyleElement(options, styleElement) {\n\tvar head = getHeadElement();\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\tif (options.insertAt === \"top\") {\n\t\tif(!lastStyleElementInsertedAtTop) {\n\t\t\thead.insertBefore(styleElement, head.firstChild);\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\thead.appendChild(styleElement);\n\t\t}\n\t\tstyleElementsInsertedAtTop.push(styleElement);\n\t} else if (options.insertAt === \"bottom\") {\n\t\thead.appendChild(styleElement);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement(styleElement) {\n\tstyleElement.parentNode.removeChild(styleElement);\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\n\tif(idx >= 0) {\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement(options) {\n\tvar styleElement = document.createElement(\"style\");\n\tstyleElement.type = \"text/css\";\n\tinsertStyleElement(options, styleElement);\n\treturn styleElement;\n}\n\nfunction addStyle(obj, options) {\n\tvar styleElement, update, remove;\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n\t} else {\n\t\tstyleElement = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, styleElement);\n\t\tremove = function() {\n\t\t\tremoveStyleElement(styleElement);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle(newObj) {\n\t\tif(newObj) {\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\n\t\t\t\treturn;\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = styleElement.childNodes;\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\t\tif (childNodes.length) {\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyleElement.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag(styleElement, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\tvar sourceMap = obj.sourceMap;\n\n\tif (media) {\n\t\tstyleElement.setAttribute(\"media\", media);\n\t}\n\n\tif (sourceMap) {\n\t\t// https://developer.chrome.com/devtools/docs/javascript-debugging\n\t\t// this makes source maps inside style tags work properly in Chrome\n\t\tcss += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */';\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = css;\n\t} else {\n\t\twhile(styleElement.firstChild) {\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\n\t\t}\n\t\tstyleElement.appendChild(document.createTextNode(css));\n\t}\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-style-loader/addStyles.js\n ** module id = 10\n ** module chunks = 2\n **/"],"sourceRoot":""}